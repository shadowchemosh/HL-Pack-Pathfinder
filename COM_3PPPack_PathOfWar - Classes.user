<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_3PPPack_PathOfWar - Classes"/>
  <fileinfo>
    <info_author>Tim Shadow
      Email: ShadowChemosh@yahoo.com</info_author>
    <info_history>October 12, 2014
      -Added stalker class. (Shatterjack).

      August 13, 2013 - Tim Shadow
      -Created New</info_history>
    </fileinfo>
  <thing id="cHelpPW1" name="Warlord" compset="Class" uniqueness="unique">
    <fieldval field="cAbbr" value="War"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cSpecSing" value="Gambit"/>
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="cSBonFtNm" value="Teamwork Feats"/>
    <fieldval field="cSCRNumDce" value="5"/>
    <fieldval field="cSCRDceSiz" value="6"/>
    <fieldval field="cSCRMult" value="10"/>
    <fieldval field="srcPageNum" value="14"/>
    <arrayval field="cCustTot" index="3" value="3"/>
    <arrayval field="cCustTot" index="7" value="4"/>
    <arrayval field="cCustTot" index="11" value="5"/>
    <arrayval field="cCustTot" index="15" value="6"/>
    <arrayval field="cCustTot" index="19" value="7"/>
    <arrayval field="cBonFtTot" index="0" value="1"/>
    <arrayval field="cBonFtTot" index="5" value="2"/>
    <arrayval field="cSBonFtTot" index="2" value="1"/>
    <arrayval field="cBonFtTot" index="9" value="3"/>
    <arrayval field="cBonFtTot" index="13" value="4"/>
    <arrayval field="cBonFtTot" index="17" value="5"/>
    <arrayval field="cCustTot" index="0" value="2"/>
    <usesource source="srcPathOfW"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="fCategory" tag="Combat"/>
    <tag group="ClassSkill" tag="skHandleAn"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skRide"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="ClassSkill" tag="skKnowEng"/>
    <tag group="fCategory" tag="Teamwork"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="cWill" tag="Poor"/>
    <tag group="Classes" tag="PWWarlord" name="Warlord"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="AgeColumn" tag="2"/>
    <tag group="fCatSec" tag="Teamwork"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skKnowHist"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cFort" tag="Good"/>
    <bootstrap thing="cPW1WarPre">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPW1MasWar">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cPW1DulBoo">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPW1BatPro">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPW1DuaSta">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPW1Gambit">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW1Presen">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPW1IndPre">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPW1ForPer">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPW1Warlea">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPW1TacFla">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPW1BatPro">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPW1RalPre">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <bootstrap thing="cCfgPW1"></bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <bootstrap thing="fArmMedium"></bootstrap>
    <bootstrap thing="fWepMart"></bootstrap>
    <bootstrap thing="cPW1DulBoo">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="fArmShield"></bootstrap>
    <bootstrap thing="cPW1Presen">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPW1TacAss">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPW1VicPre">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPW1Warlea">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPW1Warlea">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPW1Warlea">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPW1Warlea">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPW1DuaPre">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPW1BatPro">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPW1DulBoo">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPW1ImpWar">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    </thing>
  <thing id="cPWWarlord" name="Warlord" description="Dynamos on the field of combat, warlords walk the line of victory and ruin through their determination to achieve glory. Where some may talk tactics, the warlord dives in. Where some may fight in strategic units, the warlord shines alone as an inspirational beacon on the field of combat; to be a warlord is to be a lord of war.{br}{br}{b}Adventures{/b}: Warlords adventure for many reasons, but one reason that will always be prominent is the desire to test their skill against the world&apos;s most dangerous opponents, to show their strength to themselves and to the world. Others may do this for profit, others for fun, others for revenge, but it is always certain that a warlord seeks the glory and honor only a battle well-fought can bring.{br}{br}{b}Characteristics{/b}: Brash arrogance and an irrepressible nature are hallmarks of the warlord. A devil-maycare warrior, many warlords are as fearless as they are fierce, and they both love life and live their lives to the fullest. Hedonists in some extreme cases, the warlord is drawn to combat as a moth to the flame.{br}{br}{b}Alignment{/b}: Any. Warlords can come from any and all ethical backgrounds, though they do tend more towards a chaotic alignment. Lawfully aligned warlords are rarer, and tend to compose their impulses through strict discipline.\n\n{b}Role{/b}: Striker. As a very aggressive class, the warlord seeks to bring martial power to the field in the form of overwhelming force and ferocity. Additionally, warlords make excellent leaders, as they provide some passive benefits from their class features as well as active benefits from discipline choices and their gambits." compset="ClassLevel" maxlimit="20">
    <usesource source="srcPathOfW"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cHelpPW1"></bootstrap>
    <link linkage="helper" thing="cHelpPW1"/>
    </thing>
  <thing id="cCfgPW1" name="Warlord Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpPW1"></bootstrap>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="cPW1Gambit" name="Warlord’s Gambit" description="At his core, the warlord is a warrior who relies on both skill and daring; without this he is but any other combatant. By setting himself to danger, does his true skill shine, or so the motto of the warlord goes. At 1st level, a warlord selects two gambits as methods by which the warlord can recover expended maneuvers. Each gambit possesses three aspects - a {i}risk{/i}, a {i}rake{/i}, and a {i}reward{/i}.\n\nEach gambit&apos;s {i}risk{/i} describes an action that the warlord must undertake in order to attempt to recover an expended maneuver. The warlord begins a gambit as a swift action, effectively diving recklessly into the act he is attempting. The warlord then performs the action described in the gambit, and if he is successful, he regains maneuvers (see below). If he is not, he suffers the {i}rake{/i} of the gambit and only regains a single maneuver of his choosing. While performing a gambit, the warlord may add his Charisma modifier to the d20 check(s) to aid in accomplishing the gambit as a luck bonus. A warlord may attempt the actions of a gambit, but without declaring the attempt a gambit attempt by spending a swift action to do so, the character does not regain any maneuvers nor does he suffer a rake for failure. The character may initiate a maneuver while performing a gambit (if the maneuver helps him accomplish it) but he may not recover the maneuver used to achieve the gambit as part of the reward.\n\nA gambit&apos;s {i}rake{/i} is the penalty that the warlord suffers if he attempts his gambit and fails, such as failing a trip attempt or failing to strike an opponent with a charge attack. Each gambit possesses a unique {i}reward{/i} that the warlord enjoys for succeeding at that gambit. All gambits possess the same {i}rake{/i}; the warlord only regains a single expended maneuver and suffers a -2 penalty on all d20 rolls for one round. A warlord who succeeds at fulfilling his gambit immediately recovers a number of expended maneuvers equal to his Charisma modifier (minimum 2) and enjoys the unique reward for each gambit. Allies who would witness the successful gambit and receive benefits must be within 60 ft. of the warlord and must be able to see him perform the action. Finally, gambits may not be initiated outside of combat due to their reliance upon the stresses of battle to bring out the best of the warlord.\n\nAt 4th level and every four levels thereafter, the warlord selects adds an additional gambit." compset="ClSpecial" summary="Regain maneuvers by taking risky actions">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPW1AcrGam" name="Acrobatic Gambit" description="{i}Risk{/i}: The warlord attempts an Acrobatics check to move through an opponent&apos;s threatened area.{br}{br}{i}Reward{/i}: The warlord&apos;s brash move allows attacks against the opponent or opponents that the warlord evaded this round to inflict an additional 1d6 + his Charisma modifier points of damage damage upon a successful hit. This damage is not multiplied on a critical hit." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1BraGam" name="Brave Gambit" description="{i}Risk{/i}: The warlord attempts to make a successful charge attack against an opponent (if the character has the ability to make multiple attacks at the end of a charge, the initial first attack must be successful for this gambit’s success).\n\n{i}Reward{/i}: The warlord&apos;s actions embolden his allies and sets his spirit alight with courage; the warlord and his allies gain a morale bonus to damage equal to the warlord&apos;s Charisma modifier on the next attack they make or until the warlord&apos;s next turn." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1CavGam" name="Cavalry Gambit" description="{i}Risk{/i}: The warlord attempts a successful mounted charge attack or overrun maneuver against a target creature.{br}{br}{i}Reward{/i}: The warlord&apos;s opponent&apos;s defense is unbalanced; the warlord and his allies gain a bonus equal to his Charisma modifier on attacks opportunity against that foe until the warlord&apos;s next turn." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1DasGam" name="Dastardly Gambit" description="{i}Risk{/i}: The warlord attempts a successful dirty trick maneuver against an opponent.{br}{br}{i}Reward{/i}: The warlord and his allies are filled with malicious glee to attack the warlord&apos;s foe, and gain his Charisma modifier to damage rolls to a single attack against this target until the warlord&apos;s next turn." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1DueGam" name="Duelist&apos;s Gambit" description="{i}Risk{/i}: The warlord attempts to successfully use the disarm maneuver against an opponent.\n\n{i}Reward{/i}: The warlord&apos;s opponent is disarmed of a weapon and then the warlord may make an immediate attack of opportunity against his foe and gains a morale bonus to damage equal to his Charisma modifier if the attack is successful." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1GatGam" name="Gatecrasher Gambit" description="{i}Risk{/i}: The warlord attempts a successful bull rush maneuver against an opponent.\n\n{i}Reward{/i}: The opponent is so rattled by the warlord’s deft bull rush, that he suffers a penalty equal to the warlord’s Charisma modifier for one round on all d20 checks." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1Presen" name="Tactical Presence" description="At 2nd level, the warlord&apos;s innate charisma allows his very presence to aid and assist not only himself but his allies as well, just by his being around. Adopting a presence is a move-equivalent action, and only one presence may be maintained at any given time. At 7th level, the warlord is capable of adopting a presence as a free action." compset="ClSpecial" summary="Grant bonuses to nearby allies">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1WinPre" name="Winsome Presence" description="The native charisma present within the warlord&apos;s devil-may-care nature is quite pleasing to some when the warlord wishes to present himself so pleasantly. At 2nd level, the warlord may add half of his class level to Diplomacy checks (rounding down) as a circumstance bonus while using this presence." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1IntPre" name="Intimidating Presence" description="The skill in battle that a warlord possesses and the stories told of his battles can strike fear in the hearts of those who come into a warlord&apos;s gaze. At 5th level, the warlord may add half of his class level to Intimidate checks (rounding down) as a circumstance bonus." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1Warlea" name="Warleader" description="The warlord excels in the theater of war because he knows how best to work with his allies. At 3rd level, the warlord becomes an ever more capable commander and may share tactics with his allies. First, the warlord gains a teamwork feat as a bonus feat (he must meet the prerequisites for this feat to select it). As a standard action that the warlord performs, the warlord and allies within 30 ft. of him can share teamwork feats that they possess with each other, acting as if they both possessed the teamwork feat that they are sharing. The warlord can only share one teamwork feat at a time, either one his own (with all allies within 30 ft. of him) or an ally&apos;s (in which case only the warlord receives the ability to use the teamwork feat he does not possess). The warlord and allies retain the use of this feat for 3 + the warlord&apos;s Charisma modifier in rounds. The character may use this ability 1 + Charisma modifier times per day at 3rd level (minimum of 1), and one additional time per day for every four warlord levels the character possesses." compset="ClSpecial" summary="Gain a bonus teamwork feat; share teamwork feats with allies">
    <fieldval field="abRange" value="30"/>
    <fieldval field="abDuration" value="3"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="Usage" tag="Day"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & tagnames[Usage.?]

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      var initMod as number
      call PWgetIMod

      ~ Set daily uses
      field[abValue].value += maximum(1,initMod)
      field[abValue].value += field[xCount].value
      field[trkMax].value += field[abValue].value

      ~ Set range
      field[abDuration].value += initMod]]></eval>
    </thing>
  <thing id="cPW1IndPre" name="Indomitable Presence" description="At 2nd level, the warlord shines as a beacon to his allies on the field of battle, inspiring them to fight with him to their last breath. All allies within 30 ft. of his position gain the benefits of the Die Hard feat, and may add the warlord&apos;s Charisma modifier to Fortitude saves versus death effects, fatigue or exhaustion effects, or poison effects as a morale bonus." compset="ClSpecial" summary="Allies gain Die Hard feat and add your CHA to some Fort saves">
    <fieldval field="abRange" value="30"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abRange" tag="Feet"/>
    </thing>
  <thing id="cPW1GrpGam" name="Grappler Gambit" description="{i}Risk{/i}: The warlord attempts a successful grapple maneuver against an opponent.\n\n{i}Reward{/i}: When the warlord has his enemy pinned and he chooses to inflict damage upon him, the warlord adds a morale bonus to damage equal to his Charisma modifier until the foe successfully escapes the grapple." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1OutGam" name="Outrider&apos;s Gambit" description="{i}Risk{/i}: The warlord attempts a successful ranged attack while on a moving mount (the mount must move 10 ft. or more to use this gambit).\n\n{i}Reward{/i}: The warlord success allows his allies to reap the benefits of his skill; allies who make ranged attacks against this target opponent add the warlord’s Charisma modifier as a morale bonus to their next attack roll." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1PinGam" name="Pinhole Gambit" description="{i}Risk{/i}: The warlord attempts to successfully use a ranged attack against an opponent engaged in melee with an ally.{br}{br}{i}Reward{/i}: The successful and surprising attack against the foe shakes the enemy&apos;s confidence and harms its ability to defend itself; the warlord&apos;s Charisma modifier is applied as a penalty to its Armor Class until the warlord&apos;s next turn." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1RasGam" name="Rascal&apos;s Gambit" description="{i}Risk{/i}: The warlord attempts to successfully feint an opponent.{br}{br}{i}Reward{/i}: The warlord throws off his opponents defenses with his feint, and the foe is considered flat-footed until its next turn." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1RavGam" name="Ravager&apos;s Gambit" description="{i}Risk{/i}: The warlord attempts a successful sunder maneuver against an opponent.{br}{br}{i}Reward{/i}: The warlord&apos;s sundering attack ignores a portion of his foe&apos;s weapon&apos;s hardness equal to his Charisma modifier." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1SweGam" name="Sweeping Gambit" description="{i}Risk{/i}: The warlord attempts a successful trip maneuver against an opponent.\n\n{i}Reward{/i}: The warlord trips his foe and may make an immediate attack of opportunity against that foe, adding his Charisma modifier as a morale bonus to the damage he inflicts if successful." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1UnbGam" name="Unbreakable Gambit" description="{i}Risk{/i}: The warlord attempts to succeed on a Fortitude or Will save against an extraordinary ability, maneuver, power, spell, or spell-like or supernatural ability. The effect in question must be a harmless effect on a failed saving throw. Unlike other gambits, this one can be attempted as an immediate action instead of a swift action.\n\n{i}Reward{/i}: The warlord is emboldened by his ability to resist his opponent&apos;s attack, and regains a number of hit points equal to three times his Charisma modifier." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1VicGam" name="Victory Gambit" description="{i}Risk{/i}: The warlord successfully reduces an opponent to 0 or few hit points with a melee or ranged attack on his turn from either a standard attack or full attack action.{br}{br}{i}Reward{/i}: The warlord and his allies gain a bonus on attack rolls equal to his Charisma modifier on their next attack roll." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPW1RalPre" name="Rallying Presence" description="The sight of a warlord on the battlefield is enough to strengthen the hearts and wills of those who fight beside him in battle. At 5th level, the warlord may add his Charisma modifier as a morale bonus to Will saves versus fear, death effect, or compulsion effects to all allies within 30 ft. of his position. If the warlord maintaining this presence becomes cowed, frightened, panicked or falls prey to a hostile mind-affecting ability (such as one that would stun or daze him), compulsion or death effect, this presence immediately ends." compset="ClSpecial" summary="Allies add your CHA to some Will saves as a morale bonus">
    <fieldval field="abRange" value="30"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abRange" tag="Feet"/>
    </thing>
  <thing id="cPW1VicPre" name="Victorious Presence" description="The preternatural skill at arms that a warlord of at this level possesses is enough to win any battle. At 9th level, any foe that the warlord brings to 0 or fewer hit points in battle immediately fuels his hunger for the win, granting him and his allies within 30 ft. of his position the character&apos;s class level plus Charisma modifier in temporary hit points. These hit points endure until they are lost or until the end of the encounter, whichever occurs first. Damage inflicted on the warlord is deducted from his temporary hit points first before being deducted from his normal hit point total." compset="ClSpecial" summary="You and your allies gain temp HP when you kill a foe">
    <fieldval field="abRange" value="30"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abRange" tag="Feet"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ Calculate HP gained on enemy kill
      field[abValue].value = field[xTotalLev].value
      ~If an archetype needs to replace CHA with another attribute, do it here, or call PWinitMod if it's also replacing the initiating attribute
      field[abValue].value += #attrmod[aCHA]]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[      field[livename].text = field[livename].text & " (" & field[abValue].value & " HP)"]]></eval>
    </thing>
  <thing id="cPW1BatPro" name="Battle Prowess" description="The warlord is a skilled combatant, mixing traditional fighting skills with the skill of his martial discipline training. Choose a discipline, and when the warlord is in a martial stance from this chosen discipline, the character gets the listed bonus (+1 at 5th level, +2 at 12th level, +3 at 19th level) as a competence bonus to attack and damage rolls, CMB rolls, and to his CMD. He may select another discipline at 12th level, and third discipline at 19th level." compset="ClSpecial" summary="Gain combat bonuses while in stance of chosen discipline">
    <fieldval field="usrCandid1" value="component.Simple &amp; PathOfWar.selDisc"/>
    <fieldval field="abValue" value="1"/>
    <fieldval field="abValue2" value="1"/>
    <tag group="abAction" tag="None"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="SpecType" tag="Defense"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue3].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue3].value)

      if (field[xTotalLev].value >= 12) then
        field[abValue].value += field[abValue2].value
      endif
      if (field[xTotalLev].value >= 19) then
        field[abValue].value += field[abValue2].value
      endif

      ~ stop now if discipline not chosen
      doneif (field[usrChosen1].ischosen = 0)

      ~ Stop if we're not in a stance of the chosen discipline
      var IsInStance as number
      var targetDisc as string
      targetDisc = replace(field[usrChosen1].chosen.tagids[Discipline.?],"Discipline.","",0)
      call PWinDSta
      doneif (IsInStance = 0)

      ~ Apply bonus to attack, damage, and CMD
      #applybonus[BonComp,hero.childfound[Attack],field[abValue].value]
      #applybonus[BonComp,hero.childfound[Damage],field[abValue].value]
      #applybonus[BonComp,hero.childfound[ManeuvDef],field[abValue].value]]]></eval>
    </thing>
  <thing id="cPW1DulBoo" name="Dual Boost" description="Knowledgeable in the ways of making the best of any situation through pluck and verve, the warlord is capable of applying multiple martial principles simultaneously. At 6th level, once per day the warlord may initiate two boost type maneuvers as part of the same swift action. He may use this an additional time per day at 12th level, and three times per day at 18th level." compset="ClSpecial" summary="Initiate two boosts with the same swift action">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & tagnames[Usage.?]

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[trkMax].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPW1TacAss" name="Tactical Assistance" description="At 8th level, the warlord&apos;s gift for helping his allies in combat improves. The character may use the Aid Another action for any single ally within 30 ft. of his position as a move action, and he uses his Charisma modifier for the bonus he grants to his ally&apos;s action (min +2)." compset="ClSpecial" summary="Use Aid Another action at range">
    <fieldval field="abRange" value="30"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="Move"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abRange" tag="Feet"/>
    </thing>
  <thing id="cPW1ImpWar" name="Improved Warleader" description="At 13th level, the warlord&apos;s excellence in battle has enabled him to utilize the tactical skills of his allies as well as his own with greater speed. The warlord may now use his warleader class feature as a move action." compset="ClSpecial" summary="Use Warleader as a move action">
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Change Warleader's action from Standard to Move
      perform hero.childfound[cPW1Warlea].delete[abAction.Standard]
      perform hero.childfound[cPW1Warlea].delete[abAction.Move]]]></eval>
    </thing>
  <thing id="cPW1JacGam" name="Jackpot Gambit" description="At 15th level, the warlord is the undeniable master of his gambits, reaping the greatest rewards for his risks. When the character succeeds on a gambit, he recovers all expended maneuvers instead of the normal allotment equal to his Charisma modifier" compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW1DuaPre" name="Dual Tactical Presence" description="At 11th level, the sight of the warlord on a field of combat inspires multiple feelings in those around him. He may select and use two presences, activating them together as a free action." compset="ClSpecial" summary="Use two Tactical Presences">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="Free"/>
    </thing>
  <thing id="cPW1DuaSta" name="Dual Stance" description="At 20th level, the warlord&apos;s ability to use his stances improves, allowing him to gain the benefits of two known stances simultaneously from the warlord class. He must still adopt each stance individually, requiring him to expend one swift action for each stance." compset="ClSpecial" summary="You can maintain two martial stances at once">
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Give the abilit to have two stances
      perform hero.child[cCfgPW1].assign[PathOfWar.StanceUp]]]></eval>
    </thing>
  <thing id="cPW1ForPer" name="Force of Personality" description="At 3rd level, the warlord&apos;s forceful personality and bold, headstrong nature assist him in resisting the influence of others. Where others use personal serenity, awareness of the world around them, or plain old sensibility, the warlord gets by with endless nerve. The warlord may add his Charisma modifier to his Wisdom modifier to determine his Will save bonus. If the character is ever able to add his Charisma modifier to his Will save through use of another ability (for example. the paladin&apos;s divine grace) he may only add his Charisma modifier once to his Will save.\n\n{b}NOTE:{/b} Currently, we cannot reliably determine if Charisma is already being added to the saving throw, so if you already have an ability that duplicates this effect, you will need to add an adjustment to give yourself a penalty equal to the bonus from this ability, in order to negate the illegal bonus." compset="ClSpecial" summary="Add CHA to Will saves">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="10000">~ Get our CHA mod (or other, if an archetype has changed our initiating attribute)
      var initMod as number
      call PWgetIMod
      field[abValue].value += initMod</eval>
    <eval phase="PostAttr" priority="20000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      hero.child[svWill].field[Bonus].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPW1TacFla" name="Tactical Flanker" description="At 4th level, the warlord is exceptionally gifted at working with his allies to bring down opponents and his skills assist any who ally with him. When flanking a target with an allied creature, both the warlord and the ally may use the warlord&apos;s Charisma modifier (min +2) for the bonus they receive on flanking their opponent." compset="ClSpecial" summary="Use CHA mod for flanking bonus">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Get our CHA mod (or other, if an archetype has replaced initiator mod)
      var initMod as number
      call PWgetIMod

      ~ Substitute flanking bonus with init mod, if higher
      perform hero.childfound[pstFlankin].setfocus
      doneif (state.isfocus = 0)
      var fBon as number
      fBon = focus.field[abValue2].value
      doneif (fBon > initMod)
      focus.field[abValue2].value = initMod

      ~ The flanking script has already set the attack bonus, so we need to increase the bonus by the difference between our init mod and the normal flanking bonus
      doneif (focus.field[pIsOn].value = 0)
      hero.child[Attack].field[atmBonus].value += (initMod - fBon)]]></eval>
    </thing>
  <thing id="cPW1WarPre" name="Warlord&apos;s Presence" description="At 15th level, the warlord is capable using three of his presences together at the same time, activating them together as a free action." compset="ClSpecial" summary="Use three Tactical Presences">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="Free"/>
    </thing>
  <thing id="cPW1MasWar" name="Master Warleader" description="At 17th level, the warlord&apos;s peerless ability in the theater of war has enabled him to utilize the tactical skills of his allies as well as his own with the greatest of speed. The warlord may now use his warleader class feature as a swift action." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Change Warleader's action from Move to Swift
      perform hero.childfound[cPW1Warlea].delete[abAction.Move]
      perform hero.childfound[cPW1Warlea].delete[abAction.Swift]]]></eval>
    </thing>
  <thing id="cPW1DeaGam" name="Deadeye Gambit" description="{i}Risk{/i}: The warlord attempts a successful called shot maneuver on a target opponent.\n\n{i}Reward{/i}: The warlord&apos;s incredible accuracy livens up his allies and restores to them a measure of spirit; the warlord and his allies gain temporary hit points equal to the warlord&apos;s Charisma modifier (persisting until the end of the encounter or until they are used), helping them ignore the pains of their injuries and continue the fight." compset="CustomSpec" uniqueness="unique">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPW1"/>
    </thing>
  <thing id="cPWStalker" name="Stalker" description="An effective warrior wielding both skill and stealth, the stalker is a martial disciple who battles in the deep shadows and the hidden underworld of night. Through rigorous training and deep, intuitive instincts, the stalker is a trained killer whose very art is considered illegal in some places. Part mystic, part warrior, and part assassin, the stalker&apos;s arts are varied, but always deadly.\n\n{b}Adventures:{/b} Stalkers adventure for many reasons, but most do so either as part of a guild of fellow stalkers on a mission, for money and profit, or for deeper, often darker purposes of the heart. Some adventure for the test of their skill, but this is slightly rarer; whatever the reason, the path of the stalker is often a self-absorbed one.\n\n{b}Characteristics:{/b} Stalkers universally are very introspective people, they rely so heavily upon their intuitive reactions to situations and their heightened reflexes through athletic skill that they usually have an air of detachment. Some are braggarts, but many are quiet and calm, paying close attention to their surroundings should they need to use their lethal skills.\n\n{b}Alignment:{/b} Any. Stalkers do not lean to any particular alignment trend, running the gamut of all walks of life.\n\n{b}Role:{/b} Striker. In the party, the stalker follows the heavily armored fighter into combat, using them as shields and distractions so they can inflict maximum damage on their foes. In addition, the stalker can serve quite well as the party scout, finding danger and warning the party before they stumble upon it." compset="ClassLevel" maxlimit="20">
    <usesource source="srcPathOfW"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cHelpPW2"></bootstrap>
    <link linkage="helper" thing="cHelpPW2"/>
    </thing>
  <thing id="cCfgPW2" name="Stalker Maneuvers" compset="Configure" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="Discipline" tag="SolarWind"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <tag group="Discipline" tag="BrokenBlad"/>
    <tag group="Discipline" tag="SteelSerp"/>
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <bootstrap thing="mHelpPW2"></bootstrap>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    </thing>
  <thing id="cHelpPW2" name="Stalker" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cSkills" value="6"/>
    <fieldval field="cSpecSing" value="Stalker Art"/>
    <fieldval field="cSpecName" value="Stalker Arts"/>
    <fieldval field="cAbbr" value="Stk"/>
    <fieldval field="cSpec3rdSi" value="Rogue Talent"/>
    <fieldval field="cSCRNumDce" value="4"/>
    <fieldval field="cSCRDceSiz" value="6"/>
    <fieldval field="cSCRMult" value="10"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="srcPageNum" value="4"/>
    <arrayval field="cCustTot" index="0" value="1"/>
    <arrayval field="cKnowTot" index="0" value="6"/>
    <arrayval field="cKnowTot" index="0" column="1" value="4"/>
    <arrayval field="cKnowTot" index="0" column="2" value="1"/>
    <arrayval field="cKnowTot" index="1" value="7"/>
    <arrayval field="cKnowTot" index="1" column="1" value="4"/>
    <arrayval field="cKnowTot" index="1" column="2" value="2"/>
    <arrayval field="cKnowTot" index="2" value="8"/>
    <arrayval field="cKnowTot" index="2" column="1" value="5"/>
    <arrayval field="cKnowTot" index="2" column="2" value="2"/>
    <arrayval field="cKnowTot" index="3" value="9"/>
    <arrayval field="cKnowTot" index="3" column="1" value="5"/>
    <arrayval field="cKnowTot" index="3" column="2" value="2"/>
    <arrayval field="cKnowTot" index="4" value="10"/>
    <arrayval field="cKnowTot" index="4" column="1" value="6"/>
    <arrayval field="cKnowTot" index="4" column="2" value="3"/>
    <arrayval field="cKnowTot" index="5" value="11"/>
    <arrayval field="cKnowTot" index="5" column="1" value="6"/>
    <arrayval field="cKnowTot" index="5" column="2" value="3"/>
    <arrayval field="cKnowTot" index="6" value="12"/>
    <arrayval field="cKnowTot" index="6" column="1" value="6"/>
    <arrayval field="cKnowTot" index="6" column="2" value="3"/>
    <arrayval field="cKnowTot" index="7" value="13"/>
    <arrayval field="cKnowTot" index="7" column="1" value="7"/>
    <arrayval field="cKnowTot" index="7" column="2" value="4"/>
    <arrayval field="cKnowTot" index="8" value="14"/>
    <arrayval field="cKnowTot" index="8" column="1" value="7"/>
    <arrayval field="cKnowTot" index="8" column="2" value="4"/>
    <arrayval field="cKnowTot" index="9" value="15"/>
    <arrayval field="cKnowTot" index="9" column="1" value="8"/>
    <arrayval field="cKnowTot" index="9" column="2" value="4"/>
    <arrayval field="cKnowTot" index="10" value="16"/>
    <arrayval field="cKnowTot" index="10" column="1" value="8"/>
    <arrayval field="cKnowTot" index="10" column="2" value="5"/>
    <arrayval field="cKnowTot" index="11" value="16"/>
    <arrayval field="cKnowTot" index="11" column="1" value="8"/>
    <arrayval field="cKnowTot" index="11" column="2" value="5"/>
    <arrayval field="cKnowTot" index="12" value="17"/>
    <arrayval field="cKnowTot" index="12" column="1" value="9"/>
    <arrayval field="cKnowTot" index="12" column="2" value="5"/>
    <arrayval field="cKnowTot" index="13" value="17"/>
    <arrayval field="cKnowTot" index="13" column="1" value="9"/>
    <arrayval field="cKnowTot" index="13" column="2" value="5"/>
    <arrayval field="cKnowTot" index="14" value="18"/>
    <arrayval field="cKnowTot" index="14" column="1" value="10"/>
    <arrayval field="cKnowTot" index="14" column="2" value="6"/>
    <arrayval field="cKnowTot" index="15" value="18"/>
    <arrayval field="cKnowTot" index="15" column="1" value="10"/>
    <arrayval field="cKnowTot" index="15" column="2" value="6"/>
    <arrayval field="cKnowTot" index="16" value="19"/>
    <arrayval field="cKnowTot" index="16" column="1" value="10"/>
    <arrayval field="cKnowTot" index="16" column="2" value="6"/>
    <arrayval field="cKnowTot" index="17" value="19"/>
    <arrayval field="cKnowTot" index="17" column="1" value="11"/>
    <arrayval field="cKnowTot" index="17" column="2" value="6"/>
    <arrayval field="cKnowTot" index="18" value="20"/>
    <arrayval field="cKnowTot" index="18" column="1" value="11"/>
    <arrayval field="cKnowTot" index="18" column="2" value="7"/>
    <arrayval field="cKnowTot" index="19" value="21"/>
    <arrayval field="cKnowTot" index="19" column="1" value="12"/>
    <arrayval field="cKnowTot" index="19" column="2" value="7"/>
    <arrayval field="cCustTot" index="2" value="2"/>
    <arrayval field="cCustTot" index="6" value="3"/>
    <arrayval field="cCustTot" index="10" value="4"/>
    <arrayval field="cCustTot" index="14" value="5"/>
    <arrayval field="cCustTot" index="18" value="6"/>
    <usesource source="srcPathOfW"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skEscape"/>
    <tag group="ClassSkill" tag="skHeal"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowLoc"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <tag group="ClassSkill" tag="skKnowNat"/>
    <tag group="ClassSkill" tag="skDisable"/>
    <tag group="ClassSkill" tag="skDisguise"/>
    <tag group="ClassSkill" tag="skKnowRel"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="AgeColumn" tag="3"/>
    <tag group="Classes" tag="PWStalker" name="Stalker"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skAppraise"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <bootstrap thing="cPW2KiPerc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW2DeadSt">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW2KiPool">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW2CmbtI1">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPW2Dodge">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cUncanny">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPW2DeadSt">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPW2Dodge">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPW2Blend">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPW2KiSavF">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPW2KiSavR">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPW2KiSavW">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPW2CmbtI3">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPW2DeadSt">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPW2Dodge">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPW2DlStrk">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPW2CmbtI4">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPW2DeadSt">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cPW2Dodge">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPW2DlStrk">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPW2ImBlnd">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPW2DeadSt">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cPW2Dodge">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPW2CmbtI5">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPW2DlStrk">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPW2RetKi">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <bootstrap thing="cPW2ManRec">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="fWepMart"></bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <bootstrap thing="cCfgPW2"></bootstrap>
    <bootstrap thing="cPW2KiSens">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    </thing>
  <thing id="cPW2KiPool" name="Ki Pool" description="At 1st level, a stalker gains a pool of ki points, supernatural energy he can use to accomplish amazing feats. The number of points in the stalker&apos;s ki pool is equal to 1/2 her stalker level + his Wisdom modifier (minimum of 1).\n\nAt 1st level, the stalker may spend 1 point of ki to grant himself a +4 insight bonus to a single Perception or Sense Motive check as an immediate action, as he uses his ki to feel out the vibrations of others and their hidden motives.\n\nAt 5th level, the stalker may use his deadly strikes in conjunction with his combat insight to &quot;read&quot; his opponent&apos;s defenses and deliver devastating blows beyond his foe&apos;s guard. The stalker spends one point of ki as a swift action to read his target opponent, and may apply his deadly strike to all martial strikes initiated by the stalker for a number of rounds equal to his Wisdom modifier against this target. If the stalker scores a successful critical hit against the target while this ability is active, then he activates deadly strike as normal.\n\nAt 7th level, the stalker may spend 1 point from his ki pool to gain a +4 insight bonus on a saving throw as an immediate action.\n\nAt 9th level, the stalker can delve into his subconscious in battle and remember key lessons from his training. The stalker envisions potential scenarios where martial abilities he has not readied come into play and gains a momentary burst of martial insight. A number of times per day equal to his Wisdom modifier, the stalker can spend one ki point as a swift action and trade one readied maneuver for another maneuver known of the same level or lower. The new maneuver is immediately readied and accessible for use. The character may initiate this maneuver and recover it as if he had prepared at the beginning of the day (or when ever the stalker readied his maneuvers last) until the end of the combat encounter.\n\nThe ki pool is replenished each day after 8 hours of rest and meditation; these hours do not need to be consecutive. If the stalker possesses levels in another class that grants points to a ki pool, stalker levels stack with the levels of that class to determine the total number of ki points in the combined pool, but only one ability score modifier is added to the total. The choice of which score to use is made when the second class ability is gained, and once made, the choice is set. The stalker can now use ki points from this pool to power the abilities of every class he possesses that grants a ki pool." compset="ClSpecial" summary="You have a ki pool equal to 1/2 your stalker level + your WIS modifier.">
    <tag group="abAction" tag="None"/>
    <tag group="abDuration" tag="Constant"/>
    <tag group="abRange" tag="Personal"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Tracker"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="aaKiPool"></bootstrap>
    <eval phase="PostLevel" priority="9000"><![CDATA[
      ~ only run the rest for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Meet core Ki Pool pre-reqs
      perform hero.assign[Ability.cMnkKiPool]

      ~ our maximum uses is 1/2 our stalker level + WIS bonus
      field[abValue].value = round(field[xAllLev].value/2, 0, -1)

      ~ If we find the CORE Ki Pool ability then set its attribute to be Wisdom
      ~ and include our classes half-level bonus to the tracker max.
      If (hero.haschild[BaseClSpec,"thingid.cMnkKiPool & Helper.ShowSpec"] <> 0) Then
        ~ Increase base Ki Pool by half-stalker level
        #trkmax[cMnkKiPool] += field[abValue].value
        ~ Let the Monk Ki Pool know which ability score to use
        perform hero.child[cMnkKiPool].pushtags[UseAttr.?]
        ~ Let the our Post-Attribute script know we should NOT run
        field[abValue5].value += 1
        ~ Prevent the Stalker Ki Pool from displaying on the In-Play tab
        perform delete[User.Tracker]
      Endif]]></eval>
    <eval phase="PostAttr" priority="10000" index="2"><![CDATA[
      ~ only run the rest for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If increased the core Ki Pool then get out now!
      doneif (field[abValue5].value <> 0)

      ~ If we have the "Extra Ki" feat then give two extra uses. We do this
      ~ here so that the "core" feat still works for us sense we know use
      ~ a custom Ki Pool.
      If (hero.childlives[fExtraKi] = 1) Then
        field[abValue].value += 2
      Endif

      ~ Set our uses per day to be 1/2 stalker level plus ability score
      field[trkMax].value += field[abValue].value + hero.findchild[BaseAttr,tagids[UseAttr.?]].field[aModBonus].value]]></eval>
    </thing>
  <thing id="cPW2DeadSt" name="Deadly Strike" description="The stalker is capable of maximizing his deadliness whenever he lands a critical blow upon his opponent, opening his target up for future punishment as the stalker becomes attuned to his prey. The stalker&apos;s deadly strike activates whenever the stalker scores a successful critical hit against a target, and is active against that target for a number of rounds equal to his Wisdom modifier. Deadly strike inflicts extra damage, to only this target creature, on all of the stalker&apos;s attacks. This extra damage is 1d6 at 1st level, and increases by 1d6 for every four stalker levels thereafter. When the stalker scores a critical hit, this extra damage is not multiplied, it is simply added to the damage. If the stalker scores a successful critical hit during the time his deadly strike is active, the duration of this ability is extended by one round (no more than one extension can be made per round). Ranged attacks can count as deadly strikes only if the target is within 30-ft.. Deadly strike is more effective with weapons with higher critical multipliers, such as scythes and battle axes. Weapons with a x3 critical multiplier inflict damage with deadly strikes using a d8 instead of a d6, and weapons with a critical multiplier of x4 use d10&apos;s. Damage multipliers higher than x4 use d10&apos;s for deadly strikes damage.\n\nDeadly strike may not be used with weapons that inflict non-lethal damage. The stalker must be able to see the target well enough to pick out a vital spot and must be able to reach such a spot. Creatures immune to critical hits or precision damage cannot be targeted by a deadly strike. A stalker cannot deadly strike while attacking a creature who has concealment." compset="ClSpecial" summary="Attacks deal extra damage after successful crit">
    <tag group="LvNameApp" tag="DieCntVal"/>
    <tag group="LvNameApp" tag="DieSiz6"/>
    <tag group="LvNameApp" tag="SignDieCnt"/>
    <tag group="SbNameApp" tag="DieCntVal"/>
    <tag group="SbNameApp" tag="DieSiz6"/>
    <tag group="SbNameApp" tag="SignDieCnt"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="None"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="Helper" tag="UseOwnLev"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[
      ~ Build list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value) & "d6"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value

      ~ only run the rest for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Find all Rogue talents we have and set Sneak Attack Dice
      ~ equal to this ability instead.
      foreach pick in hero from BaseCustSp where "SpecSource.cHelpRog & CustTaken.cHelpPW2"
        eachpick.field[abValue].value += field[abValue].value
      nexteach]]></eval>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Archetypes can change our ability score so
      ~ use the Use Attribute tag to find the ability score.
      ~ Set duration = Ability Score mod + 1
      field[abDuration].value = 1 + hero.findchild[BaseAttr,tagids[UseAttr.?]].field[aModBonus].value

      ~ Set the Summary text that only appears on the Specials Tab
      field[abSumm].text = "Attacks deal +" & field[abValue].value & "d6 damage for " & field[abDuration].value & " rounds after successful crit"]]></eval>
    </thing>
  <thing id="cPW2CmbtI1" name="Combat Insight" description="At 2nd level, the stalker&apos;s combat sense opens his third eye, granting him defensive reflexes that protect him in combat. The stalker may add his Wisdom modifier to his initiative score and to Reflex saving throws as an insight bonus." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Archetypes can change our ability score so
      ~ use the Use Attribute tag to find the ability score.
      field[abValue].value += hero.findchild[BaseAttr,tagids[UseAttr.?]].field[aModBonus].value

      ~ Give bonus to Initiative and Ref saves
      #applybonus[BonInsight, hero.child[Initiative], field[abValue].value]
      #applybonus[BonInsight, hero.child[svRef], field[abValue].value]
      field[livename].text = "Combat Insight (" & signed(field[abValue].value) &  " to Init/Ref save)"
      field[abSumm].text = signed(field[abValue].value) & " to Initiative & Ref Saves."]]></eval>
    </thing>
  <thing id="cPW2CbtPcg" name="Combat Precognition" description="The stalker designates his combat senses towards his opponents and gains momentary flashes of insight into how to defend himself against them. Spending one point of ki as an immediate action forces opponents who attack the stalker to roll their attack rolls twice and take the worse of the two results due to the stalker&apos;s precognitive abilities. This art has a duration of 1 + the stalker&apos;s Wisdom modifier in rounds." compset="CustomSpec" summary="Spend 1 ki, enemies must roll twice to attack and take worse roll for 1 + WIS rnds" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2AdvStd" name="Advanced Study" description="The stalker&apos;s knowledge of the martial disciplines expands, imparting new maneuvers as if the character had taken the Advanced Study feat. This art may be selected more than once. The stalker must meet the prerequisites of this feat to select this stalker art." compset="CustomSpec">
    <usesource source="srcPathOfW"/>
    <tag group="fInclude" tag="fPWAdvStud"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="abAction" tag="None"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2Alcrty" name="Alacrity" description="A stalker&apos;s land speed is faster than the norm for his race, gaining a +10-ft. enhancement bonus to his base speed and he may add his Wisdom modifier to Acrobatics checks, due to his nimble and finely honed body. The stalker enjoys this benefit only when he is wearing no armor or light armor, not using a shield, and not carrying a medium or heavy load. As a swift action, the character may spend a point of ki to pour extra speed to his step to increase this bonus from 10-ft. to an additional 30-ft. for one minute, but he is fatigued afterward for 1d4 minutes as he catches his breath." compset="CustomSpec" summary="+10 ft. to base speed, spend ki for 30 ft" uniqueness="unique">
    <fieldval field="actName" value="Ki Pool (+30ft)"/>
    <fieldval field="actName2" value="Fatigued"/>
    <fieldval field="abValue" value="10"/>
    <usesource source="srcPathOfW"/>
    <tag group="abAction" tag="None"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="LvNamePar" tag="AppText"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Get our encumbrance level - if we're encumbered by that, or if we're wearing
      ~ armor or shield, we're disabled.
      If (hero.tagexpr[Hero.EquipShld | Hero.MedArmor | Hero.HeavyArmor | Encumbered.Medium | Encumbered.Heavy | Encumbered.Overloaded] <> 0) then
        perform assign[Helper.SpcDisable]
        done
      Endif

      ~ If Ki point spent then increase speed to 30ft
      If (field[abilActive].value = 1) Then
        field[abValue].value += 20
      Endif

      ~ Set speed increase
      #enhancementbonus[hero.child[Speed], field[abValue].value]
      ~ Set wisdom bonus
      field[abValue2].value = #attrmod[aWIS]
      ~ Give bonus to acrobatics
      #skillbonus[skAcrobat] += field[abValue2].value]]>
      <after name="Encumber Final"/>
      </eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If Fatigued not activated get out now!
      doneif (field[abilAct2].value <> 1)

      ~ Set fatigue condition on hero
      perform hero.assign[Condition.pcnFatigue]]]></eval>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2ComArt" name="Combat Art" description="A stalker that selects this art gains a bonus combat feat. The stalker must meet the prerequisites for selecting this feat. This art may be selected more than once." compset="CustomSpec" summary="You gain a bonus combat feat.">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="abAction" tag="None"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="10000">~ Add to combat feats allowed
      linkage[table].field[cBonFtMax].value +=1</eval>
    </thing>
  <thing id="cPW2ConRec" name="Concealed Recovery" description="The stalker may utilize his ki-fueled attunement to the world around him to defend himself while he centers his spirit for martial maneuver recovery. When recovering maneuvers (either as a full round action or as a standard action) the stalker enjoys concealment (with a 20% miss chance). At 11th level, this improves to total concealment (50% miss chance)." compset="CustomSpec" summary="Gain concealment when recovering manuevers" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2CritEd" name="Critical Edge" description="The stalker&apos;s deadly efficiency in combat allows him to increase the critical threat range of any weapon he wields by +1. This bonus is applied after abilities such Improved Critical or the keen weapon property and cannot be doubled." compset="CustomSpec" summary="+1 threat range with all weapons" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="abAction" tag="None"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Loop through all weapons
      foreach pick in hero from BaseWep
        ~ Calc defult range
        field[abValue].value = 20 - eachpick.tagvalue[wCritMin.?]
        ~ Keen or Improved Crit change the value to include this
        If (eachpick.tagis[Helper.Keen] + eachpick.tagis[Broadcast.ImpCrit] <> 0) Then
          field[abValue].value = (field[abValue].value * 2) + 1
        Endif
        ~ Increase amount by one more
        field[abValue].value += 1
        ~ Calc new CritMin tag
        field[abValue2].value = 20 - field[abValue].value
        ~ Remove Keen and Improved Crit tags
        perform eachpick.delete[Helper.Keen]
        perform eachpick.delete[Broadcast.ImpCrit]
        ~ Remove old Crit tag
        perform eachpick.delete[wCritMin.?]
        ~ Assign new tag including any Keen/Improved Crit values
        ~ and the +1 from the ability
        If (field[abValue2].value > 0) Then
          perform eachpick.assignstr["wCritMin." & field[abValue2].value]
        Endif
      nexteach]]></eval>
    </thing>
  <thing id="cPW2CritTr" name="Critical Training" description="The stalker&apos;s deadly strike damage increases by an additional damage die, and he may treat his class level as his base attack bonus for the purposes of qualify for critical feats. If the stalker possesses fighter levels, he may add his stalker level to his fighter level to qualify for critical feats.\n\n[NOTE: The critical feat qualification has not yet been implemented.]" compset="CustomSpec" summary="1 extra Deadly Strike die, count as fighter for critical feats" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="None"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~Increase Deadly Strike dice by one
      #value[cPW2DeadSt] += 1]]></eval>
    </thing>
  <thing id="cPW2DeadAm" name="Deadly Ambush" description="The stalker with this art may now use his deadly strike class feature against flat- footed targets and targets that are being denied the Dexterity modifier to their AC as well as on critical hits and when focusing his ki to read his opponent." compset="CustomSpec" summary="Use Deadly Strike when foe denied DEX to AC" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abAction" tag="None"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="Deadly Strike required"><![CDATA[#hasability[cPW2DeadSt] <> 0]]></exprreq>
    </thing>
  <thing id="cPW2DeadRc" name="Deadly Recovery" description="The stalker&apos;s deadly nature is reflected when he is considered to be most vulnerable. While recovering maneuvers as a full round action, the stalker gains the use of the Combat Reflexes feat (using his Wisdom modifier in place of his Dexterity modifier). He may also add his deadly strike damage to any attacks of opportunity he makes while he is recovering maneuvers." compset="CustomSpec" summary="Gain Combat Reflexes and use Deadly Strike while recovering maneuvers" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="HasAbility" tag="fComRef"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="SpecSource" tag="cHelpzst"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="Deadly Strike required"><![CDATA[#hasability[cPW2DeadSt] <> 0]]></exprreq>
    </thing>
  <thing id="cPW2Evas" name="Evasion" description="A stalker can avoid damage from many area-effect attacks by channeling his ki into his reflexes. If a stalker makes a successful Reflex saving throw against an attack that normally deals half damage on a successful Reflex save he instead takes no damage. Evasion can be used only if a stalker is wearing light armor or no armor. A helpless stalker does not gain the benefit of evasion." compset="CustomSpec" summary="If you succeed at a Reflex save for half damage, you take none instead." uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="HasAbility" tag="cEvasion"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2KiVmp" name="Ki Vampirism" description="The stalker&apos;s ki gains a hungry quality that expresses itself through the martial prowess of a disciple of the Path of War. If the stalker reduces a living foe to 0 or less hit points with a martial strike or scores a successful critical hit, then he may regain 1 point of ki as an immediate action. He may not use his ki vampirism more times per day than 3 + his Wisdom modifier. This ability does not function against constructs, undead, or creatures with under 1/2 HD. Minimum stalker level 11th." compset="CustomSpec" uniqueness="unique">
    <fieldval field="trkMax" value="3"/>
    <usesource source="srcPathOfW"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Uses per day is 3 + Wis
      field[trkMax].value += #attrmod[aWIS]

      field[abValue].value = field[xAllLev].value]]></eval>
    <exprreq message="Stalker level 11 required"><![CDATA[#custspeciallevelcount[PWStalker] >= 11]]></exprreq>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2MndBnd" name="Mind Bending" description="The stalker&apos;s inner sense learns the workings of another being&apos;s mind, granting him the ability to impose his own will over those weak enough to succumb to this art. As a standard action, the character spends one ki point and must make eye contact with the target creature and begin speaking to them, using his ki to influence his target&apos;s thoughts. The target then must make a Will save (DC 13 + the stalker&apos;s Wisdom modifier) or be subject to a charm monster spell. Minimum stalker level 5th." compset="CustomSpec" summary="Spend ki to charm monster" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="SpInfo" tag="spCharMon3"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="abSave" tag="WillNeg"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Save DC is 13 + WIS mod
      field[abDC].value = 13 + #attrmod[aWIS]]]></eval>
    <exprreq message="Stalker level 5 required"><![CDATA[#custspeciallevelcount[PWStalker] >= 5]]></exprreq>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2MonWep" name="Monastic Weapon Training" description="The stalker gains the Improved Unarmed Strike feat and gains proficiency with all weapons that are considered monk weapons." compset="CustomSpec" summary="Gain Improved Unarmed Strike and monk proficiencies" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="abAction" tag="None"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fImpUnarm">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="First" priority="20000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Loop through all monk weapons
      foreach thing in BaseWep where "wFtrGroup.Monk"
        perform eachthing.pulltags[WepProf.?]
      nexteach
      ~ Push all proficency tags to the hero
      perform hero.pushtags[WepProf.?]

      ~ Cycle through and apply the Helper.ExoticProf tag to all examples of
      ~ the chosen exotic weapon on the hero. This is important for the Aldori
      ~ Dueling Sword specifically, and possibly others.
      var searchexpr as string
      searchexpr = "wPofReq.Exotic & (" & tagids[WepProf.?,"|"] & ")"
      foreach pick in hero from BaseWep where searchexpr
        perform eachpick.assign[Helper.ExoticProf]
      nexteach]]></eval>
    </thing>
  <thing id="cPW2MrdIns" name="Murderous Insight" description="The stalker designates his combat senses towards ending the lives of his opponents and gains momentary flashes of insight in how to best accomplish this. By spending one point of ki as a swift action, the stalker makes an attack and rolls twice for that attack and uses the better of the two results due to the stalker&apos;s precognitive abilities. This art has a duration of 1 + the stalker&apos;s Wisdom modifier in rounds." compset="CustomSpec" summary="Roll twice on attack rolls, take better roll" uniqueness="unique">
    <fieldval field="abText" value="one"/>
    <fieldval field="abText2" value="two"/>
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abDuration].value = 1 + #attrmod[aWIS]]]></eval>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2Obfusc" name="Obfuscation" description="The stalker knows how to maintain a quiet, innocuous attitude as if he were nothing more than a part of the scenery. The stalker spends a point of ki as a full round action to activate his obfuscation, and as long as he remains in a non- threatening posture (by carrying no weapons in hand moving at half his base speed) the stalker radiates a psychic field that causes others to ignore his presence for a number of minutes equal to the stalker&apos;s Wisdom modifier. Subjects who normally would react to the stalker&apos;s presence in a way that would stop or harm him must make a Will save (DC 15 + the stalker&apos;s Wisdom modifier) or be under the influence of the {i}cloud mind{/i} psionic power. For every 2 additional points of ki spent on this art, the saving throw DC increases by +1 to a maximum of the stalker&apos;s Wisdom modifier. Minimum stalker level 7th." compset="CustomSpec" summary="Force others to ignore you" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="abDuration" tag="Minute"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Save DC is 15 + WIS mod
      field[abDC].value = 15 + #attrmod[aWIS]
      ~ Duration is WIS minutes
      field[abDuration].value = #attrmod[aWIS]]]></eval>
    <exprreq message="Stalker level 7 required"><![CDATA[#custspeciallevelcount[PWStalker] >= 7]]></exprreq>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2PhmRch" name="Phantom Reach" description="The stalker is capable of extending the reach of melee range martial strikes by infusing ki into the maneuver, causing a phantom echo to rush towards the enemy and initiate the attack. As a swift action, the stalker may spend one ki point and initiate a melee martial strike with a range of melee attack as if it instead had a range of close (25-ft. + 5-ft. / 2 levels). Strikes with a range greater than melee attack do not function with this art." compset="CustomSpec" summary="Make martial strikes at range" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abRange].value = 25 + (field[xTotalLev].value/2) * 5]]></eval>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2PrcStp" name="Precocious Step" description="By relying on his combat insight to steer him effortlessly through a dangerous spot, the stalker may spend one point of ki as a swift action and move without provoking attacks of opportunity for a number rounds equal to his Wisdom modifier (min 1)." compset="CustomSpec" summary="Spend ki to move without AoO" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="User" tag="Activation"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Duration is WIS rounds
      field[abDuration].value += #attrbonus1[aWIS]]]></eval>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPW2RogTal" name="Rogue Talent" description="Some stalkers have learned techniques that are similar to those of the rogue, and may select rogue talents instead of stalker arts. Stalkers may not learn advanced talents, nor can they gain the Ki Pool or Underhanded rogue talents. Talents that apply to a rogue&apos;s sneak attack apply to a stalker&apos;s deadly strike ability." compset="CustomSpec" summary="Gain a rogue talent" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      hero.child[cHelpPW2].field[cGiveSp3rd].value += 1]]></eval>
    <eval phase="Final" priority="99999999" index="2"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Allow all Rogue Talents (and Ninja Tricks by extension) except advanced talents, and also Ki Pool and Underhanded specifically
      hero.child[cHelpPW2].field[cCstS3Expr].text = "(SpecSource.cHelpRog | SpecSource.cHelpNin) & !Helper.Secondary & !Helper.Tertiary & !Ability.cRogUnderh & !Ability.cRogKiPoo & !abCategory.RogTalAdv & !abCategory.NinTriMas"]]></eval>
    </thing>
  <thing id="cPW2CmbtI2" name="Combat Insight (Uncanny Dodge)" description="At 4th level, the heightened perceptions of the stalker allow him to know when his prey could get the jump on him, granting him the uncanny dodge class feature (see rogue class for details)." compset="ClSpecial" summary="Gain Uncanny Dodge">
    <tag group="abAction" tag="None"/>
    <tag group="DescInfo" tag="cUncanny"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2CmbtI3" name="Combat Insight (Critical Focus)" description="At 8th level, the killer&apos;s instinct in the stalker is honed to a razor&apos;s fine edge, allowing him to add his Wisdom modifier as a competence bonus to confirm critical hits. This ability counts as if the character possessed the Critical Focus feat, and for the purposes of taking critical feats that the character qualifies for. The character may not select the Critical Focus feat once he has this ability, and should he have it before he gains this ability, he loses the Critical Focus feat and may select a critical feat in its place.\n\n{B}NOTE:{/b} This ability will disable the Critical Focus feat, but does not remove the feat if present, or prevent you from taking it. It&apos;s up to you to make sure you don&apos;t add Critical Focus to a character with this ability, and to replace it if it&apos;s already present as per the rules text" compset="ClSpecial" summary="Bonus to confirm crits, counts as Critical Focus feat">
    <tag group="abAction" tag="None"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Archetypes can change our ability score so
      ~ use the Use Attribute tag to find the ability score.
      field[abValue].value += hero.findchild[BaseAttr,tagids[UseAttr.?]].field[aModBonus].value
      field[abText].text = signed(field[abValue].value) & " competence bonus to confirm critical hits."

      #situational[hero.childfound[Attack], field[abText].text ,field[thingname].text]
      field[abSumm].text = field[abText].text

      ~ Set HasFeat.fCritFoc onto hero to let other feats know we have
      ~ something that is counted like Critical Focus
      perform hero.assign[HasFeat.fCritFoc]

      ~ If Critical Focus feat is found then disable it
      If (hero.childlives[fCritFoc] = 1) Then
        perform hero.child[fCritFoc].assign[Helper.FtDisable]
        ~ Give a bonus general feat that should be used to take
        ~ another critical feat in its place.
        #resmax[resFeat] += 1
      Endif]]></eval>
    </thing>
  <thing id="cPW2CmbtI4" name="Combat Insight (Critical Recovery)" description="At 12th level, the stalker&apos;s insight allows him to funnel the ki of his foes into his form with his deadly attacks. The character can recover a single expended maneuver when he scores a successful critical hit against a living creature. This ability does not function against constructs, undead, or creatures with under 1/2 HD." compset="ClSpecial" summary="Recover a maneuver on critical hit">
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="None"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2CmbtI5" name="Combat Insight (Blindsight)" description="At 18th level, the heightened precognitive abilities of the stalker manifest in his ability to sense things around him that others cannot, granting him blindsight of 30-ft.. This is a supernatural ability." compset="ClSpecial" summary="Gain blindsight 30 ft">
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="None"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2DlStrk" name="Dual Strike" description="Once per day at 10th level, the stalker&apos;s deadly skill in combat improves, allowing him to initiate two martial strikes as a full round action. The strikes the stalker initiates must have an initiation action of one standard action, and he must have both strikes readied. Boosts may not be applied to a dual strike due to the need to concentrate on two separate martial movements. When a dual strike is used, the action must be declared beforehand when used, both strikes are resolved separately and are expended. At 14th level the character may use dual strike twice per day, and three times per day at 18th level." compset="ClSpecial" summary="Use two martial strikes as a full-round action">
    <fieldval field="trkMax" value="1"/>
    <tag group="Usage" tag="Day"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & tagnames[Usage.?]

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[trkMax].value = field[abValue].value]]></eval>
    </thing>
  <thing id="cPW2ImBlnd" name="Improved Blending" description="At 16th level, the stalker&apos;s abilities improve further, and the character is permanently under the effects of a pass without trace spell." compset="ClSpecial" summary="Permanent Pass Without Trace effect">
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="MultiCopy"/>
    <tag group="abAction" tag="None"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If 16th level or above, append spell info for Pass Without Trace
      if (field[xTotalLev].value >= 16) then
        perform assign[SpInfo.spPasswit1]
        hero.child[cPW2Blend].field[abSumm].text &= ", pass without trace"
      endif]]></eval>
    </thing>
  <thing id="cPW2RetKi" name="Retributive Ki" description="At 20th level, the stalker&apos;s mystical ki power allows for him to generate a powerful burst of energy to gain retribution on those who would injure him. When the stalker is harmed by an attack, spell, or ability of an enemy, as an immediate action he may spend two ki points to initiate a martial strike that he has readied (with an initiation action of one standard action) in retaliation against that attack. He uses the range of the attacker&apos;s ability as the range of his strike, creating a phantom echo of himself with his ki (as with the phantom reach art) that rushes out and strikes his attacker if they are outside of the stalker&apos;s normal reach. Use of this ability expends his strike as normal, and the strike functions as normal otherwise." compset="ClSpecial" summary="Retaliate with a martial strike, even at range">
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2KiSens" name="Ki Pool (Sense Motive)" description="At 1st level, the stalker may spend 1 point of ki to grant himself a +4 insight bonus to a single Perception or Sense Motive check as an immediate action, as he uses his ki to feel out the vibrations of others and their hidden motives." compset="ClSpecial" summary="+4 insight to one Sense Motive check">
    <fieldval field="abValue" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not activated get out now!
      doneif (field[abilActive].value = 0)

      #applybonus[BonInsight, hero.child[skSenseMot], field[abValue].value]]]></eval>
    </thing>
  <thing id="cPW2KiPerc" name="Ki Pool (Perception)" description="At 1st level, the stalker may spend 1 point of ki to grant himself a +4 insight bonus to a single Perception or Sense Motive check as an immediate action, as he uses his ki to feel out the vibrations of others and their hidden motives." compset="ClSpecial" summary="+4 insight to one Perception check">
    <fieldval field="abValue" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not activated get out now!
      doneif (field[abilActive].value = 0)

      #applybonus[BonInsight, hero.child[skPercep], field[abValue].value]]]></eval>
    </thing>
  <thing id="cPW2KiSavR" name="Ki Pool (Ref Save)" description="At 7th level, the stalker may spend 1 point from his ki pool to gain a +4 insight bonus on a saving throw as an immediate action." compset="ClSpecial" summary="+4 insight to one saving throw">
    <fieldval field="abValue" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not activated get out now!
      doneif (field[abilActive].value = 0)

      #applybonus[BonInsight, hero.child[svRef], field[abValue].value]]]></eval>
    </thing>
  <thing id="cPW2KiSavW" name="Ki Pool (Will Save)" description="At 7th level, the stalker may spend 1 point from his ki pool to gain a +4 insight bonus on a saving throw as an immediate action." compset="ClSpecial" summary="+4 insight to one saving throw">
    <fieldval field="abValue" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not activated get out now!
      doneif (field[abilActive].value = 0)

      #applybonus[BonInsight, hero.child[svWill], field[abValue].value]]]></eval>
    </thing>
  <thing id="cPW2KiSavF" name="Ki Pool (Fort Save)" description="At 7th level, the stalker may spend 1 point from his ki pool to gain a +4 insight bonus on a saving throw as an immediate action." compset="ClSpecial" summary="+4 insight to one saving throw">
    <fieldval field="abValue" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not activated get out now!
      doneif (field[abilActive].value = 0)

      #applybonus[BonInsight, hero.child[svFort], field[abValue].value]]]></eval>
    </thing>
  <thing id="cPW2Blend" name="Blending" description="At 6th level the stalker&apos;s natural attunement to the flow of ki in other people grants him insight in reading others and avoiding their notice. The character gains a +2 insight bonus to Perception, Sense Motive and Stealth checks." compset="ClSpecial" summary="+2 insight to Perception, Stealth, Sense Motive">
    <fieldval field="abValue" value="2"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="MultiCopy"/>
    <tag group="abAction" tag="None"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Apply skill bonuses (insight to Perception, Sense Motive, Stealth)
      #applybonus[BonInsight, hero.child[skPercep], field[abValue].value]
      #applybonus[BonInsight, hero.child[skSenseMot], field[abValue].value]
      #applybonus[BonInsight, hero.child[skStealth], field[abValue].value]]]></eval>
    </thing>
  <thing id="cPW2Dodge" name="Dodge Bonus" description="The stalker&apos;s heightened perception of danger allows him to defend himself from attacks as they are made against him, anticipating the attacks as they come. A stalker gains a +1 dodge bonus to his Armor Class at 2nd level, which improves by an additional +1 every four stalker levels thereafter. When recovering maneuvers as a full round action, the character may add his Wisdom modifier to his AC as an additional dodge bonus; his defensive precognition being heightened by centering his ki through maneuver recovery." compset="ClSpecial" summary="Dodge bonus to your Armor Class.">
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev=" (Ex)"/>
    <tag group="Helper" tag="UseOwnLev" name="UseOwnLev" abbrev="UseOwnLev"/>
    <tag group="SpecType" tag="Defense" name="Defense" abbrev="Defense"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="20000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~if we've been replaced, get out now
      doneif (tagis[Helper.SpcReplace] <> 0)
      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
      field[abSumm].text = "+" & field[abValue].value  & " dodge bonus to your AC."

      ~ If we are medium, heavy encumbered or have a shield equipped
      ~ then don't give dodge bonus
      if (hero.tagis[Encumbered.Medium] + hero.tagis[Encumbered.Heavy] + hero.tagis[Hero.EquipShld] = 0) Then
         ~ Give dodge bonus to AC
         hero.child[ArmorClass].field[tACDodge].value += field[abValue].value
      else
         perform assign[Helper.SpcDisable]
      endif]]></eval>
    </thing>
  <thing id="cPW2DeadIn" name="Deadly Insight" description="The stalker may use his deadly strikes in conjunction with his combat insight to “read” his opponent’s defenses and effortlessly attack beyond his foe’s guard. The stalker spends one point of ki as a swift action to read his target opponent, and may apply his deadly strike to all of his attacks for a number of rounds equal to his Wisdom modifier against this target. If the stalker scores a successful critical hit against the target while his deadly strike ability is active, the duration of this ability is extended by one round (no more than one extension can be made per round)." compset="CustomSpec" summary="Spend 1 ki to use Deadly Strike with all attacks" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecSource" tag="cHelpPW2"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <eval phase="PostAttr" priority="10000">field[abDuration].value = #attrmod[aWIS]</eval>
    <exprreq message="Deadly Strike required"><![CDATA[#hasability[cPW2DeadSt] <> 0]]></exprreq>
    <exprreq message="Not available to Vigilante archetype"><![CDATA[#hasarchetype[arPWViglnt] <> 1]]></exprreq>
    </thing>
  <thing id="cPWWarder" name="Warder" description="Protective and disciplined warriors, warders are fighting men and women who use their knowledge of warfare, tactics, and strategy combined with superior combat training to accomplish their goals in defending others. Their intellect guides them through battle, and their skill at arms achieves their success.\n\n{b}Adventures:{/b} Warders adventure to further their employer’s missions, to serve on battlefields as protectors and champions, or to protect those that they care about. Some warders adventure to forge kingdoms of their own, battle tyranny, fight others of their kind for honor, or to live simply and by their own code.\n\n{b}Characteristics:{/b} Warders are always protective of people they deem in their care, be it a superior, their friends, or fellow soldiers of fortune. Many warders are proud, intelligent individuals who study tactics and maps as well while training daily with their associates to better suit their style towards their defense.\n\n{b}Alignment:{/b} Any, but most are lawful; the moral portion of their alignment is either up to them or their inclusion in their sect.\n\n{b}Religion:{/b} Many warders are religious, often following gods of war, chivalry, and sacrifice. Some follow gods of tyranny or justice, and others follow gods that stand for the good of their race.\n\n{b}Background:{/b} Warders find their place in their society based upon their line of adventuring. Some warders are regarded with great respect as leaders and guardians while others are feared and hated for their tyrannical ways. Many are respected and treated well in the hopes that if trouble comes, the warder will come to help those who showed them kindness.\n\n{b}Races:{/b} Nearly all humanoid races have warders amongst them. Dwarves, half-orcs, and humans make up the larger majority of warders in more civilized\nsociety, but there are a minority of halflings and gnomes that guard their kind from harm. While elves possess the tactical prowess to make great warders,\ntheir fragile bodies are often not enough for the physical rigors of the profession. While some warders are restrictive to whom they’ll share their secrets, it’s\nlargely agreed that the more monstrous races tend to be excluded. Hobgoblins, of the monstrous races, are by far the largest exception to that stereotype.\n\n{b}Other Classes:{/b} Warders get on well with those of a more orderly and martial bent, naturally befriending paladins, monks, and fighters. Rogues and warders\ndon’t exactly see eye to eye, while rangers and sorcerers might find a warder’s presence restrictive. Wizards and warders appreciate many of their shared\nfacets in learning, and warders widely recognize the importance of clerics in both martial and spiritual matters.\n\n{b}Role:{/b} Defender. Warders are natural guardians and protectors of the weaker members of the party, and are the ones who can take the most damage on\nthe front line. They also double as being coordinators on the battlefield, helping their teammates and providing support for them both defensively and offensively." compset="ClassLevel" maxlimit="20">
    <usesource source="srcPathOfW"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cHelpPW3"></bootstrap>
    <link linkage="helper" thing="cHelpPW3"/>
    </thing>
  <thing id="cPW3DefFoc" name="Defensive Focus" description="At 1st level, the defensive prowess of the warder is second to none, allowing her to focus her actions purely on defending himself and her allies in ways that cannot be replicated. The warder gains the Combat Reflexes feat as a bonus feat, using her Intelligence modifier in place of her Dexterity modifier to determine the number of additional attacks of opportunity she may make each round.\n\nWhen recovering maneuvers as a full round action, the warder sets up a defensive perimeter around himself to defend her allies, increasing her threatened area by 5 ft. for every 5 initiator levels she possesses. Until the beginning of her next turn, she may make attacks of opportunity against any opponent in this threatened area that provokes attacks of opportunity. She may move as part of these attacks of opportunity, provided her total movement before her next turn does not exceed her speed (his movement provokes attacks of opportunity as normal). Additionally,while using defensive focus, the warder adds her Intelligence modifier plus her class level to her CMD for the purposes of defending against enemies trying to use the Acrobatics skill to prevent her from getting attacks of opportunity against them." compset="ClSpecial" summary="Gain Combat Reflexes, using INT in place of DEX">
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fComRef"></bootstrap>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)

~ Combat Reflexes: Use INT instead of DEX
hero.child[fComRef].field[abValue].value = 1 + maximum(hero.child[aINT].field[aModBonus].value, 0)

~ Threatened area while in Defensive Focus: 5ft + 5ft per 5 IL
var IL as number
var extraArea as number
IL = hero.child[mHelpPW3].field[cIL].value
extraArea = 5 * round(IL/5,0,-1)
field[abValue].value = 5 + maximum(5, extraArea)


~ CMD bonus vs. enemy Acro to avoid AoO: INT + Warder level
field[abValue2].value = #attrmod[aINT] + field[xAllLev].value
#situational[hero.childfound[ManeuvDef],signed(field[abValue2].value) & " vs. enemy Acrobatics checks to avoid provoking AoO",field[thingname].text]]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[
      field[sbName].text = field[thingname].text
      field[livename].text &= " (" & field[abValue].value & "ft)"
      field[abSumm].text = "Increased threatened area, can move when making AoO, " & signed(field[abValue2].value) & " to CMD vs. Acro to avoid AoO"]]></eval>
    </thing>
  <thing id="cPW3ImpDF" name="Improved Defensive Focus" description="At 10th level, the warder&apos;s defensive focus improves further, causing the ground within her melee reach to be treated as if it were difficult terrain, hampering her foes’ movement around him. If a foe tries to move through a space within her reach, the movement through those squares costs double (x2). Additionally, while using her defensive focus to make an attack of opportunity, her movement does not provoke attacks of opportunity." compset="ClSpecial" summary="Threatened squares are diff. terrain, don&apos;t provoke AoO when moving to take own AoO&apos;s">
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPW3Aegis" name="Aegis" description="At 1st level, the warder’s defensive prowess extends to those who choose to stay near to him. Allies who are within 10 ft. of the warder’s position gain a +1 morale bonus to Armor Class and to Will saves under the warder’s defensive aegis, her presence bolstering and shepherding the defenses of her allies. This bonus improves to +2 at 5th level (+3 at 9th level, +4 at 13th level, and +5 at 17th level). The warder does not receive this bonus, but may receive the benefits of this ability from another warder. If the ally cannot see or hear the warder, then the ally does not gain the benefits of this ability (such as if the warder is concealed or invisible).\n\nAt 6th level, her aegis’ range increases its effective area, growing to a 20 ft. radius. At 12th level, this increases again to 30 ft.." compset="ClSpecial" summary="Morale bonus to nearby allies&apos; AC/Will save">
    <fieldval field="abValue2" value="10"/>
    <usesource source="srcPathOfW"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNameApp" tag="AppValue"/>
    <tag group="LvNameApp" tag="SignAppVal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <bootstrap thing="xPWAegis"></bootstrap>
    <eval phase="PostLevel" priority="20000"><![CDATA[~Set the list name
field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

~only perform the calculations for the first copy
doneif (tagis[Helper.FirstCopy] = 0)

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~ if we've been disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~ AC/save bonus increases by +1 for each copy of this ability
field[abValue].value += field[xCount].value
hero.child[xPWAegis].field[abValue].value = field[abValue].value

~ Base radius is 10', but Improved and Greater Aegis each increase that by 10'
~ We store the initial range in abValue2 so that Improved and Greater can refer to it for display purposes
field[abRange].value = field[abValue2].value
if (hero.childfound[cPW3ImpAeg].tagis[Helper.ShowSpec] <> 0) then
  field[abRange].value += hero.child[cPW3ImpAeg].field[abValue].value
endif
if (hero.childfound[cPW3GrtAeg].tagis[Helper.ShowSpec] <> 0) then
  field[abRange].value += hero.child[cPW3GrtAeg].field[abValue].value
endif

~notify "Has Improved Aegis: " & #hasfeat[cPW3ImpAeg]
~notify "Has Greater Aegis: " & hero.tagis[HasAbility.cPW3GrtAeg]
~notify "Light Armor: " & hero.tagis[Hero.ProfLight]
~notify "Aegis range is " & field[abRange].value]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[~ Update Specials text
field[sbName].text = field[thingname].text
field[abSumm].text = signed(field[abValue].value) & " morale bonus to AC and Will saves for allies within " & field[abRangText].text]]></eval>
    </thing>
  <thing id="cHelpPW3" name="Warder" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="12"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="cAbbr" value="Wdr"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cSCRNumDce" value="5"/>
    <fieldval field="cSCRDceSiz" value="6"/>
    <fieldval field="cSCRMult" value="10"/>
    <fieldval field="srcPageNum" value="10"/>
    <arrayval field="cKnowTot" index="1" column="1" value="4"/>
    <arrayval field="cKnowTot" index="1" column="2" value="2"/>
    <arrayval field="cKnowTot" index="2" value="7"/>
    <arrayval field="cKnowTot" index="2" column="1" value="4"/>
    <arrayval field="cKnowTot" index="2" column="2" value="2"/>
    <arrayval field="cKnowTot" index="3" value="7"/>
    <arrayval field="cKnowTot" index="3" column="1" value="4"/>
    <arrayval field="cKnowTot" index="3" column="2" value="2"/>
    <arrayval field="cKnowTot" index="4" value="8"/>
    <arrayval field="cKnowTot" index="4" column="1" value="5"/>
    <arrayval field="cKnowTot" index="4" column="2" value="3"/>
    <arrayval field="cKnowTot" index="5" value="8"/>
    <arrayval field="cKnowTot" index="5" column="1" value="5"/>
    <arrayval field="cKnowTot" index="5" column="2" value="3"/>
    <arrayval field="cKnowTot" index="6" value="9"/>
    <arrayval field="cKnowTot" index="6" column="1" value="5"/>
    <arrayval field="cKnowTot" index="6" column="2" value="3"/>
    <arrayval field="cKnowTot" index="7" value="9"/>
    <arrayval field="cKnowTot" index="7" column="1" value="6"/>
    <arrayval field="cKnowTot" index="7" column="2" value="4"/>
    <arrayval field="cKnowTot" index="8" value="10"/>
    <arrayval field="cKnowTot" index="8" column="1" value="6"/>
    <arrayval field="cKnowTot" index="8" column="2" value="4"/>
    <arrayval field="cKnowTot" index="9" value="10"/>
    <arrayval field="cKnowTot" index="9" column="1" value="6"/>
    <arrayval field="cKnowTot" index="9" column="2" value="4"/>
    <arrayval field="cKnowTot" index="10" value="11"/>
    <arrayval field="cKnowTot" index="10" column="1" value="7"/>
    <arrayval field="cKnowTot" index="10" column="2" value="5"/>
    <arrayval field="cKnowTot" index="11" value="11"/>
    <arrayval field="cKnowTot" index="11" column="1" value="7"/>
    <arrayval field="cKnowTot" index="11" column="2" value="5"/>
    <arrayval field="cKnowTot" index="12" value="12"/>
    <arrayval field="cKnowTot" index="12" column="1" value="7"/>
    <arrayval field="cKnowTot" index="12" column="2" value="5"/>
    <arrayval field="cKnowTot" index="13" value="12"/>
    <arrayval field="cKnowTot" index="13" column="1" value="8"/>
    <arrayval field="cKnowTot" index="13" column="2" value="5"/>
    <arrayval field="cKnowTot" index="14" value="13"/>
    <arrayval field="cKnowTot" index="14" column="1" value="8"/>
    <arrayval field="cKnowTot" index="14" column="2" value="6"/>
    <arrayval field="cKnowTot" index="15" value="13"/>
    <arrayval field="cKnowTot" index="15" column="1" value="8"/>
    <arrayval field="cKnowTot" index="15" column="2" value="6"/>
    <arrayval field="cKnowTot" index="16" value="14"/>
    <arrayval field="cKnowTot" index="16" column="1" value="9"/>
    <arrayval field="cKnowTot" index="16" column="2" value="6"/>
    <arrayval field="cKnowTot" index="17" value="14"/>
    <arrayval field="cKnowTot" index="17" column="1" value="9"/>
    <arrayval field="cKnowTot" index="17" column="2" value="6"/>
    <arrayval field="cKnowTot" index="18" value="15"/>
    <arrayval field="cKnowTot" index="18" column="1" value="9"/>
    <arrayval field="cKnowTot" index="18" column="2" value="7"/>
    <arrayval field="cKnowTot" index="19" value="16"/>
    <arrayval field="cKnowTot" index="19" column="1" value="10"/>
    <arrayval field="cKnowTot" index="19" column="2" value="7"/>
    <arrayval field="cBonFtTot" index="2" value="1"/>
    <arrayval field="cBonFtTot" index="7" value="2"/>
    <arrayval field="cBonFtTot" index="12" value="3"/>
    <arrayval field="cBonFtTot" index="17" value="4"/>
    <arrayval field="cKnowTot" index="0" value="5"/>
    <arrayval field="cKnowTot" index="0" column="1" value="3"/>
    <arrayval field="cKnowTot" index="0" column="2" value="1"/>
    <arrayval field="cKnowTot" index="1" value="6"/>
    <usesource source="srcPathOfW"/>
    <tag group="ClassSkill" tag="skKnowNobl"/>
    <tag group="ClassSkill" tag="skRide"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="Classes" tag="PWWarder" name="Warder"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="AgeColumn" tag="2"/>
    <tag group="cFort" tag="Good"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="fCategory" tag="Combat"/>
    <tag group="fCategory" tag="Teamwork"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <tag group="ClassSkill" tag="skHandleAn"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowHist"/>
    <bootstrap thing="cPW3Aegis">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPW3Aegis">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPW3Aegis">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cPW3Aegis">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cPW3ArmMrk">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPW3ArmMrk">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPW3ArmMrk">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPW3GrdChl">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="fArmMedium"></bootstrap>
    <bootstrap thing="fWepMart"></bootstrap>
    <bootstrap thing="cPW3TacAc">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPW3CldStl">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPW3ExtDef">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPW3ExtDef">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPW3ExtDef">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPW3ExtDef">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPW3ExtDef">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cPW3AdpTac">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <bootstrap thing="fArmTower"></bootstrap>
    <bootstrap thing="fArmHeavy"></bootstrap>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <bootstrap thing="cPW3Stlwrt">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPW3StlDef">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPW3BrnStl">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPW3DthDef">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="cCfgPW3"></bootstrap>
    <bootstrap thing="cPW3ImpAeg">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPW3GrtAeg">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPW3DefFoc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="fArmShield"></bootstrap>
    <bootstrap thing="cPW3ImpDF">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPW3Aegis">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    </thing>
  <thing id="cPW3ArmMrk" name="Armiger&apos;s Mark" description="At 2nd level, a warder is trained in how best to control her enemies and how they behave in battle, urging them to throw their all against the warder’s indomitable armor and unyielding shield. With a sharp blade, a clever taunt, or something that otherwise attracts her foe, the warder can direct the attention of enemies towards himself.\n\nWhenever the warder attacks a foe in combat and inflict at least 1 point of damage, as a free action she may mark them as her foe (he may even mark a foe during an attack of opportunity and may make the free action to do so, even though it is not her turn) and attempt to continue to force them to engage the warder only. The target is aware of being marked, and the mark remains for a number of rounds equal to the warder’s Intelligence modifier (minimum of 1). Marked targets suffer a -4 penalty to attack rolls against foes that are not the warder, and arcane spellcasters suffer an increase in arcane spell failure of 10% + 1% per two warder levels until the mark expires. The warder may only maintain a number of marks equal to 3 + her Intelligence modifier at a time, and she may make a number of marks per day equal to ½ warder level + Intelligence modifier.\n\nAt 8th level, this penalty increases to -6, and it increases again to -8 at 16th level. This ability functions on creatures with an Intelligence score of 1 or more, allowing her to mark animals and other beasts as well as sentient beings, but not mindless creatures such as skeletons.  Multiple armiger’s marks overlap (do not stack)." compset="ClSpecial" summary="Marked enemies take a penalty to hit anyone but you">
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ChargeCalc" tag="LevelHalf"/>
    <tag group="ChargeCalc" tag="AttrOnly"/>
    <tag group="ChargeAttr" tag="aINT"/>
    <tag group="User" tag="Tracker"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="abAction" tag="Free"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <tag group="LvNameApp" tag="AppValue"/>
    <tag group="LvNameApp" tag="SignAppVal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Render" priority="10000" index="2"><![CDATA[field[sbName].text = field[thingname].text
field[abSumm].text = "Marked enemies get " & signed(field[abValue].value) & " to hit creatures other than you and suffer +" & field[abValue2].value & "% to ASF for " & field[abDuraText].text]]></eval>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ Set the list name
var idxPen as number
idxPen = (-2 - (field[xIndex].value * 2))
field[listname].text = field[thingname].text & " " & idxPen

~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)

~Calculate to-hit penalty for marked enemies
field[abValue].value = -2 -(field[xCount].value * 2)

~ Calculate ASF increase
field[abValue2].value = 10 + round(field[xTotalLev].value,0,-1)

~ Calculate mark duration (INT mod, min 1)
field[abDuration].value = maximum(1, #attrmod[aINT])]]></eval>
    </thing>
  <thing id="cPW3GrdChl" name="Improved Armiger&apos;s Mark" description="At 9th level, the warder may expend two uses of her armiger’s mark to make a grand challenge to all enemies within a 30 ft. radius and mark them with her words alone. Creatures affected must make a Will save (DC 10 + ½ warder level + Intelligence modifier) against the warder’s mark ability or suffer the penalties of being marked for a number of rounds equal to the warder’s Intelligence modifier. This does not count against her normal marking limit. This is a language-dependent ability and does not effect creatures of less than 1 Intelligence." compset="ClSpecial" summary="Damaged enemies take a penalty to hit anyone but you">
    <fieldval field="abRange" value="30"/>
    <usesource source="srcPathOfW"/>
    <tag group="Usage" tag="Day"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="LvNameApp" tag="AppValue"/>
    <tag group="LvNameApp" tag="SignAppVal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abSave" tag="WillNeg"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)


~ Calculate ASF increase
field[abDC].value = 10 + round(field[xTotalLev].value,0,-1)

~ Calculate mark duration (INT mod, min 1)
field[abDuration].value = maximum(1, #attrmod[aINT])]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[field[livename].text = "Grand Challenge"
field[sbName].text = field[thingname].text
field[abSumm].text = "Spend 2 marks, enemies within " & field[abRangText].text & " must make Will save (DC " & field[abDC].value & ") or be marked for " & field[abDuraText].text]]></eval>
    </thing>
  <thing id="cPW3GrtMrk" name="Greater Armiger&apos;s Mark" description="At 16th level, the armiger’s mark improves to allow her to recover an expended maneuver whenever she reduces a marked opponent’s hit points to 0 or less (this can only trigger once per marked opponent)." compset="ClSpecial" summary="Recover a maneuver when you kill a marked foe">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] <> 1)
~ If we've been Disabled, get out now
doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPW3TacAc" name="Tactical Acumen" description="At 4th level, the combat training that the warder has received hones her reflexes. Through her knowledge of tactics, training manuals, and lessons in the histories of war, her wits aid her when her agility may be impaired by her heavy armor. The warder may add her Intelligence modifier to her Reflex saves and to her initiative in place of her Dexterity modifier (using the higher of the two bonuses)." compset="ClSpecial" summary="Use INT for Ref save and Initiative, if higher than DEX">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)

~ Kind of a hacky way to do this IMHO, but I couldn't figure out how to assign INT as the initiative/REF attribute
if (hero.child[aINT].field[aBonus].value > hero.child[aDEX].field[aBonus].value) then
      ~figure out the difference between our INT and CHA modifiers
      field[abValue].value += #attrmod[aINT] - #attrmod[aDEX]

      hero.child[Initiative].field[Bonus].value += field[abValue].value
      hero.child[svRef].field[Bonus].value += field[abValue].value
endif]]></eval>
    </thing>
  <thing id="cPW3CldStl" name="Clad in Steel" description="Having improved her skill with her armor, the warder is a more capable combatant in it when protecting her allies or cause. The warder may subtract her aegis bonus from her total armor check penalty and increase the maximum Dexterity bonus on her armor by 1 at 6th level, and by 2 at 12th level." compset="ClSpecial" summary="Subtract Aegis bonus from ACP, increase max DEX of armor">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="Render" index="2"><![CDATA[field[abSumm].text = "Armor gets -" & field[abValue].value & " to ACP, " & signed(field[abValue2].value) & " to Max Dex"]]></eval>
    <eval phase="PostLevel" priority="3000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)

~ Modifier to ACP comes from Aegis (or anything that acts as it)
field[abValue].value = hero.childfound[xPWAegis].field[abValue].value

~ Calculate modifier to max DEX (1 at lvl 6, 2 at lvl 12)
field[abValue2].value = 1
if (field[xTotalLev].value >= 12) then
 field[abValue2].value += 1
endif

~ Apply the ACP and Max DEX modifiers to all equipped armor
foreach pick in hero from BaseArmor where "EquipType.Armor"
  eachpick.field[arArmorChk].value = minimum(eachpick.field[arArmorChk].value + field[abValue].value, 0)
  eachpick.field[arMaxDex].value += field[abValue2].value
nexteach]]></eval>
    </thing>
  <thing id="cPW3ExtDef" name="Extended Defense" description="Upon reaching 5th level, the warder becomes ever more skilled at adapting to the flow of combat. Once per day, the warder may activate Extended Defense as an immediate action. When she does, the character chooses a counter she has readied; she may initiate that counter as a free action (even on another’s turn) at will until the beginning of her next turn. At the beginning of her next turn, the chosen counter is expended. Every three levels beyond this (8th, 11th, 14th, and 17th levels), she may use this ability an additional time per day." compset="ClSpecial" summary="Choose a counter and use it as a free action until your next turn.">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)

~ Assign uses/day
field[trkMax].value = field[xCount].value]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[~ Set the listname
field[listname].text = field[thingname].text & " (" & field[xIndex].value & "/day)"]]></eval>
    </thing>
  <thing id="cPW3AdpTac" name="Adaptive Tactics" description="A warrior can attempt to plan for everything, but no plan stands against the heat of battle if there is no room for adaptation. At 7th level, the warder can expend one use of her armiger’s mark ability as a full-round action to expend up to her Intelligence modifier in readied maneuvers, then instantly ready an equal amount of maneuvers. The warder may not replace expended maneuvers using this ability; any maneuver she is re-preparing with this ability must be unexpended to be exchanged. She may choose from any of her known maneuvers." compset="ClSpecial" summary="Spend one mark, replace INT readed maneuvers">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="FullRd"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    <eval phase="Render" priority="100--" index="2"><![CDATA[field[abSumm].text = "As a full-round action, spend 1 use of Armiger's Mark to replace " & #attrmod[aINT] & " readied, unexpended maneuvers"]]></eval>
    </thing>
  <thing id="cPW3Stlwrt" name="Stalwart" description="At 12th level, a warder can use mental and physical resiliency to avoid certain attacks. If she makes a successful Fortitude or Will saving throw against an attack that has a reduced effect on a successful save, she instead avoids the effect entirely. A helpless warder does not gain the benefit of the stalwart ability." compset="ClSpecial" summary="If you succeed on a Fort or Will save for reduced effect, you suffer no effect instead.">
    <usesource source="srcPathOfW"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="None"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPW3StlDef" name="Steel Defense" description="At 15th level, the warder is capable of turning an otherwise lethal blow and continue the fight. When an attack that inflicts hit point damage from a natural attack, melee weapon, or ranged weapon would reduce the warder to 0 or fewer hit points, she can make a Fortitude save (DC the attacker’s attack roll) to deflect the attack to her armor or shield (light, heavy, or tower shields only), causing it to suffer the damage in her place (apply item hardness as normal). If this would break the character’s armor, it gains the broken condition until it is repaired. The warder cannot use this ability with broken armor or a broken shield. The warder must be wearing armor or a shield to use this ability." compset="ClSpecial" summary="Make a Fort save vs attack roll when you would be reduced to 0 or fewer HP; success means your armor or shield is damaged in your place.">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPW3BrnStl" name="Born of Steel" description="At 19th level, the warder is so at home in her armor that it is like a second skin, protecting her with its familiar embrace. When wearing medium or heavy armor, the warder is more resistant to critical hits. When a critical threat is rolled against him, the warder may add her Intelligence modifier to her AC against the critical confirmation roll." compset="ClSpecial" summary="Add INT to AC vs critical hit confirmation.">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)

~ If we're not wearing med/heavy armor, we're disabled.
doneif (hero.tagexpr[Hero.MedArmor | Hero.HeavyArmor] <> 1)

~ Apply situational AC bonus
field[abValue].value = #attrmod[aINT]
#situational[hero.child[ArmorClass],signed(field[abValue].value) & " vs. critical hit confirmation",field[name].text]]]></eval>
    </thing>
  <thing id="cPW3DthDef" name="Deathless Defenses" description="At 20th level, the warder can indefinitely hold a position to protect her allies, even if it may cost her her life. The warder must expend two uses of her armiger’s mark ability as an immediate action to activate her deathless defenses. While this ability is active, the warder is capable of maintaining her defensive focus as a move action (but recovers no maneuvers unless she spends a full round to recover) but gains the full bonuses of her defensive focus. Additionally, she receives the benefits of her aegis ability as well. She is unable to die from hit point damage while this effect is in use. She may maintain the use of this ability each round at the cost of one use of her armiger’s mark ability, or she may end it as a free action. Abilities or effects that don’t inflict hit point damage, such as energy drain or ability damage, can still kill the warder. While this effect is in use, she is immune to mind-affecting abilities, as her focus prevents any from tampering with her mind. Once this ability ends, either voluntarily or if the character runs out uses of armiger’s mark (assuming she is not dead), the warder is exhausted and must rest a full 8 hours to recover." compset="ClSpecial" summary="While active, immune to HP death and mind-affecting abilities, can maintain Defensive Focus as move action">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="Immediate"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PostAttr" priority="10010"><![CDATA[~ If we're not shown, just get out now
doneif (tagis[Helper.ShowSpec] = 0)
doneif (tagis[Helper.SpcDisable] <> 0)

~ If we're not activated, get out now
doneif (field[abilActive].value <> 1)

~ Apply Aegis bonus to AC
if (hero.tagis[Ability.cPW3Aegis] <> 0) then
  #applybonus[BonMorale, hero.child[ArmorClass], hero.child[cPW3Aegis].field[abValue].value]
endif]]></eval>
    </thing>
  <thing id="cCfgPW3" name="Warder Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="Discipline" tag="PrimalFury" name="Primal Fury" abbrev="Primal Fury"/>
    <tag group="Discipline" tag="BrokenBlad" name="Broken Blade" abbrev="Broken Blade"/>
    <tag group="PathOfWar" tag="Config" name="Configurable" abbrev="Configurable"/>
    <tag group="ProductId" tag="HLCommunit" name="HLCommunit" abbrev="HLCommunit"/>
    <tag group="ClsCountAs" tag="cHelpPW3" name="Warder" abbrev="Warder"/>
    <tag group="Discipline" tag="GoldenLion" name="Golden Lion" abbrev="Golden Lion"/>
    <tag group="Discipline" tag="IronTort" name="Iron Tortoise" abbrev="Iron Tortoise"/>
    <bootstrap thing="mHelpPW3"></bootstrap>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="cPW3ImpAeg" name="Improved Aegis" description="At 6th level, the warder&apos;s aegis’ range increases its effective area, growing to a 20 ft. radius." compset="ClSpecial" summary="Aegis radius increases to 20 ft">
    <fieldval field="abValue" value="10"/>
    <usesource source="srcPathOfW"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostAttr" priority="10010"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Get adjusted Aegis range
      field[abValue2].value += field[abValue].value + #value2[cPW3Aegis]

      field[listname].text = field[thingname].text & " (" & field[abValue2].value & " feet)"]]></eval>
    </thing>
  <thing id="cPW3GrtAeg" name="Greater Aegis" description="At12th level, the warder&apos;s aegis’ range increases its effective area, growing to a 30 ft. radius." compset="ClSpecial" summary="Aegis radius increases to 30 ft">
    <fieldval field="abValue" value="10"/>
    <usesource source="srcPathOfW"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostAttr" priority="10020"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Get adjusted Aegis range
      field[abValue2].value += field[abValue].value + #value2[cPW3Aegis]

      ~ If we have Improved Aegis, get its value too
      field[abValue2].value += #value[cPW3ImpAeg]

      field[listname].text = field[thingname].text & " (" & field[abValue2].value & " feet)"]]></eval>
    </thing>
  <thing id="xPWAegis" name="Aegis bonus" compset="Ability" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cHelpPWPC1" name="Battle Templar" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="cAbbr" value="BTm"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="srcPageNum" value="139"/>
    <arrayval field="cMagLevTot" index="2" value="2"/>
    <arrayval field="cMagLevTot" index="3" value="3"/>
    <arrayval field="cMagLevTot" index="4" value="4"/>
    <arrayval field="cMagLevTot" index="5" value="5"/>
    <arrayval field="cMagLevTot" index="6" value="6"/>
    <arrayval field="cMagLevTot" index="7" value="7"/>
    <arrayval field="cMagLevTot" index="8" value="8"/>
    <arrayval field="cMagLevTot" index="1" value="1"/>
    <usesource source="srcPathOfW"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="ExtraLev1" tag="Divine"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <tag group="cWill" tag="Poor"/>
    <tag group="Classes" tag="PWBtlTmpl" name="Battle Templar"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClassSkill" tag="skHeal"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="ClassSkill" tag="skKnowRel"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="cFort" tag="Good"/>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <bootstrap thing="fArmHeavy"></bootstrap>
    <bootstrap thing="cPWP1Man">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP1Disc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cCfgPWPC1"></bootstrap>
    <bootstrap thing="cPWP1OrdKn">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP1RchDv">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPWP1MrtHl">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWP1DvRec">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWP1GrdFt">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPWP1ShpFl">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWP1WrFth">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPWP1DInsp">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWP1BlChn">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPWP1BfInv">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="fArmShield"></bootstrap>
    </thing>
  <thing id="cPWBtlTmpl" name="Battle Templar" description="Battle templars serve the role of both divine agent and warrior in times when the state of their religion or church is in danger. Humble priests lay down their peaceful ways and take up the arms and armor of the warrior to defend their flock with sword, shield, and faith. Battle templars come from many religions, but they always come from religions in which the virtues of living a good life are taught, and they rise up to protect their people in times of crisis. Some churches actively recruit members of their faith to serve as protectors and heroes, showing these former priests and priestesses to be pinnacles of their faith and providing something for the youngest to admire and aspire to.\n\nMost battle templar hail from the cleric class, as it has a strong focus in matters of faith. Some are multiclass warder/clerics or single class clerics and paladins." compset="ClassLevel" maxlimit="10">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpPWPC1"></bootstrap>
    <link linkage="helper" thing="cHelpPWPC1"/>
    <exprreq message="Spellcraft 5 ranks required"><![CDATA[#skillranks[skSpellcr] >= 5]]></exprreq>
    <exprreq message="Knowledge (Martial) 2 ranks required"><![CDATA[#skillranks[skPWKnowMa] >= 2]]></exprreq>
    <exprreq message="Knowledge (Religion) 2 ranks required"><![CDATA[#skillranks[skKnowRel] >= 2]]></exprreq>
    <exprreq message="Ability to cast 2nd-level Divine spells required."><![CDATA[tagcount[Hero.Divine] >= 2]]></exprreq>
    <exprreq message="Must know at least one Golden Lion or Iron Tortoise manuever."><![CDATA[tagcount[HasMan.GoldenLion] + tagcount[HasMan.IronTort] > 0]]></exprreq>
    <exprreq message="Must know at least one Golden Lion or Iron Tortoise stance."><![CDATA[tagcount[HasStance.GoldenLion] + tagcount[HasStance.IronTort] > 0]]></exprreq>
    <exprreq message="Martial Power feat required."><![CDATA[#hasfeat[fPWMartPow] <> 0]]></exprreq>
    </thing>
  <thing id="cPWP1Disc" name="Disciplines" description="Choose two martial disciplines (in addition to Golden Lion).  These must be disciplines you already had access to from another source." compset="ClSpecial">
    <fieldval field="usrCandid1" value="PathOfWar.selDisc &amp; !Discipline.GoldenLion"/>
    <fieldval field="usrCandid2" value="PathOfWar.selDisc &amp; !Discipline.GoldenLion"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Hide" tag="Statblock"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000">~ The configurable for Battle Templar starts out with only
      ~ Golden Lion, but the user may choose two more disciplines
      if (field[usrChosen1].ischosen = 1) then
        perform field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpPWPC1].pushtags[Discipline.?]
      endif
      if (field[usrChosen2].ischosen = 1) then
        perform field[usrChosen2].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpPWPC1].pushtags[Discipline.?]
      endif</eval>
    </thing>
  <thing id="cCfgPWPC1" name="Battle Templar Maneuvers" compset="Configure" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClsCountAs" tag="cHelpPWPC1"/>
    <bootstrap thing="mHelpPWPC1"></bootstrap>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    </thing>
  <thing id="cPWP1Man" name="Maneuver List" description="Select the maneuver list that this class will add to.  Although this class will maintain a separate maneuver list so that discipline restrictions can be enforced, it will inherit the initiator level and attribute modifier from the selected list.  For example, selecting the Warlord list will cause this class&apos;s maneuvers to use your Warlord IL and add your Charisma bonus to their save DC." compset="ClSpecial" summary="Select the maneuver list that this class will add to.">
    <fieldval field="usrCandid1" value="component.PWManList"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Hide" tag="Statblock"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="15"><![CDATA[      ~ I am not fond of this, but I haven't figured out a better way yet.
      ~ Basically, the issue is that initiating PrC's add maneuvers known/readied as if they were further levels in an existing initiator class.  So theoretically we could just have levels in the PrC add to the known/readied number of another class (or Martial Training).  However, there's a complication: PrC's often have their own discipline list for the known maneuvers they grant.  So we can't just add to another class's maneuvers; we need a separate configurator that can be tagged according to the disciplines allowed by the PrC.  However, we ALSO have to account for the fact that we're still acting as a previous class for the purposes of initiator level and modifier (do we use INT, CHA, etc for setting DC's).  So here, we have the user pick an existing maneuver source (either an initiating class, or Martial Training), and we pull the calculated IL and IM from that source.
      ~ I REALLY hate this solution, because it means creating phony "class features" to serve as UI elements, not to mention the way false impresssions it generates regarding how PrC maneuvers are handled by the game.
      ~ The timing is set so that we set the PrC config's level after those are normally calculated by PWSetupIL, but before maneuver IL's are inherited in the field's calc script.

      ~ Stop if no maneuver list has been chosen
      doneif (field[usrChosen1].ischosen <> 1)

      ~ Find the PrC configurable
      perform hero.findchild[Configure, root.tagids[ClsCountAs.?]].setfocus
      doneif (state.isfocus = 0)

      ~ Inherit the initiating attribute from the other class by pulling its UseAttr tag and pushing it to this class's configurable
      perform field[usrChosen1].chosen.pulltags[UseAttr.?]
      perform focus.pushtags[UseAttr.?]

      ~ Also inherit the initiator level from the other class
      focus.field[cfgLevel].value = field[usrChosen1].chosen.field[cIL].value

      ~ Finally, set the IL for the actual maneuver list
      perform hero.findchild[PWManList, root.tagis[ClsCountAs.?]].setfocus
      doneif (state.isfocus = 0)
      perform field[usrChosen1].chosen.pulltags[UseAttr.?]
      perform focus.pushtags[UseAttr.?]
      focus.field[cIL].value = field[usrChosen1].chosen.field[cIL].value]]></eval>
    <eval phase="First" index="2"><![CDATA[      ~ Make sure we can't select the configurable of the class this special is attached to
      field[usrCandid1].text &= " & !" & root.tagids[ClsCountAs.?]]]></eval>
    </thing>
  <thing id="cPWP1OrdKn" name="Ordained Knight" description="A battle templar fulfills a role special to his religion, and as such, may act both as courageous warriors and as pious priest. He receives a circumstance bonus on Diplomacy checks equal to his class level when dealing with members of his faith. If the character possessed a unique divine ability from a previous class (the class features channel energy, a cleric&apos;s domains, a paladin&apos;s lay on hands, an inquisitor&apos;s bane or inquisitions, or an oracle&apos;s curse), he may add his levels in battle templar to that class to determine their effectiveness. Additionally, should the battle templar possess the aegis class feature (see warder class), the battle templar may add his class level to his warder level to determine the bonus of his aegis class feature." compset="ClSpecial" summary="Continue advancement in certain divine class abilities">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="1000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Situational bonus to Diplomacy skill
      #situational[hero.childfound[skDiplo], signed(root.field[cTotalLev].value) & " circumstance bonus when dealing with a member of the same faith", field[thingname].text]]]></eval>
    <eval phase="PostLevel" priority="10" index="2"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Our Battle Templar level advances certain other class features as if they were levels in the class that feature came from
      ~ Some of those features count each level 1-for-1, some use half level
      var MCL as number
      var OCL as number
      var levDiv as number
      var levAdd as number
      MCL = field[xTotalLev].value

      ~ Channel energy (full level)
      OCL = hero.childfound[xChannel].field[abValue].value
      levDiv = 1
      call PWOrdKtLev
      hero.childfound[xChannel].field[abValue].value += levAdd

      ~ Domains/Inquisitions
      foreach pick in hero from Domain where "Domain.?"
        OCL = eachpick.field[xTotalLev].value
        levDiv = 1
        call PWOrdKtLev
        eachpick.field[xTotalLev].value += levAdd
      nexteach

      ~ Lay on Hands (1/2 level)
      OCL = hero.childfound[cPalLayHnd].field[abValue].value
      levDiv = 2
      call PWOrdKtLev
      hero.childfound[cPalLayHnd].field[abValue].value += levAdd

      ~ Bane
      OCL = hero.childfound[cInqBane].field[xTotalLev].value
      levDiv = 1
      call PWOrdKtLev
      hero.childfound[cInqBane].field[xTotalLev].value += levAdd

      ~ Aegis
      OCL = hero.childfound[cPW3Aegis].field[xTotalLev].value
      levDiv = 1
      call PWOrdKtLev
      hero.childfound[cPW3Aegis].field[xTotalLev].value += levAdd

      ~ Oracle Curses are handled in the pre-levels script]]></eval>
    <eval phase="PreLevel" priority="11000" index="3"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

        ~ Oracle curses already add 1/2 of all non-Oracle classes to determine curse effects, so we'll add 1/2 of our Battle Templar level again.  This is a rare instance of rounding up instead of down, because we want to ensure that odd-numbered class levels get added fully.
        var bonus as number
        bonus = round(#levelcount[PWBtlTmpl]/2,0,1)
        foreach pick in hero from BaseCustSp where "SpecSource.cHelpOra | SpecSource.cHelpClr"
          eachpick.field[xExtraLev].value += bonus
        nexteach]]></eval>
    </thing>
  <thing id="cPWP1RchDv" name="Reach of the Divine" description="At 2nd level, the battle templar is capable of aiding an ally with every strike of his weapon or bash of his shield through the use of his divine magic. Whenever the battle templar initiates a martial strike, he may cast a divine spell (with a level equal to or less than the level of the strike initiated) on himself or an ally within touch range as a move action. He must cast this defensively if he is casting within a threatened area to avoid provoking attacks of opportunity." compset="ClSpecial" summary="Cast touch spell on self or ally as a move action when you initiate a martial strike">
    <tag group="abAction" tag="Move"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWP1MrtHl" name="Martial Healing" description="The battle templar&apos;s divine power is so firmly blended with his martial talents that when he utilizes a martial maneuver, the power of his faith infuses it and aids him and his allies. When the battle templar initiates a martial strike, as a swift action he can heal himself or an ally within close range (25 ft. plus 5 ft. per two initiator levels) for 1d4/maneuver level + the battle templar&apos;s class level in hit points." compset="ClSpecial" summary="Heal self or ally when you initiate a strike">
    <fieldval field="abRange" value="25"/>
    <fieldval field="abValue2" value="5"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="abRange" tag="Feet"/>
    <eval phase="Final" priority="50000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Range is 25 ft + 5 ft per two initiator levels
      field[abRange].value += (round(hero.child[mHelpPWPC1].field[cIL].value/2, 0, -1)) * 5

      field[abText].text = field[xTotalLev].value & " + 1d4/maneuver level HP"]]></eval>
    </thing>
  <thing id="cPWP1DvRec" name="Divine Recovery" description="Beginning at 4th level, a battle templar may channel divine power to recharge his martial maneuvers. As a swift action, the character can recover an expended maneuver by sacrificing a spell with a level equal to or greater than the maneuver&apos;s. If the spell&apos;s level is higher than the maneuver&apos;s level, then additional level &quot;overage&quot; restores 1d8 hit points of damage to the battle templar per excess spell level." compset="ClSpecial" summary="Recover maneuvers by expending spell slots">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPWP1GrdFt" name="Guardian of the Faith" description="At 5th level, the battle templar learns a signature stance of his calling, and with it he can better protect himself and those he considers his allies. This is a 5th level stance of no particular discipline. To enter this stance, as a swift action the battle templar abandons a martial stance he is currently using. The benefits of this ability end if the battle templar assumes a martial stance. Once within this stance, the battle templar gains damage reduction 10/adamantine, and allies within 20 ft of his position (excluding himself) gain a +4 sacred or profane (alignment dependent) bonus to AC, CMD, and to saving throws." compset="ClSpecial" summary="Martial stance grants DR 10/adamantine, +4 bonus to AC/CMD/saves to allies within 20&apos;">
    <fieldval field="abValue" value="10"/>
    <fieldval field="actName" value="Guardian of the Faith Stance"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="mType" tag="Stance"/>
    <tag group="mLevel" tag="5"/>
    <tag group="mInitAct" tag="Swift1"/>
    <tag group="mRange" tag="Personal"/>
    <tag group="mTarget" tag="You"/>
    <tag group="mDuration" tag="Stance"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ Grant damage reduction
      #applydr[xDamRdAdam, field[abValue].value]

      ~ Apply the PathOfWar.StanceOn tag
      perform hero.assign[PathOfWar.StanceOn]]]></eval>
    <evalrule phase="PostAttr" priority="10000" message="Too many stances activated"><![CDATA[      ~ If we're not enabled, do nothing
      validif (field[abilActive].value = 0)

      ~ Make sure we don't exceed the allowed number of stances
      validif (hero.tagcount[PathOfWar.StanceOn] <= hero.tagcount[PathOfWar.StanceUp])]]></evalrule>
    </thing>
  <thing id="cPWP1ShpFl" name="Shepherd the Flock" description="Those under his care must be protected; a credo of the battle templar. At 6th level, the battle templar&apos;s spells take on a defensive nature as he casts them to protect himself and his allies. Whenever he casts a spell through his Reach of the Divine class feature, the target also gains a +4 sacred or profane (alignment dependent) bonus to their AC for one minute (multiple uses of this ability do not increase the duration or the protection of this ability)." compset="ClSpecial" summary="When you cast a spell through Reach of the Divine, target gets +4 to AC for 1 minute">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWP1WrFth" name="Wrath of the Faithful" description="At 7th level, the power of his faith fuses with the martial temper that brews within the battle templar, and when he casts his mighty divine spells, they inspire him to battle. When the battle templar casts a divine spell, the next martial strike he initiates within one minute of casting gains a morale bonus to damage rolls equal to the level of the spell cast." compset="ClSpecial" summary="When you cast a divine spell, your next martial strike gains a damage bonus">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWP1DInsp" name="Divine Inspiration" description="At 8th level, the battle templar is capable of utilizing the guidance of his divine magic to enlighten others and restore their martial talents should they be depleted. As an immediate action, the battle templar selects an ally within close range (25 ft. plus an additional 5 ft. per two initiator levels) and expends his divine spell energy to allow the ally to recover a maneuver as if the ally had used the battle templar&apos;s divine recovery class feature." compset="ClSpecial" summary="Use Divine Recovery on allies to restore their maneuvers">
    <fieldval field="abValue" value="25"/>
    <fieldval field="abValue2" value="5"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Range is 25 ft + 5 ft per two initiator levels
      var halfIL as number
      var addRange as number
      field[abRange].value = field[abValue].value
      halfIL = round(root.field[cCasterLev].value/2, 0, -1)
      addRange = halfIL * field[abValue2].value
      field[abRange].value += addRange]]></eval>
    </thing>
  <thing id="cPWP1BlChn" name="Bolstering Channel" description="At 9th level, the battle templar may channel the energy of his god while recovering his martial strength. As a standard action, the battle templar recovers a single maneuver and may channel energy as part of that action." compset="ClSpecial" summary="Recover a maneuver and channel energy as a standard action">
    <tag group="abAction" tag="Standard"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPWP1BfInv" name="Battlefield Invocation" description="At 10th level, the battle templar has reached a pinnacle of divine power and martial prowess that few ever do, and as such, is capable of amazing feats of skill. The battle templar expends a 4th level or higher spell slot as a free action and initiates a martial strike as normal. Allies (excluding the battle templar) within 60 ft. of his position witnessing this are invigorated by his power, and regain 10 hit points per level of the spell sacrificed to power this ability and a +4 morale bonus to attack and damage rolls for one round. This ability does not combine with the Reach of the Divine or the Shepherd the Flock class features." compset="ClSpecial" summary="Expend a 4th-level or higher spell when you perform a martial strike to heal and empower allies within 60&apos;">
    <fieldval field="abRange" value="60"/>
    <fieldval field="abDuration" value="1"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="abAction" tag="Free"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cHelpPWPC2" name="Bladecaster" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="cAbbr" value="Bcs"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="srcPageNum" value="141"/>
    <arrayval field="cMagLevTot" index="2" value="2"/>
    <arrayval field="cMagLevTot" index="3" value="3"/>
    <arrayval field="cMagLevTot" index="4" value="4"/>
    <arrayval field="cMagLevTot" index="5" value="5"/>
    <arrayval field="cMagLevTot" index="6" value="6"/>
    <arrayval field="cMagLevTot" index="7" value="7"/>
    <arrayval field="cMagLevTot" index="8" value="8"/>
    <arrayval field="cKnowTot" index="1" value="1"/>
    <arrayval field="cKnowTot" index="2" value="1"/>
    <arrayval field="cKnowTot" index="2" column="1" value="1"/>
    <arrayval field="cKnowTot" index="2" column="2" value="1"/>
    <arrayval field="cKnowTot" index="3" value="2"/>
    <arrayval field="cKnowTot" index="3" column="1" value="1"/>
    <arrayval field="cKnowTot" index="3" column="2" value="1"/>
    <arrayval field="cKnowTot" index="4" value="2"/>
    <arrayval field="cKnowTot" index="4" column="1" value="1"/>
    <arrayval field="cKnowTot" index="4" column="2" value="1"/>
    <arrayval field="cKnowTot" index="5" value="3"/>
    <arrayval field="cKnowTot" index="5" column="1" value="2"/>
    <arrayval field="cKnowTot" index="5" column="2" value="1"/>
    <arrayval field="cKnowTot" index="6" value="3"/>
    <arrayval field="cKnowTot" index="6" column="1" value="2"/>
    <arrayval field="cKnowTot" index="6" column="2" value="1"/>
    <arrayval field="cKnowTot" index="7" value="4"/>
    <arrayval field="cKnowTot" index="7" column="1" value="2"/>
    <arrayval field="cKnowTot" index="7" column="2" value="2"/>
    <arrayval field="cKnowTot" index="8" value="4"/>
    <arrayval field="cKnowTot" index="8" column="1" value="3"/>
    <arrayval field="cKnowTot" index="8" column="2" value="2"/>
    <arrayval field="cKnowTot" index="9" value="5"/>
    <arrayval field="cKnowTot" index="9" column="1" value="3"/>
    <arrayval field="cKnowTot" index="9" column="2" value="2"/>
    <arrayval field="cMagLevTot" index="1" value="1"/>
    <usesource source="srcPathOfW"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="cWill" tag="Poor"/>
    <tag group="Classes" tag="PWBldcastr"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ExtraLev1" tag="Arcane"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skKnowArca"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="cFort" tag="Good"/>
    <bootstrap thing="cPWP1Man">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cCfgPWPC2"></bootstrap>
    <bootstrap thing="cPWP2MtCst">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP2StaAS">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP2ArcSt">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPWP2ArcRc">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWP2BcStr">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWP2ArcRn">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPWP2MrtCS">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPWP3ImpBC">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPWP2ArcAs">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <eval phase="PostLevel" index="2"><![CDATA[        ~ Have the PrC's maneuver configurator inherit the discipline list of the existing initiator class it follows
        perform hero.childfound[cPWP1Man].field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpPWPC2].pushtags[Discipline.?]]]></eval>
    </thing>
  <thing id="cPWBldcast" name="Bladecaster" description="For some, the technique of blending both the skills of the warrior with the arts of the magic-user is an impossible task, the mind or the body lacking in the strengths needed for such an arduous undertaking. Those rare few who are both strong of arm and quick of mind have to the potential to blend these two differing schools and create a new whole. Using techniques gained from the champions of the fey worlds and taken from their pupils, the elves, the techniques of the bladecaster have spread amongst the races.\n\nBy fortifying the body with arcane might, the bladecaster can force his magic to augment his physical abilities and increase his martial capabilities to supernatural levels. These practices have been mastered by many races, and each race has added something new to the pursuit of martial and arcane supremacy, and the bladecaster in the world today uses techniques that have spread for hundreds of years amongst all civilized races. In the modern day, one can find bladecasters where their talents are most desired: on battlefields and in hot spots where great armies clash. Bladecasters stride as lords of war, arcane energies rippling about them as they sunder the strength of their foes. Most bladecasters are warder/wizards, warder/magus, or warlord/ sorcerers, though some warder/witches are known who traffic with the fey realms.\n\nMost bladecaster are warder/wizards, warder/magus, or warlord/sorcerers, though some warder/witches are known who traffic with the fey realms. Few stalkers pursue this route, and those that do often are multiclassed with magus." compset="ClassLevel" maxlimit="10">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpPWPC2"></bootstrap>
    <link linkage="helper" thing="cHelpPWPC2"/>
    <exprreq message="Base Attack Bonus +4 required"><![CDATA[#BAB[] >= 4]]></exprreq>
    <exprreq message="Knowledge (Martial) 5 ranks required"><![CDATA[#skillranks[skPWKnowMa] >= 5]]></exprreq>
    <exprreq message="Spellcraft 5 ranks required"><![CDATA[#skillranks[skSpellcr] >= 5]]></exprreq>
    <exprreq message="Ability to cast 2nd-level arcane spells required."><![CDATA[tagcount[Hero.Arcane] >= 2]]></exprreq>
    <exprreq message="Must be able to use at least one martial maneuver"><![CDATA[tagcount[PathOfWar.HeroInit] <> 0]]></exprreq>
    <exprreq message="Combat Casting feat required."><![CDATA[#hasfeat[fComCast] <> 0]]></exprreq>
    <exprreq message="Improved Counterspell feat required."><![CDATA[#hasfeat[fImpCount] <> 0]]></exprreq>
    <exprreq message="Must be able to use at least one martial stance."><![CDATA[tagcount[HasStance.?] <> 0]]></exprreq>
    </thing>
  <thing id="cCfgPWPC2" name="Bladecaster Maneuvers" compset="Configure" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClsCountAs" tag="cHelpPWPC2"/>
    <bootstrap thing="mHelpPWPC2"></bootstrap>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    </thing>
  <thing id="cPWP2MtCst" name="Martial Caster" description="At 1st level, the blending of arcane magic and martial maneuvers begins to flower into an effective and unique fighting style. The bladecaster may select one arcane spellcasting class that he possesses; he may now cast its spells in light armor without suffering interference from arcane spell failure chance." compset="ClSpecial" summary="Cast spells in light armor">
    <fieldval field="usrCandid1" value="ClassType.? &amp; CasterSrc.Arcane"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Do nothing if a selection hasn't been made
      doneif (field[usrChosen1].ischosen <> 1)

      perform field[usrChosen1].chosen.assign[CastArmor.Light]]]></eval>
    </thing>
  <thing id="cPWP2StaAS" name="Stance of Arcane Steel" description="Beginning at 1st level, the bladecaster learns how to channel his arcane energies to assist his physical abilities in the theater of war. As a swift action, the bladecaster may forgo the use of any stance he is in to assume the stance of arcane steel. This stance is equivalent to a 3rd level stance of no particular discipline. The bladecaster gains the ability to burn his arcane energy to empower his martial abilities. As a free action, the bladecaster may sacrifice uncast spells or spell slots to grant himself one of the following bonuses for one round. At 5th level, these bonuses persist for two rounds, and these bonuses persist for three rounds at 9th level.\n\n[i]Arcane Edge[/i]: The bladecaster gains an insight bonus on attack rolls equal to the spell’s level.\n\n[i]Eldritch Smite[/i]: The bladecaster adds 1d6 points of extra damage per level of the spell. If the weapon possesses an enhancement that inflicts elemental damage (such as flaming) or if the spell possesses an elemental type (such as wall of fire possessing the [Fire] type), then this bonus damage may use that energy type; otherwise it is force damage.\n\n[i]Defensive Field[/i]: The bladecaster gains a bonus to AC equal to the spell’s level.\n\n[i]Grace of the Arcane[/i]: The bladecaster gains an insight bonus on Fortitude and Reflex saving throws equal to the spell’s level.\n\n[i]Energy Shield[/i]: The bladecaster gains resistance to acid, cold, electricity, fire, or sonic equal to 5 × the spell’s level." compset="ClSpecial" summary="Martial stance; expend spells to gain combat bonuses">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="mType" tag="Stance"/>
    <tag group="mLevel" tag="3"/>
    <tag group="mInitAct" tag="Swift1"/>
    <tag group="mRange" tag="Personal"/>
    <tag group="mTarget" tag="You"/>
    <tag group="mDuration" tag="Stance"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ Grant damage reduction
      #applydr[xDamRdAdam, field[abValue].value]

      ~ Apply the PathOfWar.StanceOn tag
      perform hero.assign[PathOfWar.StanceOn]]]></eval>
    <evalrule phase="PostAttr" priority="10000" message="Too many stances activated"><![CDATA[      ~ If we're not enabled, do nothing
      validif (field[abilActive].value = 0)

      ~ Make sure we don't exceed the allowed number of stances
      validif (hero.tagcount[PathOfWar.StanceOn] <= hero.tagcount[PathOfWar.StanceUp])]]></evalrule>
    </thing>
  <thing id="cPWP2ArcSt" name="Arcane Steel" description="At 2nd level a bladecaster can fortify his body with its very own magic. Whenever a bladecaster casts an arcane spell, he gains a defense field of energy that protects him from harm. The bladecaster gains temporary hit points equal to twice the spell’s level. These defensive field hit points stack with those gained from further casting of other spells using this ability and last until the end of the encounter or until depleted by attacks." compset="ClSpecial" summary="Gain temporary HP when you cast an arcane spell">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWP2ArcRc" name="Arcane Recovery" description="At 3rd level, a bladecaster knows how to expend his magic to enhance his fighting and his arcane ability simultaneously. As a free action, the character may expend a prepared spell or spell slot to recover an expended maneuver. The bladecaster sacrifices a prepared arcane spell or spell slot of a level equal to or great than the maneuver level to be recovered, and the maneuver is instantly recovered. While suffused with arcane energies for maneuver recovery, the bladecaster gains a +2 circumstance bonus to his caster level on the next arcane spell he casts (within one minute of using arcane recovery; multiple recoveries do not stack or accrue multiple uses)." compset="ClSpecial" summary="Recover maneuvers by expending spell slots">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Free"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPWP2BcStr" name="Battlecaster&apos;s Strike" description="At 4th level, the bladecaster learns techniques that allow him to unleash his offensive magic through the medium of his weapon, delivering magic at melee or range with equal potency. When the bladecaster initiates a martial strike, as a swift action he may cast an arcane spell (with a range of touch and a level equal to or less than the level of the strike initiated) against the same target as the strike. These spells must have a range of touch. If the bladecaster would provoke an attack of opportunity for casting a spell within a threatened square, he may attempt to cast defensively as normal. He may utilize this ability a number of times per day equal to 1 + the bladecaster’s initiator modifier (minimum of 1)." compset="ClSpecial" summary="As a swift action, cast a spell against the target of your martial strike.">
    <fieldval field="trkMax" value="1"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="Usage" tag="Day"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Stop now if we haven't picked a maneuver list
      doneif (hero.childfound[cPWP1Man].field[usrChosen1].ischosen <> 1)

      ~ Add initiator modifier to uses/day
      var initMod as number
      Call PWgetIMod
      field[trkMax].value += initMod]]></eval>
    </thing>
  <thing id="cPWP2ArcRn" name="Arcane Ruin" description="At 5th level, the bladecaster brings ruin to his foes with every stroke of his blade and opens their defenses to the power of his arcane magic. A foe damaged by his martial strikes find that it suffers increased difficulties resisting the bladecaster’s magic, suffering a -2 penalty to its Armor Class and saving throws against the bladecaster’s arcane spells on subsequent rounds for the remainder of the encounter, or until the bladecaster recovers his maneuvers." compset="ClSpecial" summary="Foes damaged by your martial strikes suffer -2 to AC and saves vs. your spells">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWP2MrtCS" name="Martial Counterspell" description="At 7th level, the bladecaster learns to be able to use a readied counter and his own arcane energies to counter an enemy spellcaster’s magic. If the bladecaster is targeted by or subjected to a spell or spell-like ability, he may as an immediate action expend a readied counter and steel himself against it with a bold act of martial prowess (the expended counter’s effects are lost in the use of this ability) and make a Spellcraft check (DC 15 + the spell’s level) as a free action to identify the spell being used. He may then make an initiator level check (1d20 + the bladecaster’s initiator level) against a DC equal to 11 + the spell’s caster level; if successful, the spell is successfully countered. If he is unsuccessful, the spell functions as normal." compset="ClSpecial" summary="Use a martial counter as a counterspell">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWP3ImpBC" name="Improved Battlecasting" description="At 9th level, the bladecaster has become so accomplished at blending his arcane magic with his martial prowess that he may now utilize ranged touch spells against foes with as if they were melee touch spells when utilizing his battlecaster’s strike." compset="ClSpecial" summary="Use ranged touch spells as melee touch spells with Battlecaster&apos;s Strike">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWP2ArcAs" name="Arcane Assault" description="At 10th level, the bladecaster is capable of fully blending his arcane abilities with his martial talent. The bladecaster is capable of sculpting his very magic into the implements of war, enabling it to deliver his martial maneuvers. The bladecaster may activate this ability as a free action when he casts a spell that requires an attack roll. He may initiate a strike as a free part of casting that spell, using the spell in place of his normal ranged or melee attack, as appropriate (the spell effectively delivers the maneuver’s effects in place of the bladecaster’s weapon.) The spell’s range is reduced to 30-ft or closer (if the spell’s range is smaller, then use that), and spell resistance or a successful saving throw against the spell effect negates the maneuver being used. Spells that create multiple attacks or that target multiple creatures only have the strike added to the first such attack. This ability may be used a number of times equal to 1 + initiator modifier per day." compset="ClSpecial" summary="Use a martial strike with an attack spell">
    <fieldval field="trkMax" value="1"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Free"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Tracker"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Stop now if we haven't picked a maneuver list
      doneif (hero.childfound[cPWP1Man].field[usrChosen1].ischosen <> 1)

      ~ Add initiator modifier to uses/day
      var initMod as number
      Call PWgetIMod
      field[trkMax].value += initMod]]></eval>
    </thing>
  <thing id="cHelpPWPC3" name="Dragon Fury" compset="Class" uniqueness="unique">
    <fieldval field="cHDSides" value="12"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="cAbbr" value="DFr"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="srcPageNum" value="144"/>
    <usesource source="srcPathOfW"/>
    <tag group="cFort" tag="Good"/>
    <tag group="cRef" tag="Good"/>
    <tag group="cWill" tag="Poor"/>
    <tag group="Classes" tag="PWPC3" name="Dragon Fury"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <bootstrap thing="cPW3DrFrTr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFFoc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFFoc">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFFoc">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFFoc">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPWP3Sharp">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP3DoTC">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFDef">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFDef">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFDef">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPWP3VicFn">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPWP3DFRec">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWP3DWGD">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cCfgPWPC3"></bootstrap>
    <bootstrap thing="cPWP1Man">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="PWDisLevel"></bootstrap>
    </thing>
  <thing id="cPWDragFur" name="Dragon Fury" description="The disciple of the Thrashing Dragon discipline knows the controlled fury of the dragon’s rage on the battlefield, the sinuous twists and the lashing claws of that savage beast are engraved in the body of its student. By devoting one’s self to the vicious style, the disciple learns many things on how best to emulate the dragon and its fighting style. The ferocity and grace in each twist of the blade and each leap that he makes hides a fierce power and determination to win. These specialists are known as dragon furies, and a dragon’s deep well of wrath lives within their hearts and pumps its fury to every inch of their body. Most dragon furies hail from the ranks of stalkers and warlords, and some from the occasional bard or ranger. The most terrifying also know of the potency of true primal rage and have a background in the barbarian class." compset="ClassLevel" maxlimit="10">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpPWPC3"></bootstrap>
    <link linkage="helper" thing="cHelpPWPC3"/>
    <exprreq message="Base Attack Bonus +4 required"><![CDATA[#BAB[] >= 4]]></exprreq>
    <exprreq message="Knowledge (Martial) 6 ranks required"><![CDATA[#skillranks[skPWKnowMa] >= 6]]></exprreq>
    <exprreq message="Acrobatics 6 ranks required"><![CDATA[#skillranks[skAcrobat] >= 6]]></exprreq>
    <exprreq message="Must be able to use at least one Thrashing Dragon stance"><![CDATA[tagcount[HasStance.ThrashDrag] > 0]]></exprreq>
    <exprreq message="Two-Weapon Fighting feat required"><![CDATA[#hasfeat[fTwoWep] <> 0]]></exprreq>
    <prereq message="Must know at least one Thrashing Dragon strike">
      <validate><![CDATA[foreach pick in hero from PWManuever where "mType.Strike & Discipline.ThrashDrag"
  @valid = 1
nexteach]]></validate>
      </prereq>
    <prereq message="Must be able to use 3rd-level maneuvers">
      <validate><![CDATA[foreach pick in hero from PWManuever where "!mType.Stance"
  validif (eachpick.tagvalue[mLevel.?] >= 3)
nexteach]]></validate>
      </prereq>
    <prereq message="Discipline Focus (Thrashing Dragon) feat required">
      <validate><![CDATA[foreach pick in hero from BaseFeat where "IsFeat.fPWDiscFoc"
  validif (eachpick.field[usrChosen1].chosen.tagis[Discipline.ThrashDrag] <> 0)
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="cCfgPWPC3" name="Dragon Fury Maneuvers" compset="Configure" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClsCountAs" tag="cHelpPWPC3"/>
    <tag group="Discipline" tag="BrokenBlad"/>
    <tag group="Discipline" tag="PrimalFury"/>
    <bootstrap thing="mHelpPWPC3"></bootstrap>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    </thing>
  <thing id="cPW3DrFrTr" name="Dragon Fury Training" description="The path of the dragon fury has semi-mystical roots in several different traditions and schools of thought, allowing divergent paths to come together as one in the hands of its practitioners. If the character possesses one of the following abilities: bardic performance, ki pool, or rage; the character may add his class level to the class that offers that ability to determine the number of bardic performance rounds, ki points, or rounds of rage that he may use per day. This does not improve their effectiveness; this only increases the number of uses per day." compset="ClSpecial" summary="Gain daily uses of ki, rage, or bardic perfomance if you already had those features">
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ The rules state that our levels in this class ONLY count for uses/day of these other class features, not their effectiveness.  So we have to add to their trkMax instead of their level counts.

      var lev as number
      var halfLev as number
      var doubleLev as number
      lev = field[xTotalLev].value
      halfLev = round(lev/2,0,-1)
      doubleLev = lev * 2

      ~ Barbarian Rage
      #trkmax[cBbnRage] += doubleLev

      ~ Bardic Performance
      #trkmax[cBrdPerfor] += doubleLev

      ~ Ki Pool
      #trkmax[cMnkKiPool] += halfLev
      #trkmax[cPW2KiPool] += halfLev]]></eval>
    </thing>
  <thing id="cPWP3DFFoc" name="Dual Fang Focus" description="The dragon fury is a practitioner of two-weapon fighting styles and suffers fewer penalties when fighting with two weapons or a double weapon. He adds a +1 competence bonus to attack and damage rolls while two-weapon fighting with these weapons at 1st level. This bonus increases by +1 at 4th level, and again at 7th and 10th levels." compset="ClSpecial" summary="Gain bonuses while fighting with two weapons">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
      field[abSumm].text = signed(field[abValue].value) & " to hit and damage when dual-wielding"

      ~ Stop if we're not dual-wielding or using a double weapon
      doneif (hero.tagcount[Hero.EquipWep] + hero.tagcount[Hero.EquipDbl] <> 2)


      ~ Give to-hit and damage bonus
      foreach pick in hero from BaseWep where "Hero.MainHand | Hero.OffHand"
        eachpick.field[BonComp].value += field[abValue].value
      nexteach]]></eval>
    </thing>
  <thing id="cPWP3Sharp" name="Sharp Fang" description="The dragon fury gains the Power Attack feat (even if he does not meet the prerequisites for this feat), and when fighting with two weapons in his hands (or when wielding a double weapon), he treats these weapons as if he were wielding both weapons as main hand weapons for the purposes of calculating the damage bonuses.\n\n[b]NOTE:[/b] Due to a limitation in Hero Lab, this does not work with double weapons." compset="ClSpecial" summary="Gain Power Attack feat, and it counts both weapons as main-hand">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <bootstrap thing="fPowerAtt">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="PostAttr" priority="50000"><![CDATA[      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      field[abValue].value += field[xCount].value

      ~ Stop if we're not dual-wielding or using a double weapon
      doneif (hero.tagcount[Hero.EquipWep] + hero.tagcount[Hero.EquipDbl] <> 2)

      ~ Adding the Double Slice tag removes the offhand damage penalty
      ~ Wait, reading the text again I don't think this should be done, it's only for Power Attack, leaving this here for now in case I turn out to be wrong.
      ~perform hero.assign[Hero.DblSlice]

      ~ If we're Power Attacking, we need to adjust the damage bonus for the offhand weapon
      if (hero.tagis[Activated.fPowerAtt] <> 0) then
        foreach pick in hero from BaseWep where "Hero.OffHand & !Hero.MainHand"
            eachpick.field[wDamMelee].value += hero.child[Damage].field[tDamPower].value/2
        nexteach
      endif]]></eval>
    </thing>
  <thing id="cPWP3DoTC" name="Dance of Thrashing Claws" description="As the buffeting wings and heavy scales of the dragon protect its vital areas in battle, so do the paired weapons of the dragon fury. While one weapon defends the dragon fury, the other one lies waiting to continue the defense and see the martial disciple to victory. While in Thrashing Dragon stance and using a counter of the Broken Blade, Primal Fury, or Thrashing Dragon discipline, the character may use that counter one additional time (if necessary) before his next turn." compset="ClSpecial" summary="Use counter one extra time while in Thrashing Dragon stance">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPWP3DFDef" name="Dragon Fury Defense" description="Mastering the art of fighting with two weapons in his hands or when wielding a double weapon, the dragon fury learns how to better defend himself with his dual weapons. He gains a +1 shield bonus to his Armor Class at 3rd level. This increases to +2 at 6th level, and to +3 at 9th level. To gain this bonus to his Armor Class, the dragon fury must be fighting with two weapons or a double weapon and must be in a Broken Blade, Primal Fury, or Thrashing Dragon stance." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)

      ~ Stop if we're not dual-wielding or using a double weapon
      doneif (hero.tagcount[Hero.EquipWep] + hero.tagcount[Hero.EquipDbl] <> 2)

      ~ Stop if we're not in a stance from one the correct disciplines
      var IsInStance as number
      var targetDisc as string
      var staTotal as number
      staTotal = 0
      targetDisc = "ThrashDrag"
      call PWinDSta
      staTotal += IsInStance
      targetDisc = "BrokenBlad"
      call PWinDSta
      staTotal += IsInStance
      targetDisc = "PrimalFury"
      call PWinDSta
      staTotal += IsInStance
      doneif (staTotal < 1)

      ~ Apply shield bonus to AC
      #applybonus[tACShield, hero.child[ArmorClass], field[abValue].value]]]></eval>
    </thing>
  <thing id="cPWP3VicFn" name="Vicious Fang" description="At 5th level, the dragon fury uses Sharp Fang as if both of his wielded weapons were wielded as two-handed weapons (gaining a damage bonus equal to +3 per point of attack bonus subtracted).\n\n[b]NOTE:[/b] Due to a limitation in Hero Lab, this does not work with double weapons." compset="ClSpecial" summary="Power Attack counts both weapons as two-handed">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="50000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      field[abValue].value += field[xCount].value

      ~ Stop if we're not dual-wielding or using a double weapon
      doneif (hero.tagcount[Hero.EquipWep] + hero.tagcount[Hero.EquipDbl] <> 2)

      ~ If we're Power Attacking, we need to adjust the damage bonus for the offhand weapon
      if (hero.tagis[Activated.fPowerAtt] <> 0) then
        foreach pick in hero from BaseWep where "Hero.OffHand |Hero.MainHand"
            eachpick.field[wDamMelee].value += hero.child[Damage].field[tDamPower].value/2
        nexteach
      endif]]></eval>
    </thing>
  <thing id="cPWP3DFRec" name="Deadly Fang Recovery" description="At 8th level, the dragon fury’s ability to rend his foes asunder and continue the fight is nearly unmatched, spurring him to greater martial displays of prowess. Whenever the dragon fury reduces a foe to 0 hit points or fewer in a turn while executing a martial strike of his in-class disciplines or while full attacking an opponent while two-weapon fighting, the character may recover one expended maneuver." compset="ClSpecial" summary="Recover a maneuver when you fell a foe with discipline strikes or TWF">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPWP3DWGD" name="Dragon War God&apos;s Dance" description="At 10th level, the dragon fury gains a potent stance as the master level of his craft. The dragon fury may abandon a stance he is currently in to assume this stance as a swift action, losing the benefits of the previous stance to gain the benefits of this one. This stance is considered to be a stance of the Broken Blade, Primal Fury, and Thrashing Dragon disciplines. While in the Dragon War God’s Dance, as a full round action the character may move any distance as a free action, so as long as his total movement for the round does not exceed twice his movement speed. He may continue subsequent attacks (up to his maximum number of attacks on a full attack action) after this movement is complete, so long as he has moved at least 10-ft prior to the last attack. Each attack inflicts an additional 4d6 points of damage. Unlike most stances, this stance is particularly strenuous, and may only be maintained for a number of rounds equal to 5 + Constitution modifier, after which he reverts to his previous stance and is fatigued for a number of rounds equal to the number of rounds he was in this stance. Once he has recovered from the Dragon War God’s Dance, he may resume it again if he should so choose." compset="ClSpecial" summary="Martial stance; move as a free action while full-attacking, deal +4d6 damage per hit">
    <fieldval field="actName2" value="Fatigued"/>
    <tag group="User" tag="Activation"/>
    <tag group="mType" tag="Stance"/>
    <tag group="mInitAct" tag="Swift1"/>
    <tag group="mRange" tag="Personal"/>
    <tag group="mTarget" tag="You"/>
    <tag group="mDuration" tag="Stance"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <tag group="Discipline" tag="BrokenBlad"/>
    <tag group="Discipline" tag="PrimalFury"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="PathOfWar" tag="StanceClSp"/>
    <tag group="ChargeCalc" tag="AttrUses5"/>
    <tag group="ChargeAttr" tag="aCON"/>
    <tag group="User" tag="Tracker"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ Apply the PathOfWar.StanceOn tag
      perform hero.assign[PathOfWar.StanceOn]

      ~ Add extra damage to attacks
      foreach pick in hero from BaseWep
        #extradamage[eachpick, "+4d6", field[thingname].text]
      nexteach]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      if (field[abilAct2].value <> 0) then
        ~activate the Fatigued condition
        perform hero.assign[Condition.pcnFatigue]
        ~we can't enter a rage while fatigued
        perform assign[Helper.ChgDisab1]
      endif]]></eval>
    <evalrule phase="PostAttr" priority="10000" message="Too many stances activated"><![CDATA[      ~ If we're not enabled, do nothing
      validif (field[abilActive].value = 0)

      ~ Make sure we don't exceed the allowed number of stances
      validif (hero.tagcount[PathOfWar.StanceOn] <= hero.tagcount[PathOfWar.StanceUp])]]></evalrule>
    </thing>
  <thing id="mHelpPW1" name="Warlord Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="6"/>
    <arrayval field="cManKnown" index="1" value="7"/>
    <arrayval field="cManKnown" index="2" value="8"/>
    <arrayval field="cManKnown" index="3" value="8"/>
    <arrayval field="cManKnown" index="4" value="9"/>
    <arrayval field="cManKnown" index="5" value="9"/>
    <arrayval field="cManKnown" index="6" value="10"/>
    <arrayval field="cManKnown" index="7" value="10"/>
    <arrayval field="cManKnown" index="8" value="11"/>
    <arrayval field="cManKnown" index="9" value="11"/>
    <arrayval field="cManKnown" index="10" value="12"/>
    <arrayval field="cManKnown" index="11" value="12"/>
    <arrayval field="cManKnown" index="12" value="13"/>
    <arrayval field="cManKnown" index="13" value="13"/>
    <arrayval field="cManKnown" index="14" value="14"/>
    <arrayval field="cManKnown" index="15" value="14"/>
    <arrayval field="cManKnown" index="16" value="15"/>
    <arrayval field="cManKnown" index="17" value="16"/>
    <arrayval field="cManKnown" index="18" value="17"/>
    <arrayval field="cManKnown" index="19" value="18"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="2"/>
    <arrayval field="cStances" index="2" value="2"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="3"/>
    <arrayval field="cStances" index="5" value="3"/>
    <arrayval field="cStances" index="6" value="3"/>
    <arrayval field="cStances" index="7" value="4"/>
    <arrayval field="cStances" index="8" value="4"/>
    <arrayval field="cStances" index="9" value="4"/>
    <arrayval field="cStances" index="10" value="5"/>
    <arrayval field="cStances" index="11" value="5"/>
    <arrayval field="cStances" index="12" value="5"/>
    <arrayval field="cStances" index="13" value="5"/>
    <arrayval field="cStances" index="14" value="6"/>
    <arrayval field="cStances" index="15" value="6"/>
    <arrayval field="cStances" index="16" value="6"/>
    <arrayval field="cStances" index="17" value="6"/>
    <arrayval field="cStances" index="18" value="7"/>
    <arrayval field="cStances" index="19" value="7"/>
    <arrayval field="cManReady" index="0" value="4"/>
    <arrayval field="cManReady" index="1" value="5"/>
    <arrayval field="cManReady" index="2" value="5"/>
    <arrayval field="cManReady" index="3" value="5"/>
    <arrayval field="cManReady" index="4" value="6"/>
    <arrayval field="cManReady" index="5" value="6"/>
    <arrayval field="cManReady" index="6" value="6"/>
    <arrayval field="cManReady" index="7" value="7"/>
    <arrayval field="cManReady" index="8" value="7"/>
    <arrayval field="cManReady" index="9" value="7"/>
    <arrayval field="cManReady" index="10" value="8"/>
    <arrayval field="cManReady" index="11" value="8"/>
    <arrayval field="cManReady" index="12" value="8"/>
    <arrayval field="cManReady" index="13" value="9"/>
    <arrayval field="cManReady" index="14" value="9"/>
    <arrayval field="cManReady" index="15" value="9"/>
    <arrayval field="cManReady" index="16" value="10"/>
    <arrayval field="cManReady" index="17" value="10"/>
    <arrayval field="cManReady" index="18" value="10"/>
    <arrayval field="cManReady" index="19" value="11"/>
    <tag group="UseAttr" tag="aCHA"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <tag group="Discipline" tag="PrimalFury"/>
    <tag group="Discipline" tag="ScarletThr"/>
    <tag group="Discipline" tag="SolarWind"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <link linkage="powClass" thing="cHelpPW1"/>
    <link linkage="powCfg" thing="cCfgPW1"/>
    </thing>
  <thing id="cPWMageHtn" name="Mage Hunter" description="The path of the mage hunter is a dangerous one, combining skill at arms and stealth with a brand of sorcery that serves a singular purpose: slaying mages.\n\nMage hunters come from a long history of those who both protect and slay wizards, serving as assassins, bodyguards, and champions in many events of ancient wizard kingdoms in days gone by. In current times, it is a rare practice that is both dangerous and in high demand by those in the know, with the deadly mage hunter selling his skills for the wealthiest purse. Some are not without honor, but if one thing unites all present day mage hunters it is their devotion to their profession and the power and respect it affords them. \n\nMage hunters hail from a number of different classes, but all share the ability to initiate martial maneuvers and they must have base knowledge in both combat and in stealth skills. Lastly, all mage hunters must learn from either a mentor or an ancient grimoire known as the {i}Grimoire Serpentis Ferra{/i} to learn their highly prized skills. All mage hunters learn sorcerous arts that aid them in their missions through ancient meditative practices, martial tradition, and mystical trials passed down by masters to students or from copies of the {i}Grimoire Serpentis Ferra{/i} itself." compset="ClassLevel" maxlimit="10">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpPWPC4"></bootstrap>
    <link linkage="helper" thing="cHelpPWPC4"/>
    <exprreq message="Acrobatics 2 ranks required"><![CDATA[#skillranks[skAcrobat] >= 2]]></exprreq>
    <exprreq message="Heal 2 ranks required"><![CDATA[#skillranks[skHeal] >= 2]]></exprreq>
    <exprreq message="Stealth 2 ranks required"><![CDATA[#skillranks[skStealth] >= 2]]></exprreq>
    <exprreq message="Step Up feat required"><![CDATA[#hasfeat[fStepUp] <> 0]]></exprreq>
    <exprreq message="Improved Initiative feat required."><![CDATA[#hasfeat[fImpInit] <> 0]]></exprreq>
    <exprreq message="Spellcraft 5 ranks required"><![CDATA[#skillranks[skSpellcr] >= 5]]></exprreq>
    <exprreq message="Base Attack Bonus +3 required"><![CDATA[#BAB[] >= 3]]></exprreq>
    <exprreq message="Draconic language required"><![CDATA[hero.tagis[SpeakLang.lDraconic] <> 0]]></exprreq>
    <exprreq message="Must know at least one martial stance"><![CDATA[tagcount[HasStance.?] > 0]]></exprreq>
    <prereq message="Must be able to use at least 2nd-level maneuvers">
      <validate><![CDATA[foreach pick in hero from PWManuever
  validif (eachpick.tagvalue[mLevel.?] >= 2)
nexteach]]></validate>
      </prereq>
    <prereq message="Must know at least one martial strike">
      <validate><![CDATA[foreach pick in hero from PWManuever where "mType.Strike"
  @valid = 1
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="cHelpPWPC4" name="Mage Hunter" compset="Class" uniqueness="unique">
    <fieldval field="cAbbr" value="MHt"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cSplMaxLvl" value="6"/>
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="srcPageNum" value="146"/>
    <arrayval field="cCastTot" index="1" column="2" value="1"/>
    <arrayval field="cCastTot" index="2" column="1" value="3"/>
    <arrayval field="cCastTot" index="2" column="2" value="2"/>
    <arrayval field="cCastTot" index="3" column="1" value="4"/>
    <arrayval field="cCastTot" index="3" column="2" value="2"/>
    <arrayval field="cCastTot" index="3" column="3" value="1"/>
    <arrayval field="cCastTot" index="4" column="1" value="4"/>
    <arrayval field="cCastTot" index="4" column="2" value="3"/>
    <arrayval field="cCastTot" index="4" column="3" value="2"/>
    <arrayval field="cCastTot" index="5" column="1" value="5"/>
    <arrayval field="cCastTot" index="5" column="2" value="3"/>
    <arrayval field="cCastTot" index="5" column="3" value="2"/>
    <arrayval field="cCastTot" index="5" column="4" value="1"/>
    <arrayval field="cCastTot" index="6" column="1" value="5"/>
    <arrayval field="cCastTot" index="6" column="2" value="4"/>
    <arrayval field="cCastTot" index="6" column="3" value="3"/>
    <arrayval field="cCastTot" index="6" column="4" value="2"/>
    <arrayval field="cCastTot" index="7" column="1" value="5"/>
    <arrayval field="cCastTot" index="7" column="2" value="4"/>
    <arrayval field="cCastTot" index="7" column="3" value="3"/>
    <arrayval field="cCastTot" index="7" column="4" value="2"/>
    <arrayval field="cCastTot" index="7" column="5" value="1"/>
    <arrayval field="cCastTot" index="8" column="1" value="5"/>
    <arrayval field="cCastTot" index="8" column="2" value="5"/>
    <arrayval field="cCastTot" index="8" column="3" value="4"/>
    <arrayval field="cCastTot" index="8" column="4" value="3"/>
    <arrayval field="cCastTot" index="8" column="5" value="2"/>
    <arrayval field="cCastTot" index="9" column="1" value="5"/>
    <arrayval field="cCastTot" index="9" column="2" value="5"/>
    <arrayval field="cCastTot" index="9" column="3" value="4"/>
    <arrayval field="cCastTot" index="9" column="4" value="3"/>
    <arrayval field="cCastTot" index="9" column="5" value="3"/>
    <arrayval field="cCastTot" index="9" column="6" value="1"/>
    <arrayval field="cCastTot" index="0" column="1" value="2"/>
    <arrayval field="cKnowTot" index="0" value="3"/>
    <arrayval field="cKnowTot" index="0" column="1" value="2"/>
    <arrayval field="cKnowTot" index="1" value="3"/>
    <arrayval field="cKnowTot" index="1" column="1" value="3"/>
    <arrayval field="cKnowTot" index="1" column="2" value="1"/>
    <arrayval field="cKnowTot" index="2" value="3"/>
    <arrayval field="cKnowTot" index="2" column="1" value="3"/>
    <arrayval field="cKnowTot" index="2" column="2" value="2"/>
    <arrayval field="cKnowTot" index="3" value="4"/>
    <arrayval field="cKnowTot" index="3" column="1" value="3"/>
    <arrayval field="cKnowTot" index="3" column="2" value="2"/>
    <arrayval field="cKnowTot" index="3" column="3" value="1"/>
    <arrayval field="cKnowTot" index="4" value="4"/>
    <arrayval field="cKnowTot" index="4" column="1" value="4"/>
    <arrayval field="cKnowTot" index="4" column="2" value="3"/>
    <arrayval field="cKnowTot" index="4" column="3" value="2"/>
    <arrayval field="cKnowTot" index="5" value="4"/>
    <arrayval field="cKnowTot" index="5" column="1" value="4"/>
    <arrayval field="cKnowTot" index="5" column="2" value="3"/>
    <arrayval field="cKnowTot" index="5" column="3" value="2"/>
    <arrayval field="cKnowTot" index="5" column="4" value="1"/>
    <arrayval field="cKnowTot" index="6" value="4"/>
    <arrayval field="cKnowTot" index="6" column="1" value="4"/>
    <arrayval field="cKnowTot" index="6" column="2" value="3"/>
    <arrayval field="cKnowTot" index="6" column="3" value="3"/>
    <arrayval field="cKnowTot" index="6" column="4" value="2"/>
    <arrayval field="cKnowTot" index="7" value="5"/>
    <arrayval field="cKnowTot" index="7" column="1" value="5"/>
    <arrayval field="cKnowTot" index="7" column="2" value="4"/>
    <arrayval field="cKnowTot" index="7" column="3" value="3"/>
    <arrayval field="cKnowTot" index="7" column="4" value="2"/>
    <arrayval field="cKnowTot" index="7" column="5" value="1"/>
    <arrayval field="cKnowTot" index="8" value="5"/>
    <arrayval field="cKnowTot" index="8" column="1" value="5"/>
    <arrayval field="cKnowTot" index="8" column="2" value="4"/>
    <arrayval field="cKnowTot" index="8" column="3" value="3"/>
    <arrayval field="cKnowTot" index="8" column="4" value="3"/>
    <arrayval field="cKnowTot" index="8" column="5" value="2"/>
    <arrayval field="cKnowTot" index="9" value="5"/>
    <arrayval field="cKnowTot" index="9" column="1" value="5"/>
    <arrayval field="cKnowTot" index="9" column="2" value="4"/>
    <arrayval field="cKnowTot" index="9" column="3" value="4"/>
    <arrayval field="cKnowTot" index="9" column="4" value="3"/>
    <arrayval field="cKnowTot" index="9" column="5" value="2"/>
    <arrayval field="cKnowTot" index="9" column="6" value="1"/>
    <arrayval field="cCastTot" index="1" column="1" value="3"/>
    <usesource source="srcPathOfW"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="ClassSkill" tag="skUseMagic"/>
    <tag group="Classes" tag="PWPC4" name="Mage Hunter"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="sClass" tag="cHelpMag"/>
    <tag group="CasterType" tag="SpontKnow"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="CasterSrc" tag="Arcane"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <tag group="cWill" tag="Poor"/>
    <tag group="Classes" tag="PWPC4"/>
    <tag group="CastInfini" tag="0"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skHeal"/>
    <tag group="cRef" tag="Good"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skKnowArca"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="skDisguise"/>
    <tag group="ClassSkill" tag="skEscape"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <bootstrap thing="cPWP4MArtS">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWP4AncPt">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPWP4StDis">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWP4ArcEn">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWP4StaMK">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPWP4MHCon">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWP4TthPt">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPWP4StrMR">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPWP4MHrSt">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <bootstrap thing="cPWP1Man">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cCfgPWPC4"></bootstrap>
    <bootstrap thing="cPW4ArcTen">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP4MArtD">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <eval phase="PostLevel" priority="1000" index="2"><![CDATA[      ~ Stop if we haven't chosen our maneuver source
      doneif (hero.child[cPWP1Man].field[usrChosen1].ischosen <> 1)

      ~ Get the initiator mod from the class or feat that granted our previous maneuvers
      perform hero.child[cPWP1Man].field[usrChosen1].chosen.setfocus
      doneif (state.isfocus = 0)

      ~ If we came from a previous initiator class, use its attribute
      if (focus.tagcount[ClsCountAs.?] <> 0) then
        doneif (focus.tagcount[UseAttr.?] < 1)
        perform focus.pulltags[UseAttr.?,SplAttr]
        perform focus.pulltags[UseAttr.?,MaxSplAttr]
      ~ If we came from the Martial Training feat chain, use INT
      elseif (focus.tagcount[HasFeat.?] <> 0) then
        perform assign[SplAttr.aINT]
        perform assign[MaxSplAttr.aINT]
      else
        done
      endif]]></eval>
    </thing>
  <thing id="cCfgPWPC4" name="Mage Hunter Maneuvers" compset="Configure" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClsCountAs" tag="cHelpPWPC4"/>
    <tag group="Discipline" tag="ScarletThr"/>
    <tag group="Discipline" tag="SolarWind"/>
    <tag group="Discipline" tag="SteelSerp"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <bootstrap thing="mHelpPWPC4"></bootstrap>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="cPW4ArcTen" name="Arcane Tenacity" description="A mage hunter’s spells are particularly difficult to dispel; add 6 to the DC required to dispel the character’s mage hunter spells." compset="ClSpecial" summary="Your spells get +6 to dispel DC">
    <fieldval field="abValue" value="6"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~Nothing happens here, this is just a placeholder in case we ever get a "dispel DC" field that we can modify]]></eval>
    </thing>
  <thing id="cPWP4MArtD" name="Martial Arcanist (Disruptive)" description="At 1st level, a mage hunter’s practice merging spellcasting and swordplay allows him to cast spells without arcane spell failure wearing light armor or bucklers. At 8th level, this ability improves further to allow unhindered spellcasting in medium armor. This class feature only functions when the character is casting a mage hunter spell. Lastly, a mage hunter gains the Disruptive feat at 1st level. At 8th level, the mage hunter also gains the Spellbreaker feat. He does not need to meet the prerequisites for these feats." compset="ClSpecial" summary="Gain Disruptive as bonus feat; cast in light armor and bucklers with no ASF">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <bootstrap thing="fDisruptiv">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="PostLevel"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Mark us as being able to cast in light armor with no ASF
      perform root.assign[CastArmor.Light]

      ~ There's no tag for buckler-only ASF-free casting, only for shields as a whole.  So we'll check to make sure that no non-buckler shield is equipped, then assign the CastArmor.Shield tag.
      var shldOK as number
      shldOK = 1
      foreach pick in hero from BaseArmor where "Helper.CurrShield & !IsArmor.shBuckler"
        shldOK = 0
      nexteach
      if (shldOK <> 0) then
        perform root.assign[CastArmor.Shield]
      endif]]></eval>
    </thing>
  <thing id="cPWP4MArtS" name="Martial Arcanist (Spellbreaker)" description="At 1st level, a mage hunter’s practice merging spellcasting and swordplay allows him to cast spells without arcane spell failure wearing light armor or bucklers. At 8th level, this ability improves further to allow unhindered spellcasting in medium armor. This class feature only functions when the character is casting a mage hunter spell. Lastly, a mage hunter gains the Disruptive feat at 1st level. At 8th level, the mage hunter also gains the Spellbreaker feat. He does not need to meet the prerequisites for these feats." compset="ClSpecial" summary="Gain Spellbreaker as bonus feat; cast in medium armor with no ASF">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <bootstrap thing="fSpellbr">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="PostLevel"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Mark us as being able to cast in medium armor with no ASF
      perform root.assign[CastArmor.Medium]]]></eval>
    </thing>
  <thing id="cPWP4AncPt" name="Anchoring Point" description="The mage hunter’s foes are often known to use magical means to escape from him, and the {i}Grimoire Serpentis Ferra{/i} has taught him a few tricks to prevent his foes from escaping so easily. As part of a successful martial strike, the mage hunter expends a 1st or higher-level spell slot as a free action and may attempt to target the foe with a {i}dimensional anchor{/i} effect as a supernatural ability. Anchoring point lasts for a number of minutes equal to the level of the expended spell slot." compset="ClSpecial" summary="Expend a spell as a free action with a martial strike to cast {i}dimensional anchor{/i}">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Free"/>
    <tag group="SpInfo" tag="spDimeAnc3"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPWP4StDis" name="Strike of Dispelling" description="The tactics and skills learned from the {i}Grimoire Serpentis Ferra{/i} instruct disciples how to defeat the defenses and items of their primary foes: spellcasters. With this in mind, the mage hunter learns how to channel his own innate magic and blend it with the martial disciplines of the Path of War. The mage hunter initiating this strike may expend a readied strike to use this strike in its place, and he makes an attack against a target. If the attack hits, the mage hunter may immediately make a dispel check with a caster level equal to his initiator level as if he had cast a targeted {i}dispel magic{/i} in addition to doing normal damage. Each effect that is dispelled using this strike inflicts an additional 1d6 points of damage to the target. This strike is treated as a supernatural ability." compset="ClSpecial" summary="Expend a strike to attack and cast {i}dispel magic{/i} on hit, successful dispel deals 1d6 damage per effect dispelled">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWP4ArcEn" name="Arcane Endurance" description="At 4th level, a mage hunter knows how to extend the duration of spells that he casts on himself or his allies. The duration of any of his mage hunter spells is doubled, as if affected by the Extend Spell feat (but without any adjustments to the spell’s effective level or casting time). Spells that do not have a target entry are unaffected by this power, even if the mage hunter is the only one affected." compset="ClSpecial" summary="All your targeted spells gain benefit of Extend Spell feat for free">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)]]></eval>
    </thing>
  <thing id="cPWP4StaMK" name="Stance of the Mage Killer" description="Upon reaching 5th level, the mage hunter gains a potent stance based upon the instructions within the {i}Grimoire Serpentis Ferra{/i}. This is a 5th level stance of no particular discipline. To enter this stance, the mage hunter abandons a martial stance he is currently using as a swift action. The benefits of this ability end if the mage hunter assumes a martial stance until or unless the mage hunter abandons his stance as a swift action. Once within this stance, the mage hunter may cast one mage hunter spell as a swift action per round as part of a martial strike. Also while in this stance, if the mage hunter successfully makes a saving throw against an effect that has a reduced or partial effect on a successful saving throw (such as half damage on a {i}fireball{/i}), the mage hunter instead is unaffected by the effect." compset="ClSpecial" summary="Martial stance; swift-action cast with a strike, successful saves negate partial effects">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="mType" tag="Stance"/>
    <tag group="mLevel" tag="5"/>
    <tag group="mInitAct" tag="Swift1"/>
    <tag group="mRange" tag="Personal"/>
    <tag group="mTarget" tag="You"/>
    <tag group="mDuration" tag="Stance"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ Apply the PathOfWar.StanceOn tag
      perform hero.assign[PathOfWar.StanceOn]]]></eval>
    <evalrule phase="PostAttr" priority="10000" message="Too many stances activated"><![CDATA[      ~ If we're not enabled, do nothing
      validif (field[abilActive].value = 0)

      ~ Make sure we don't exceed the allowed number of stances
      validif (hero.tagcount[PathOfWar.StanceOn] <= hero.tagcount[PathOfWar.StanceUp])]]></evalrule>
    </thing>
  <thing id="cPWP4MHCon" name="Mage Hunter Concentration" description="At 6th level, the mage hunter has learned to focus his mind on both steel and spell, granting him a +4 competence bonus to attempts to cast mage hunter spells defensively, and a +2 insight bonus to saves against spells." compset="ClSpecial" summary="+4 to cast defensively, +2 save vs spells">
    <fieldval field="abValue" value="2"/>
    <fieldval field="abValue2" value="4"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="1000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Insight bonus vs spells
      #situational[hero.child[svAll], signed(field[abValue].value) & " insight vs. spells", field[thingname].text]]]></eval>
    </thing>
  <thing id="cPWP4TthPt" name="Tethering Point" description="At 7th level, the mage hunter’s repertoire in dealing with his chosen prey has expanded to allow him to bind a little piece of his energies to his foe, allowing him to follow it anywhere it goes. As part of a successful martial strike, the mage hunter expends a 1st or higher-level spell slot as a free action and may attempt to target the foe with a magical leash-like effect as a supernatural ability. Tethering point lasts for a number of minutes equal to the level of the expended spell slot. If the target of this ability were to utilize an effect, power, or spell with the (Teleportation) type, the mage hunter may either attempt to make a Will save against the effect (as if he were making a saving throw to resist an effect cast upon him) to cause the target’s attempt to flee to fail, or he may voluntarily go along for the ride and teleport with his quarry to the same location. The mage hunter does not count against any limit the teleportation effect might have, such as number of creatures or total weight teleported." compset="ClSpecial" summary="Block a struck foe&apos;s teleportation, or teleport with them">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Free"/>
    </thing>
  <thing id="cPWP4StrMR" name="Strike of Magic Rending" description="The pinnacle combat maneuver taught by the {i}Grimoire Serpentis Ferra{/i} to its students is the strike of magic rending. By readying this maneuver, the mage hunter proves his dedication to this ancient art. The strike of magic rending replaces the strike of dispelling. The mage hunter initiating this strike may expend a readied strike to use this strike in its place, and he makes an attack against a target. If the attack hits, the mage hunter may immediately make a dispel check with a caster level equal to his initiator level as if he cast a targeted {i}greater dispel magic{/i} in addition to doing normal damage. Additionally, if the mage hunter chooses to, anyone within 10 ft. of the mage hunter (excluding the mage hunter) is also affected as if they were hit by an area {i}dispel magic{i}. Each effect that is dispelled using this strike inflicts an additional 2d6 points of damage to the target or targets of this ability. This strike is treated as a supernatural ability." compset="ClSpecial" summary="Strike of Dispelling deals 2d6 damage per effect dispelled, acts as {i}greater dispel magic{/i} and can affect an area">
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostLevel" priority="1000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~This replaces Strike of Dispelling, so hide that ability
      perform hero.childfound[cPWP4StDis].delete[Helper.ShowSpec]]]></eval>
    </thing>
  <thing id="cPWP4MHrSt" name="Mage Harrier Stance" description="The final technique that the {i}Grimoire Serpentis Ferra{/i} can teach its students is the Mage Harrier Stance, allowing him to cripple the ability of the mage within close range to him. This is a 6th level stance of no particular discipline. To enter this stance, as a swift action the mage hunter abandons a martial stance he is currently using. The benefits of this ability end if the mage hunter assumes a martial stance until or unless the mage hunter abandons his stance as a swift action. Once within this stance, the mage hunter prevents magic-users from being able to cast defensively under any condition if they are within his melee reach; his knowledge of combating them allows him to disrupt their delicate spellcasting needs. Enemies affected by this stance can make a Knowledge (martial) or Spellcraft check (DC 21) to identify the stance and know that they would be vulnerable to it (allowing them to attempt to cast defensively once more). Additionally, while in this stance he gains spell resistance equal to 15 + his initiator level, and spells that fail against his spell resistance or that he successfully saves against grant a number of temporary hit points equal to twice the spell level cast against him to the mage hunter, as his strength is restored as the mage’s strength fades. Temporary hit points last until used or until the end of the encounter." compset="ClSpecial" summary="Martial stance; prevent defensive casting, gain Spell Resistance, gain temp HP when your SR defeats spells">
    <fieldval field="abValue" value="15"/>
    <tag group="User" tag="Activation"/>
    <tag group="mType" tag="Stance"/>
    <tag group="mLevel" tag="6"/>
    <tag group="mInitAct" tag="Swift1"/>
    <tag group="mRange" tag="Personal"/>
    <tag group="mTarget" tag="You"/>
    <tag group="mDuration" tag="Stance"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ Find the configurable that has our IL
      perform hero.findchild[Configure,root.tagids[ClsCountAs.?]].setfocus
      doneif (state.isfocus = 0)

      ~ Apply the PathOfWar.StanceOn tag
      perform hero.assign[PathOfWar.StanceOn]

      ~ Add IL to our SR value
      field[abValue].value += focus.field[cfgLevel].value

      ~ Apply spell resistance
      #applysr[field[abValue].value]]]></eval>
    <evalrule phase="PostAttr" priority="10000" message="Too many stances activated"><![CDATA[      ~ If we're not enabled, do nothing
      validif (field[abilActive].value = 0)

      ~ Make sure we don't exceed the allowed number of stances
      validif (hero.tagcount[PathOfWar.StanceOn] <= hero.tagcount[PathOfWar.StanceUp])]]></evalrule>
    </thing>
  <thing id="cPWUmbrBld" name="Umbral Blade" description="The discipline of Veiled Moon is one steeped in mystery and legend, and much of its origins are hearsay at best. Some never experience the darker parts of the discipline, and those who have touched upon them often wish they had not. For every moon has a dark side, the legend says, and in that darkness there is something that is waiting for those who are daring enough to tread upon that perilous path. By entering the shadow of the Veiled Moon, the so-called Umbral Blades find that this darkness possesses power at a price, and by making a deal with it, that power can be bought. By the pact and the darkness made manifest in their weapons and in their very flesh, the umbral blade is a force that few dare to harness.\n\nMost umbral blades are stalkers or the occasional warder who has delved too deeply into forgotten secrets. Some ninjas and rogues with the Martial Training feat round out the nature of this path, but are considerably rarer." compset="ClassLevel" maxlimit="10">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpPWPC5"></bootstrap>
    <link linkage="helper" thing="cHelpPWPC5"/>
    <exprreq message="Base Attack Bonus +4 required"><![CDATA[#BAB[] >= 4]]></exprreq>
    <exprreq message="Stealth 6 ranks required"><![CDATA[#skillranks[skStealth] >= 6]]></exprreq>
    <exprreq message="Knowledge (Planes) 6 ranks required"><![CDATA[#skillranks[skKnowPlan] >= 6]]></exprreq>
    <prereq message="Must be able to use at least 3rd-level Veiled Moon maneuvers">
      <validate><![CDATA[foreach pick in hero from PWManuever where "Discipline.VeiledMoon"
  validif (eachpick.tagvalue[mLevel.?] >= 3)
nexteach]]></validate>
      </prereq>
    <prereq message="Discipline Focus (Veiled Moon) required">
      <validate><![CDATA[foreach pick in hero from BaseFeat where "thingid.fPWDiscFoc"
  validif (eachpick.field[usrChosen1].chosen.tagis[Discipline.VeiledMoon] <> 0)
nexteach]]></validate>
      </prereq>
    </thing>
  <thing id="cHelpPWPC5" name="Umbral Blade" compset="Class" uniqueness="unique">
    <comment>Spells Known Per Level controls the Manuevers information.

Array 7 = Maneuvers Known
Array 8 = Maneuvers Readied
Array 9 = Stances</comment>
    <fieldval field="cAbbr" value="UBl"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="srcPageNum" value="149"/>
    <arrayval field="cKnowTot" index="2" column="7" value="1"/>
    <arrayval field="cKnowTot" index="2" column="8" value="1"/>
    <arrayval field="cKnowTot" index="3" column="7" value="2"/>
    <arrayval field="cKnowTot" index="3" column="8" value="1"/>
    <arrayval field="cKnowTot" index="4" column="7" value="2"/>
    <arrayval field="cKnowTot" index="4" column="8" value="1"/>
    <arrayval field="cKnowTot" index="4" column="9" value="1"/>
    <arrayval field="cKnowTot" index="5" column="7" value="3"/>
    <arrayval field="cKnowTot" index="5" column="8" value="2"/>
    <arrayval field="cKnowTot" index="5" column="9" value="1"/>
    <arrayval field="cKnowTot" index="6" column="7" value="3"/>
    <arrayval field="cKnowTot" index="6" column="8" value="2"/>
    <arrayval field="cKnowTot" index="6" column="9" value="1"/>
    <arrayval field="cKnowTot" index="7" column="7" value="4"/>
    <arrayval field="cKnowTot" index="7" column="8" value="2"/>
    <arrayval field="cKnowTot" index="7" column="9" value="1"/>
    <arrayval field="cKnowTot" index="8" column="7" value="4"/>
    <arrayval field="cKnowTot" index="8" column="8" value="3"/>
    <arrayval field="cKnowTot" index="8" column="9" value="1"/>
    <arrayval field="cKnowTot" index="9" column="7" value="5"/>
    <arrayval field="cKnowTot" index="9" column="8" value="3"/>
    <arrayval field="cKnowTot" index="9" column="9" value="1"/>
    <arrayval field="cKnowTot" index="1" column="7" value="1"/>
    <usesource source="srcPathOfW"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="cWill" tag="Poor"/>
    <tag group="Classes" tag="PWPC5" name="Umbral Blade"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="cRef" tag="Good"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skKnowLoc"/>
    <tag group="ClassSkill" tag="skKnowPlan"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="Classes" tag="PWPC4" name="Mage Hunter"/>
    <tag group="AlgnForbid" tag="Good"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <bootstrap thing="cCfgPWPC5"></bootstrap>
    <bootstrap thing="cPWP5ShdBl">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP5UmbSt">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP5BldNt">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPWP5BldNt">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWP5BldNt">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPWP5EmShd">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWP5ShdC1">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWP5ShdC2">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPWP5ShdC3">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPWP5ShdwB">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPWP5TitDk">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWP5OwtDk">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPWP1Man">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <eval phase="First" priority="300" index="2"><![CDATA[      ~ don't do this if the Perfect Self ability is replaced
      doneif (hero.tagis[AbReplace.cPWP5OwtDk] <> 0)

      ~ find our 10th level class level pick, and have it change the character type
      perform hero.findchild[ClassSort,"thingid.cPWUmbrBld & fieldval:cThisIndex = 10"].assign[TypeAndAug.tpOutsider]]]></eval>
    <eval phase="PostLevel" priority="10">~ Setup Initiator Level into field[cCasterLev]
      Call PWsetupIL</eval>
    </thing>
  <thing id="cCfgPWPC5" name="Umbral Blade Maneuvers" compset="Configure" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="Discipline" tag="BlackSerph"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <tag group="Discipline" tag="SteelSerp"/>
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <tag group="ClsCountAs" tag="cHelpPWPC5"/>
    <bootstrap thing="mHelpPWPC5"></bootstrap>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    </thing>
  <thing id="cPWP5ShdBl" name="Shadow Blade" description="The umbral blade’s mind is permanently connected to the Plane of Shadow by his bond with the essence of a creature of darkness and fear. His soul is profoundly affected by this, and his pact with this force is bound to his very flesh. Whenever he wields a weapon from the associated weapon groups of the Veiled Moon discipline, as a swift action the blade may be changed and altered by his promise to this darkness, resulting in it becoming a blade of ephemeral shadow and writhing smoke (when wielding multiple weapons or using a double weapon, both weapons or both weapon ends are enveloped with this darkness when it is called as the same swift action). This supernatural shadow blade inflicts an additional 1d6 points of cold damage when used. In other aspects it functions as a traditional weapon. As the shadow blade is comprised of his soul’s dark energies and the energies that he wields as a Veiled Moon disciple, he may add his initiation modifier to the weapon’s damage in place of his Strength modifier, and may always use Weapon Finesse with his shadow blade due to its lightened weight from its ephemeral nature. This effect ends when the umbral blade is no longer wielding an enveloped weapon or at will (a thrown shadow blade weapon will retain its properties until after it has been thrown, discharging when it comes to rest)." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Get our init modifier
      perform hero.findchild[Configure,root.tagids[ClsCountAs.?]].pulltags[UseAttr.?,DamageOpt]

      ~ Get all equipped Veiled Moon weapons on the hero
      foreach pick in hero from BaseWep where "(Hero.MainHand | Hero.OffHand) & (" & hero.childfound[zPWVldMoon].tagids[wFtrGroup.?, "|"] & ")"
        ~Add cold damage
        #extradamage[eachpick, "+1d6 Cold", field[thingname].text]

        ~Make weapon Finessable if it isn't already
        if (eachpick.tagcount[Helper.Finesse] = 0) then
          perform eachpick.assign[Helper.Finesse]
        endif

        ~Allow hero to use their init modifier for damage
        perform eachpick.pushtags[DamageOpt.?]

        ~Mark this weapon as a "shadow blade"
        perform eachpick.assign[PathOfWar.ShdwBlade]
      nexteach]]></eval>
    </thing>
  <thing id="cPWP5UmbSt" name="Umbral Sight" description="The umbral blade gains the ability to see in darkness as a true creature of the night. He gains darkvision out to 60 ft. If the character already possesses darkvision, its range increases by 30 ft." compset="ClSpecial" summary="Gain darkvision">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="raDarkVis">
      <assignval field="abValue" value="60"/>
      <assignval field="abValue2" value="30"/>
      </bootstrap>
    </thing>
  <thing id="cPWP5BldNt" name="Blade of Night" description="As the umbral blade’s shadow blade becomes a conduit for darkness and shadow, he is capable of opening a dread gateway within his soul to cause this darkness to surge through him and through the open conduit that is his weapon. The umbral blade may charge his shadow blade (be it a single weapon, double weapon, or paired weapons) with this power as a move action, and later when needed, he may release this power as a free action as part of an attack or martial strike. This hungry and chilling darkness inflicts cold damage, and Blade of Night’s bonus cold damage is added to each attack that the character makes during the round it is activated on." compset="ClSpecial" summary="Charge your Shadow Blades to deal extra cold damage">
    <fieldval field="actName" value="Shadow Blades charged"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Move"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value) & "d8"

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value) & "d8"
      field[abSumm].text = "+" & field[abValue].value  & "d8 cold damage with charged weapon"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~if we've been replaced, get out now
      doneif (tagis[Helper.SpcReplace] <> 0)
      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      foreach pick in hero from BaseWep where "PathOfWar.ShdwBlade"
        #extradamage[eachpick, signed(field[abValue].value) & "d8 cold", field[thingname].text]
      nexteach]]></eval>
    </thing>
  <thing id="cPWP5EmShd" name="Embrace the Shadows" description="At 3rd level, the umbral blade learns a signature stance of his new existence being half in shadow. This ability is a supernatural ability and a Veiled Moon stance of 3rd level. To enter this stance requires a swift action, and the character forgoes any stance that the character currently is using to use Embrace the Shadows. While in this stance, the character’s form and features change, his skin becoming mottled heavily with inky black shadow and his eyes, hair, nails, and teeth turn pitch black. Maneuvers of the Steel Serpent, Thrashing Dragon, and Veiled Moon disciplines have their saving throw DC’s increased by 2. He gains a +2 profane bonus per umbral blade level to his Intimidate checks due to his fearsome appearance and he automatically fails any Handle Animal check he makes due to his unnatural form. Additionally, this stance improves the umbral blade’s natural armor bonus to AC by +2, and he gains a +2 profane bonus to saving throws as his form becomes very resilient. Lastly, he gains a +2 profane bonus to Stealth checks per umbral blade level while in this stance. This stance is tiring for the mind to maintain, however, as the strain of maintaining one’s sanity while having a shadowy alien consciousness so close to one’s own mind challenges the umbral blade. He may only maintain this stance for a number of rounds equal to his initiation modifier +5 per encounter (minimum of 6); if this is exceeded, the character does not release from this stance but instead acts as if under a {i}confusion{/i} spell until the end of the encounter." compset="ClSpecial" summary="Martial stance; bonus to Stealth, Intimidate, AC, saves, and maneuver DC&apos;s">
    <fieldval field="abValue" value="2"/>
    <fieldval field="abValue2" value="2"/>
    <fieldval field="abValue3" value="2"/>
    <fieldval field="abValue4" value="2"/>
    <fieldval field="abDuration" value="5"/>
    <fieldval field="actName2" value="Confused"/>
    <tag group="mDuration" tag="Stance"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="mType" tag="Stance"/>
    <tag group="mLevel" tag="3"/>
    <tag group="mInitAct" tag="Swift1"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <tag group="mRange" tag="Personal"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="User" tag="Tracker"/>
    <tag group="mTarget" tag="You"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Get our initiation modifier (min 1) and add it to duration
      var initMod as number
      call PWgetIMod
      if (initMod < 1) then
        initMod = 1
      endif
      field[abDuration].value += initMod
      field[trkMax].value = field[abDuration].value

      ~ If we're not enabled, get out now
      doneif (hero.tagis[PathOfWar.EmbShadow] = 0)

      ~ Apply the PathOfWar.StanceOn tag
      perform hero.assign[PathOfWar.StanceOn]

      ~ Maneuver DC increase
      foreach pick in hero from PWManuever where "Discipline.ThrashDrag | Discipline.VeiledMoon | Discipline.SteelSerp"
        eachpick.field[mDC].value += field[abValue].value
      nexteach

      ~ Intimidate and Stealth bonuses (profane)
      #applybonus[BonProfane, hero.child[skIntim], field[abValue2].value * field[xTotalLev].value]
      #applybonus[BonProfane, hero.child[skStealth], field[abValue2].value * field[xTotalLev].value]

      ~ Note that we auto-fail Handle Animal checks
      #situational[hero.child[skHandleAn], "You fail ALL checks with this skill due to your unnatural form", field[thingname].text]

      ~ Natural AC bonus
      #applybonus[tACNatural, hero.child[ArmorClass], field[abValue3].value]

      ~ Save bonus (profane)
      #applybonus[BonProfane, hero.child[svAll], field[abValue4].value]

      ~ The second checkbox is for setting the Confused status when we overstay the duration
      if (field[abilAct2].value <> 0) then
          perform hero.assign[Condition.pcnConfuse]
      endif]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ Assign the tag that lets us know the ability is active.
      ~ We use this tag because this class's capstone turns this from a stance into a constant effect, so it works by assigning the tag whether or not we are activated.  Also, the Shadow Consumption abilities check for the tag to see if they should grant their benefits.
      perform hero.assign[PathOfWar.EmbShadow]]]></eval>
    <evalrule phase="PostAttr" priority="10000" message="Too many stances activated"><![CDATA[      ~ If we're not enabled, do nothing
      validif (field[abilActive].value = 0)

      ~ Make sure we don't exceed the allowed number of stances
      validif (hero.tagcount[PathOfWar.StanceOn] <= hero.tagcount[PathOfWar.StanceUp])]]></evalrule>
    </thing>
  <thing id="cPWP5ShdC1" name="Shadow Consumption I" description="As the umbral blade continues to further his delving into the darkness of the Shadow Plane through the open conduit in his mind, his form becomes infused with its essence. While in Embrace the Shadow stance, as the umbral blade’s connection to the Shadow Plane intensifies so does the merits he receives.\n\nAt 4th level, his vital processes become suspended partially, transmuting his blood into thick, shadowy fluid. He uses his initiation modifier in place of his Constitution modifier for hit points and Fortitude saves. Embrace the Shadows is now a 4th level stance." compset="ClSpecial" summary="Use your initiation modifier instead of CON for HP and Fort saves">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="PreAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Make Embrace the Shadows a 4th-level stance
      perform hero.childfound[cPWP5EmShd].delete[mLevel.?]
      perform hero.childfound[cPWP5EmShd].assign[mLevel.4]

      ~ If Embrace The Shadows not enabled, get out now
      doneif (hero.tagis[PathOfWar.EmbShadow] = 0)

      ~ Replace CON with our initiation attribute for bonus HP
      perform hero.findchild[Configure,root.tagids[ClsCountAs.?]].pulltags[UseAttr.?,AttrHP]
      foreach pick in hero from ClassList
        perform eachpick.delete[AttrHP.aCON]
        perform eachpick.pushtags[AttrHP.?]
      nexteach]]></eval>
    </thing>
  <thing id="cPWP5ShdC2" name="Shadow Consumption II" description="As the umbral blade continues to further his delving into the darkness of the Shadow Plane through the open conduit in his mind, his form becomes infused with its essence. While in Embrace the Shadow stance, as the umbral blade’s connection to the Shadow Plane intensifies so does the merits he receives.\n\nAt 7th level, his flesh becomes more insubstantial, allowing him to slip through reality ever so slightly to appear and disappear at his discretion; the umbral blade gains the use of the {i}blink{/i} spell at will as a spell-like ability. Embrace the Shadows is now a 5th level stance." compset="ClSpecial" summary="{i}Blink{/i} at will as a spell-like ability">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpInfo" tag="spBlink3"/>
    <eval phase="PreAttr" priority="11100"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Make Embrace the Shadows a 5th-level stance
      perform hero.childfound[cPWP5EmShd].delete[mLevel.?]
      perform hero.childfound[cPWP5EmShd].assign[mLevel.5]]]></eval>
    </thing>
  <thing id="cPWP5ShdC3" name="Shadow Consumption III" description="As the umbral blade continues to further his delving into the darkness of the Shadow Plane through the open conduit in his mind, his form becomes infused with its essence. While in Embrace the Shadow stance, as the umbral blade’s connection to the Shadow Plane intensifies so does the merits he receives.\n\nAt 9th level, the umbral blade gains the ability to gain the incorporeal subtype as an at will standard action as his flesh takes on the ephemeral nature of shadow itself. Embrace the Shadows is now a 6th-level stance." compset="ClSpecial" summary="Become incorporeal at will while in Embrace the Shadows">
    <fieldval field="actName" value="Incorporeal"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="Standard"/>
    <bootstrap thing="stIncorpor">
      <containerreq phase="First" priority="550"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <eval phase="PreAttr" priority="11200"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Make Embrace the Shadows a 6th-level stance
      perform hero.childfound[cPWP5EmShd].delete[mLevel.?]
      perform hero.childfound[cPWP5EmShd].assign[mLevel.6]

      if (hero.tagis[PathOfWar.EmbShadow] = 0 ) then
        perform assign[Helper.ChgDisab1]
      endif]]></eval>
    </thing>
  <thing id="cPWP5ShdwB" name="Shadowblind" description="The umbral blade pulls concealing shadow to bend perception around him, and may hide in plain sight in areas of dim illumination or darker. This allows the umbral blade to roll a Stealth check in dim illumination or darker, even while being observed." compset="ClSpecial" summary="You can always make Stealth checks in dim illumination or darker">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWP5TitDk" name="Terror in the Dark" description="The umbral blade’s power lies in his ability to strike with shadow and fear both, rending mind and body with his actions to feed the entity the terror it craves. The umbral blade may use the Stealth skill to hide as a swift action." compset="ClSpecial" summary="Use Stealth to hide as a swift action">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWP5OwtDk" name="One with the Dark" description="Upon reaching 10th level, the umbral blade’s bond to the Plane of Shadow is complete, as the shadow that he controls consumes him, reshaping him as a being of that world. The shadowy, alien force that has been intruding into his own mind has formed an understanding at last, and the danger to the umbral blade’s sanity is gone. The character’s type changes to Outsider (native), and he gains the benefits of being in his Embrace the Shadow stance at all times (he loses Embrace the Shadows as a stance and gains its abilities and his shadow consumption abilities as racial traits instead, without fear of sanity loss). Additionally, he gains cold resistance of 10 and DR 10/silver. He is considered a native of both his home plane and of the Plane of Shadow." compset="ClSpecial" summary="You become an Outsider, and Embrace the Shadow is permanent">
    <fieldval field="abValue" value="10"/>
    <fieldval field="abValue2" value="10"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ The type change to Outsider is handled in a script on the class, much like the Monk's Perfect Self

      ~ Cold Resistance
      #applydr[xDamRsCold,field[abValue].value]

      ~ Damage Reduction
      #applydr[xDamRdSil,field[abValue2].value]

      ~ Look for the Embrace of Shadows special, because we're going to do stuff to it
      perform hero.childfound[cPWP5EmShd].setfocus
      doneif (state.isfocus = 0)

      ~ Add the same tag that Embrace the Shadows normally adds when activated, making its effect constant
      perform hero.assign[PathOfWar.EmbShadow]

      ~ Embrace the Shadows stops being a stance, so we strip the relevant tags from it
      perform focus.delete[mDuration.?]
      perform focus.delete[mType.?]
      perform focus.delete[mLevel.?]
      perform focus.delete[mInitAct.?]
      perform focus.delete[Discipline.?]
      perform focus.delete[mRange.?]
      perform focus.delete[mTarget.?]]]></eval>
    </thing>
  <thing id="cHelpPWPC6" name="Awakened Blade" compset="Class" uniqueness="unique">
    <fieldval field="cAbbr" value="ABl"/>
    <fieldval field="cSkills" value="4"/>
    <fieldval field="cHDSides" value="10"/>
    <fieldval field="srcBookInf" value="Path of War"/>
    <fieldval field="srcPageNum" value="137"/>
    <arrayval field="cMagLevTot" index="2" value="2"/>
    <arrayval field="cMagLevTot" index="3" value="3"/>
    <arrayval field="cMagLevTot" index="4" value="4"/>
    <arrayval field="cMagLevTot" index="6" value="5"/>
    <arrayval field="cMagLevTot" index="7" value="6"/>
    <arrayval field="cMagLevTot" index="8" value="7"/>
    <arrayval field="cMagLevTot" index="9" value="8"/>
    <arrayval field="cBonFtTot" index="3" value="1"/>
    <arrayval field="cBonFtTot" index="7" value="2"/>
    <arrayval field="cMagLevTot" index="1" value="1"/>
    <usesource source="srcPathOfW"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="cRef" tag="Poor"/>
    <tag group="cWill" tag="Good"/>
    <tag group="Classes" tag="PWPC6" name="Awakened Blade"/>
    <tag group="cAttack" tag="Good"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="PathOfWar" tag="Class"/>
    <tag group="ClassSkill" tag="skPUAhypno"/>
    <tag group="ExtraLev1" tag="Manifester"/>
    <tag group="fCategory" tag="Combat"/>
    <tag group="fCategory" tag="Psionic"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassSkill" tag="skPUKnwPsi"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <bootstrap thing="cPWP6PthWr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP6StaIE">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="PWDisLevel"></bootstrap>
    <bootstrap thing="cPWP1Man">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP6BonFt">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWP6BonFt">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cCfgPWPC6"></bootstrap>
    <bootstrap thing="cPWP6StAw1">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWP6PcgDf">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPWP6Hypcg">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWP6ClrCn">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPWP6PcMnd">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPWP6StAw2">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWP6StAw3">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPWP6DFoc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10"><![CDATA[        ~ Have the PrC's maneuver configurator inherit the discipline list of the existing initiator class it follows
        perform hero.childfound[cPWP1Man].field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpPWPC6].pushtags[Discipline.?]]]></eval>
    </thing>
  <thing id="cPWAwkBld" name="Awakened Blade" description="Some wielders of psychic power seek to extend and stretch the depths of their psionic power to assist their abilities in many different ways. Some small select few, those who are quite gifted in the clairsentient arts, find that they are able to distil certain psionic powers into a fighting style of extreme potency. The style is a deadly mix of precognition abilities coupled with martial techniques that when utilized together, allows for its user to react to danger faster and defend himself while simultaneously mapping out his foe’s defenses for maximum effect. Awakened blades, as they are called, learn to use their precognitive mastery as both offense and defense in pursuit of greater psionic knowledge and personal glory or power." compset="ClassLevel" maxlimit="10">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassType" tag="Prestige"/>
    <bootstrap thing="cHelpPWPC6"></bootstrap>
    <link linkage="helper" thing="cHelpPWPC6"/>
    <exprreq message="Acrobatics 5 ranks required"><![CDATA[#skillranks[skAcrobat] >= 5]]></exprreq>
    <exprreq message="Autohypnosis 4 ranks required"><![CDATA[#skillranks[skPUAhypno] >= 4]]></exprreq>
    <exprreq message="Knowledge (Martial) 3 ranks required"><![CDATA[#skillranks[skPWKnowMa] >= 3]]></exprreq>
    <exprreq message="Knowledge (Psionics) 3 ranks required"><![CDATA[#skillranks[skPUKnwPsi] >= 3]]></exprreq>
    <exprreq message="Must know at least one martial stance"><![CDATA[hero.tagcount[HasStance.?] <> 0]]></exprreq>
    <exprreq message="Psionic Body feat required"><![CDATA[#hasfeat[fPUPsiBody] <> 0]]></exprreq>
    <exprreq message="Psionic Meditation feat required"><![CDATA[#hasfeat[fPUPsiMed] <> 0]]></exprreq>
    <prereq message="Must be able to manifest {i}offensive precognition{/i}">
      <validate><![CDATA[validif (hero.childfound[puPrecogO1].tagis[thing.user_added] <> 0.)]]></validate>
      </prereq>
    <prereq message="Must be able to use 2nd-level martial maneuvers">
      <validate><![CDATA[foreach pick in hero from PWManuever where "!mType.Stance"
  validif (eachpick.tagvalue[mLevel.?] >= 2)
nexteach]]></validate>
      </prereq>
    <prereq message="Must be able to manifest {i}defensive precognition{/i}">
      <validate><![CDATA[validif (hero.childfound[puPrecogD1].tagis[thing.user_added] <> 0.)]]></validate>
      </prereq>
    </thing>
  <thing id="cCfgPWPC6" name="Awakened Blade Maneuvers" compset="Configure" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClsCountAs" tag="cHelpPWPC6"/>
    <bootstrap thing="mHelpPWPC6"></bootstrap>
    <prereq message="You have too many Manuevers Readied.">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    <prereq message="You have activated more stances than allowed.">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    </thing>
  <thing id="cPWP6StAw1" name="Situational Awareness" description="At 1st level, awakened blades open their minds to the myriad of potential futures that could lead to his victory in battle and to his continued defense. Similar in effect to the danger sense psionic power, the character adds half his class level (rounded down, minimum of +1) to his initiative rolls as an insight bonus. He may also add this bonus to his AC as a dodge bonus or Reflex saves to avoid traps and their attacks. This bonus stacks with bonuses gained from the trap sense class feature. At 3rd level, the character gains the benefits of the uncanny dodge ability. At 9th level, the character gains the improved uncanny dodge ability." compset="ClSpecial" summary="Bonus to initiative and AC/Ref vs. traps equal to 1/2 your class level.">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Bonus is 1/2 class level
      field[abValue].value = round(field[xAllLev].value/2, 0, -1)

      ~ Initiative bonus
      #applybonus[BonInsight, hero.child[Initiative], field[abValue].value]

      if (hero.childfound[cTrapSense].tagis[Helper.ShowSpec] <> 0) then
        hero.child[cTrapSense].field[abValue].value += field[abValue].value
        hero.child[cTrapSense].field[abValue2].value += field[abValue].value
      else
        #situational_nonstatblock[hero.child[svRef],signed(field[abValue].value) & " bonus vs. traps",field[thingname].text]
        #situational_nonstatblock[hero.child[ArmorClass],signed(field[abValue].value) & " bonus vs. traps",field[thingname].text]
      endif]]></eval>
    </thing>
  <thing id="cPWP6StAw2" name="Situational Awareness (uncanny dodge)" description="At 3rd level, the character gains the benefits of the uncanny dodge ability." compset="ClSpecial" summary="Gain Uncanny Dodge">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="raUncanny"></bootstrap>
    </thing>
  <thing id="cPWP6StAw3" name="Situational Awareness (improved uncanny dodge)" description="At 9th level, the character gains the improved uncanny dodge ability." compset="ClSpecial" summary="Gain Improved Uncanny Dodge">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="raImpUncan"></bootstrap>
    </thing>
  <thing id="cPWP6DFoc" name="Deep Focus" description="The character gains the Deep Focus psionic feat as a bonus feat at 1st level." compset="ClSpecial" summary="Gain Deep Focus as a bonus feat">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="fPUDeepFoc">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    </thing>
  <thing id="cPWP6PthWr" name="Path of the Warrior" description="The awakened blade’s trip along the Path of War is one of constant devotion, and for those with a focused aptitude in the field of war with the psionic arts, their discipline is rewarded. If the character possesses levels in psychic warrior, then he adds his class level to his psychic warrior level for the purposes of determining the trance and maneuver abilities of his path abilities. If the character possessed levels in the soulknife base class, then the awakened blade counts all levels in this class as +1 to existing manifester level with regards to a soulknife’s mind blade enhancement bonus." compset="ClSpecial" summary="Continue to advance in trance/maneuver abilities and/or mind blade enhancement">
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[      ~ We're earlier than the normal test for whether we've reached the correct level, so we'll recreate that test here
      doneif (root.field[cTotalLev].value + field[xExtraLev].value + field[xEffectLev].value < tagvalue[ClSpecWhen.?])

      ~ Increase the enhanced mind blade class feature
      hero.childfound[cSknEnhMB].field[xExtraLev].value += (root.field[cTotalLev].value -1)]]></eval>
    </thing>
  <thing id="cPWP6StaIE" name="Stance of the Inner Eye" description="At 2nd level, the awakened blade’s precognitive abilities blend with his martial prowess to unlock an inner eye within his mind, all-seeing and hyper-aware of the dangers that surround him and ways to combat them. This inner sense allows the awakened blade to react to danger quickly, guide his attacks around the defenses of his enemies, and to land fierce blows as his mind traces out the myriad scenarios that could play out between himself and his foes. To enter this stance, as a swift action the awakened blade abandons a martial stance he is currently using. While in this stance, the character gains a +1 insight bonus for every three initiator levels he possesses (minimum +1) to his AC, attack and damage rolls, CMB checks, and to all saving throws. If caught in a situation where the character would be denied his Dexterity bonus, these bonuses do not apply. The character inflicts an additional 1d6 points of damage while in this stance at 2nd level, and this damage bonus improves to 2d6 points of damage at 7th level. This bonus damage is precision based, and creatures not subject to critical hits are immune to this additional damage." compset="ClSpecial" summary="Martial stance; grants insight bonuses and extra damage">
    <fieldval field="abValue" value="1"/>
    <fieldval field="abValue2" value="1"/>
    <tag group="mType" tag="Stance"/>
    <tag group="mInitAct" tag="Swift1"/>
    <tag group="mRange" tag="Personal"/>
    <tag group="mTarget" tag="You"/>
    <tag group="mDuration" tag="Stance"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PostAttr" priority="11000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If we're not enabled, get out now
      doneif (hero.tagis[PathOfWar.StaInnrEye] = 0)

      ~ Apply the PathOfWar.StanceOn tag
      perform hero.assign[PathOfWar.StanceOn]

      ~ Set bonus amount to 1/3 of our initiator level (min 1)
      var initLvl as number
      Call PWgetILvl
      field[abValue].value = maximum(1, round(initLvl/3,0,-1))

      ~ Add our bonus to AC, attack, damage, CMB, and saves
      #applybonus[BonInsight, hero.child[ArmorClass], field[abValue].value]
      #applybonus[BonInsight, hero.child[Attack], field[abValue].value]
      #applybonus[BonInsight, hero.child[Damage], field[abValue].value]
      #applybonus[BonInsight, hero.child[svAll], field[abValue].value]

      ~ Add another damage die at 7th level
      if (field[xTotalLev].value >= 7) then
        field[abValue2].value += 1
      endif

      ~ Apply bonus damage
      foreach pick in hero from BaseWep
        #extradamage[eachpick, signed(field[abValue2].value) & "d6 precision", field[thingname].text]
      nexteach]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If we're not enabled, get out now
      doneif (field[abilActive].value = 0)

      ~ Assign the tag that lets us know the ability is active.
      ~ We use this tag because this class's capstone turns this from a stance into a constant effect, so it works by assigning the tag whether or not we are activated.
      perform hero.assign[PathOfWar.StaInnrEye]]]></eval>
    <evalrule phase="PostAttr" priority="10000" message="Too many stances activated"><![CDATA[      ~ If we're not enabled, do nothing
      validif (field[abilActive].value = 0)

      ~ Make sure we don't exceed the allowed number of stances
      validif (hero.tagcount[PathOfWar.StanceOn] <= hero.tagcount[PathOfWar.StanceUp])]]></evalrule>
    </thing>
  <thing id="mHelpPW2" name="Stalker Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="6"/>
    <arrayval field="cManKnown" index="1" value="7"/>
    <arrayval field="cManKnown" index="2" value="8"/>
    <arrayval field="cManKnown" index="3" value="9"/>
    <arrayval field="cManKnown" index="4" value="10"/>
    <arrayval field="cManKnown" index="5" value="11"/>
    <arrayval field="cManKnown" index="6" value="12"/>
    <arrayval field="cManKnown" index="7" value="13"/>
    <arrayval field="cManKnown" index="8" value="14"/>
    <arrayval field="cManKnown" index="9" value="15"/>
    <arrayval field="cManKnown" index="10" value="16"/>
    <arrayval field="cManKnown" index="11" value="16"/>
    <arrayval field="cManKnown" index="12" value="17"/>
    <arrayval field="cManKnown" index="13" value="17"/>
    <arrayval field="cManKnown" index="14" value="18"/>
    <arrayval field="cManKnown" index="15" value="18"/>
    <arrayval field="cManKnown" index="16" value="19"/>
    <arrayval field="cManKnown" index="17" value="19"/>
    <arrayval field="cManKnown" index="18" value="20"/>
    <arrayval field="cManKnown" index="19" value="21"/>
    <arrayval field="cManReady" index="0" value="4"/>
    <arrayval field="cManReady" index="1" value="4"/>
    <arrayval field="cManReady" index="2" value="5"/>
    <arrayval field="cManReady" index="3" value="5"/>
    <arrayval field="cManReady" index="4" value="6"/>
    <arrayval field="cManReady" index="5" value="6"/>
    <arrayval field="cManReady" index="6" value="6"/>
    <arrayval field="cManReady" index="7" value="7"/>
    <arrayval field="cManReady" index="8" value="7"/>
    <arrayval field="cManReady" index="9" value="8"/>
    <arrayval field="cManReady" index="10" value="8"/>
    <arrayval field="cManReady" index="11" value="8"/>
    <arrayval field="cManReady" index="12" value="9"/>
    <arrayval field="cManReady" index="13" value="9"/>
    <arrayval field="cManReady" index="14" value="10"/>
    <arrayval field="cManReady" index="15" value="10"/>
    <arrayval field="cManReady" index="16" value="10"/>
    <arrayval field="cManReady" index="17" value="11"/>
    <arrayval field="cManReady" index="18" value="11"/>
    <arrayval field="cManReady" index="19" value="12"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="2"/>
    <arrayval field="cStances" index="2" value="2"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="3"/>
    <arrayval field="cStances" index="5" value="3"/>
    <arrayval field="cStances" index="6" value="3"/>
    <arrayval field="cStances" index="7" value="4"/>
    <arrayval field="cStances" index="8" value="4"/>
    <arrayval field="cStances" index="9" value="4"/>
    <arrayval field="cStances" index="10" value="5"/>
    <arrayval field="cStances" index="11" value="5"/>
    <arrayval field="cStances" index="12" value="5"/>
    <arrayval field="cStances" index="13" value="5"/>
    <arrayval field="cStances" index="14" value="6"/>
    <arrayval field="cStances" index="15" value="6"/>
    <arrayval field="cStances" index="16" value="6"/>
    <arrayval field="cStances" index="17" value="6"/>
    <arrayval field="cStances" index="18" value="7"/>
    <arrayval field="cStances" index="19" value="7"/>
    <tag group="Discipline" tag="BrokenBlad"/>
    <tag group="Discipline" tag="SteelSerp"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="Discipline" tag="SolarWind"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <link linkage="powCfg" thing="cCfgPW2"/>
    <link linkage="powClass" thing="cHelpPW2"/>
    </thing>
  <thing id="mHelpPW3" name="Warder Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="5"/>
    <arrayval field="cManKnown" index="1" value="6"/>
    <arrayval field="cManKnown" index="2" value="7"/>
    <arrayval field="cManKnown" index="3" value="7"/>
    <arrayval field="cManKnown" index="4" value="8"/>
    <arrayval field="cManKnown" index="5" value="8"/>
    <arrayval field="cManKnown" index="6" value="9"/>
    <arrayval field="cManKnown" index="7" value="9"/>
    <arrayval field="cManKnown" index="8" value="10"/>
    <arrayval field="cManKnown" index="9" value="10"/>
    <arrayval field="cManKnown" index="10" value="11"/>
    <arrayval field="cManKnown" index="11" value="11"/>
    <arrayval field="cManKnown" index="12" value="12"/>
    <arrayval field="cManKnown" index="13" value="12"/>
    <arrayval field="cManKnown" index="14" value="13"/>
    <arrayval field="cManKnown" index="15" value="13"/>
    <arrayval field="cManKnown" index="16" value="14"/>
    <arrayval field="cManKnown" index="17" value="14"/>
    <arrayval field="cManKnown" index="18" value="15"/>
    <arrayval field="cManKnown" index="19" value="16"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="2"/>
    <arrayval field="cStances" index="2" value="2"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="3"/>
    <arrayval field="cStances" index="5" value="3"/>
    <arrayval field="cStances" index="6" value="3"/>
    <arrayval field="cStances" index="7" value="4"/>
    <arrayval field="cStances" index="8" value="4"/>
    <arrayval field="cStances" index="9" value="4"/>
    <arrayval field="cStances" index="10" value="5"/>
    <arrayval field="cStances" index="11" value="5"/>
    <arrayval field="cStances" index="12" value="5"/>
    <arrayval field="cStances" index="13" value="5"/>
    <arrayval field="cStances" index="14" value="6"/>
    <arrayval field="cStances" index="15" value="6"/>
    <arrayval field="cStances" index="16" value="6"/>
    <arrayval field="cStances" index="17" value="6"/>
    <arrayval field="cStances" index="18" value="7"/>
    <arrayval field="cStances" index="19" value="7"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="4"/>
    <arrayval field="cManReady" index="2" value="4"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="5"/>
    <arrayval field="cManReady" index="5" value="5"/>
    <arrayval field="cManReady" index="6" value="5"/>
    <arrayval field="cManReady" index="7" value="6"/>
    <arrayval field="cManReady" index="8" value="6"/>
    <arrayval field="cManReady" index="9" value="6"/>
    <arrayval field="cManReady" index="10" value="7"/>
    <arrayval field="cManReady" index="11" value="7"/>
    <arrayval field="cManReady" index="12" value="7"/>
    <arrayval field="cManReady" index="13" value="8"/>
    <arrayval field="cManReady" index="14" value="8"/>
    <arrayval field="cManReady" index="15" value="8"/>
    <arrayval field="cManReady" index="16" value="9"/>
    <arrayval field="cManReady" index="17" value="9"/>
    <arrayval field="cManReady" index="18" value="9"/>
    <arrayval field="cManReady" index="19" value="10"/>
    <tag group="Discipline" tag="IronTort"/>
    <tag group="Discipline" tag="PrimalFury"/>
    <tag group="Discipline" tag="BrokenBlad"/>
    <tag group="UseAttr" tag="aINT"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <link linkage="powCfg" thing="cCfgPW3"/>
    <link linkage="powClass" thing="cHelpPW3"/>
    </thing>
  <thing id="mHelpPWPC6" name="Awakened Blade Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="1" value="1"/>
    <arrayval field="cManKnown" index="2" value="1"/>
    <arrayval field="cManKnown" index="3" value="2"/>
    <arrayval field="cManKnown" index="4" value="2"/>
    <arrayval field="cManKnown" index="5" value="3"/>
    <arrayval field="cManKnown" index="6" value="3"/>
    <arrayval field="cManKnown" index="7" value="4"/>
    <arrayval field="cManKnown" index="8" value="4"/>
    <arrayval field="cManKnown" index="9" value="5"/>
    <arrayval field="cManReady" index="2" value="1"/>
    <arrayval field="cManReady" index="3" value="1"/>
    <arrayval field="cManReady" index="4" value="1"/>
    <arrayval field="cManReady" index="5" value="2"/>
    <arrayval field="cManReady" index="6" value="2"/>
    <arrayval field="cManReady" index="7" value="2"/>
    <arrayval field="cManReady" index="8" value="3"/>
    <arrayval field="cManReady" index="9" value="3"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="1"/>
    <arrayval field="cStances" index="4" value="1"/>
    <arrayval field="cStances" index="5" value="1"/>
    <arrayval field="cStances" index="6" value="1"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="2"/>
    <link linkage="powClass" thing="cHelpPWPC6"/>
    <link linkage="powCfg" thing="cCfgPWPC6"/>
    </thing>
  <thing id="mHelpPWPC1" name="Battle Templar Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="1" value="1"/>
    <arrayval field="cManKnown" index="2" value="1"/>
    <arrayval field="cManKnown" index="3" value="2"/>
    <arrayval field="cManKnown" index="4" value="2"/>
    <arrayval field="cManKnown" index="5" value="3"/>
    <arrayval field="cManKnown" index="6" value="3"/>
    <arrayval field="cManKnown" index="7" value="4"/>
    <arrayval field="cManKnown" index="8" value="4"/>
    <arrayval field="cManKnown" index="9" value="5"/>
    <arrayval field="cManReady" index="2" value="1"/>
    <arrayval field="cManReady" index="3" value="1"/>
    <arrayval field="cManReady" index="4" value="1"/>
    <arrayval field="cManReady" index="5" value="2"/>
    <arrayval field="cManReady" index="6" value="2"/>
    <arrayval field="cManReady" index="7" value="2"/>
    <arrayval field="cManReady" index="8" value="3"/>
    <arrayval field="cManReady" index="9" value="3"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="1"/>
    <arrayval field="cStances" index="4" value="1"/>
    <arrayval field="cStances" index="5" value="1"/>
    <arrayval field="cStances" index="6" value="1"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="2"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <link linkage="powClass" thing="cHelpPWPC1"/>
    <link linkage="powCfg" thing="cCfgPWPC1"/>
    </thing>
  <thing id="mHelpPWPC3" name="Dragon Fury Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="1" value="1"/>
    <arrayval field="cManKnown" index="2" value="1"/>
    <arrayval field="cManKnown" index="3" value="2"/>
    <arrayval field="cManKnown" index="4" value="2"/>
    <arrayval field="cManKnown" index="5" value="3"/>
    <arrayval field="cManKnown" index="6" value="3"/>
    <arrayval field="cManKnown" index="7" value="4"/>
    <arrayval field="cManKnown" index="8" value="4"/>
    <arrayval field="cManKnown" index="9" value="5"/>
    <arrayval field="cManReady" index="2" value="1"/>
    <arrayval field="cManReady" index="3" value="1"/>
    <arrayval field="cManReady" index="4" value="1"/>
    <arrayval field="cManReady" index="5" value="2"/>
    <arrayval field="cManReady" index="6" value="2"/>
    <arrayval field="cManReady" index="7" value="2"/>
    <arrayval field="cManReady" index="8" value="3"/>
    <arrayval field="cManReady" index="9" value="3"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="1"/>
    <arrayval field="cStances" index="4" value="1"/>
    <arrayval field="cStances" index="5" value="1"/>
    <arrayval field="cStances" index="6" value="1"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="2"/>
    <tag group="Discipline" tag="BrokenBlad"/>
    <tag group="Discipline" tag="PrimalFury"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <link linkage="powCfg" thing="cCfgPWPC3"/>
    <link linkage="powClass" thing="cHelpPWPC3"/>
    </thing>
  <thing id="mHelpPWPC2" name="Bladecaster Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="1" value="1"/>
    <arrayval field="cManKnown" index="2" value="1"/>
    <arrayval field="cManKnown" index="3" value="2"/>
    <arrayval field="cManKnown" index="4" value="2"/>
    <arrayval field="cManKnown" index="5" value="3"/>
    <arrayval field="cManKnown" index="6" value="3"/>
    <arrayval field="cManKnown" index="7" value="4"/>
    <arrayval field="cManKnown" index="8" value="4"/>
    <arrayval field="cManKnown" index="9" value="5"/>
    <arrayval field="cManReady" index="2" value="1"/>
    <arrayval field="cManReady" index="3" value="1"/>
    <arrayval field="cManReady" index="4" value="1"/>
    <arrayval field="cManReady" index="5" value="2"/>
    <arrayval field="cManReady" index="6" value="2"/>
    <arrayval field="cManReady" index="7" value="2"/>
    <arrayval field="cManReady" index="8" value="3"/>
    <arrayval field="cManReady" index="9" value="3"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="1"/>
    <arrayval field="cStances" index="4" value="1"/>
    <arrayval field="cStances" index="5" value="1"/>
    <arrayval field="cStances" index="6" value="1"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="2"/>
    <link linkage="powClass" thing="cHelpPWPC2"/>
    <link linkage="powCfg" thing="cCfgPWPC2"/>
    </thing>
  <thing id="mHelpPWPC4" name="Mage Hunter Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="1" value="1"/>
    <arrayval field="cManKnown" index="2" value="1"/>
    <arrayval field="cManKnown" index="3" value="2"/>
    <arrayval field="cManKnown" index="4" value="2"/>
    <arrayval field="cManKnown" index="5" value="3"/>
    <arrayval field="cManKnown" index="6" value="3"/>
    <arrayval field="cManKnown" index="7" value="4"/>
    <arrayval field="cManKnown" index="8" value="4"/>
    <arrayval field="cManKnown" index="9" value="5"/>
    <arrayval field="cManReady" index="2" value="1"/>
    <arrayval field="cManReady" index="3" value="1"/>
    <arrayval field="cManReady" index="4" value="1"/>
    <arrayval field="cManReady" index="5" value="2"/>
    <arrayval field="cManReady" index="6" value="2"/>
    <arrayval field="cManReady" index="7" value="2"/>
    <arrayval field="cManReady" index="8" value="3"/>
    <arrayval field="cManReady" index="9" value="3"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="1"/>
    <arrayval field="cStances" index="4" value="1"/>
    <arrayval field="cStances" index="5" value="1"/>
    <arrayval field="cStances" index="6" value="1"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="2"/>
    <tag group="Discipline" tag="ScarletThr"/>
    <tag group="Discipline" tag="SolarWind"/>
    <tag group="Discipline" tag="SteelSerp"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <link linkage="powClass" thing="cHelpPWPC4"/>
    <link linkage="powCfg" thing="cCfgPWPC4"/>
    </thing>
  <thing id="mHelpPWPC5" name="Umbral Blade Manuevers" compset="PWManList">
    <arrayval field="cManKnown" index="1" value="1"/>
    <arrayval field="cManKnown" index="2" value="1"/>
    <arrayval field="cManKnown" index="3" value="2"/>
    <arrayval field="cManKnown" index="4" value="2"/>
    <arrayval field="cManKnown" index="5" value="3"/>
    <arrayval field="cManKnown" index="6" value="3"/>
    <arrayval field="cManKnown" index="7" value="4"/>
    <arrayval field="cManKnown" index="8" value="4"/>
    <arrayval field="cManKnown" index="9" value="5"/>
    <arrayval field="cManReady" index="2" value="1"/>
    <arrayval field="cManReady" index="3" value="1"/>
    <arrayval field="cManReady" index="4" value="1"/>
    <arrayval field="cManReady" index="5" value="2"/>
    <arrayval field="cManReady" index="6" value="2"/>
    <arrayval field="cManReady" index="7" value="2"/>
    <arrayval field="cManReady" index="8" value="3"/>
    <arrayval field="cManReady" index="9" value="3"/>
    <arrayval field="cStances" index="4" value="1"/>
    <arrayval field="cStances" index="5" value="1"/>
    <arrayval field="cStances" index="6" value="1"/>
    <arrayval field="cStances" index="7" value="1"/>
    <arrayval field="cStances" index="8" value="1"/>
    <arrayval field="cStances" index="9" value="1"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <tag group="Discipline" tag="SteelSerp"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <tag group="Discipline" tag="BlackSerph"/>
    <link linkage="powCfg" thing="cCfgPWPC5"/>
    <link linkage="powClass" thing="cHelpPWPC5"/>
    </thing>
  <thing id="cPWP6BonFt" name="Bonus Feat" description="The awakened blade gains a bonus combat feat or psionic feat of his choice at 4th level. He gains an additional bonus combat feat or psionic feat of his choice at 8th level. The character must meet all prerequisites for this feat to select it." compset="ClSpecial" summary="Gain a bonus combat or psionic feat">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Hide" tag="Statblock"/>
    <tag group="Helper" tag="SpecUp"/>
    </thing>
  <thing id="cPWP6PcgDf" name="Precognitive Defenses" description="At 5th level, the mind’s eye within the awakened blade’s defensive senses is capable of reacting to multiple dangerous scenarios at the same time. The character may expend his psionic focus as a free action to initiate a readied counter, even if he has already used his immediate or swift action this round. This specifically allows for the use of a free action on another creature’s turn." compset="ClSpecial" summary="Expend psionic focus to use a counter as a free action">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Free"/>
    </thing>
  <thing id="cPWP6Hypcg" name="Hypercognitive Focus" description="At 6th level, an awakened blade’s mind is able to anticipate his needs and subconsciously works to further his effectiveness. Whenever the character recovers one or more maneuvers, he may regain psionic focus as a free action as part of his maneuver recovery. He may only do this one time in a given round. Alternately, the character may expend his psionic focus when manifesting a psionic power and recover an expended maneuver." compset="ClSpecial" summary="Regain psionic focus when you recover a maneuver">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="Free"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWP6ClrCn" name="Clairsentient Counter" description="By anticipating the attack before the attacker ever considers making it, the awakened blade using this martial technique may act faster than his opponent can even think. To use this ability, the character expends a readied maneuver and his psionic focus as an immediate action; the clairsentient counter is used in response to attack against him of any sort (be it a melee or ranged attack, spell, power, or other spell-like or supernatural effect) and grants the character a standard or move action that he must use as part of this counter. This movement occurs before the attack is resolved but after the attack is made." compset="ClSpecial" summary="Spend a maneuver and your focus, gain a standard or move action with a counter">
    <tag group="abAction" tag="Immediate"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWP6PcMnd" name="Pretercognitive Mind" description="At 10th level, the awakened blade’s reactive capabilities are so intense that his subconscious mind must manage them for him as they otherwise would never give him a moment’s rest. While psionically focused, the character is considered to have the benefits of the Stance of the Inner Eye without needing to initiate the stance. He may continue to gain these benefits while he adopts any other martial stance that he knows and gain the benefits of both stances." compset="ClSpecial" summary="Stance of the Inner Eye is always on">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="None"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Look for the Stance of the Inner Eye special, because we're going to do stuff to it
      perform hero.childfound[cPWP6StaIE].setfocus
      doneif (state.isfocus = 0)

      ~ Add the same tag that Stance of the Inner Eye normally adds when activated, making its effect constant
      perform hero.assign[PathOfWar.StaInnrEye]

      ~ Stance of the Inner Eye stops being a stance, so we strip the relevant tags from it
      perform focus.delete[mDuration.?]
      perform focus.delete[mType.?]
      perform focus.delete[mLevel.?]
      perform focus.delete[mInitAct.?]
      perform focus.delete[Discipline.?]
      perform focus.delete[mRange.?]
      perform focus.delete[mTarget.?]

      ~ Since the stance doesn't need to be activated anymore, just remove its activation checkbox
      perform focus.delete[User.Activation]]]></eval>
    </thing>
  <thing id="cPW2ManRec" name="Stalker Maneuver Recovery" description="Stalkers may recover their maneuvers in one of two ways. The stalker may either center his awareness of the combat momentarily as a standard action and recover a single expended maneuver of his choice.\n\nAlternately, he may recover his Wisdom modifier in expended maneuvers (min of 2) as a full round action that does not provoke attacks of opportunity, centering his spirit completely to re-align his perceptions of the battle and change his place in it. When recovering his maneuvers as a full round action, he may move up to his base speed and adds a +4 insight bonus to his Armor Class as his ki defends his form while he re-centers himself. The next attack or martial strike he attempts after recovering his maneuvers adds his deadly strike&apos;s damage to the attack if successful.\n\n{b}NOTE:{/b}  When using the full-round recovery, check &quot;Full-round recovery&quot; on the In-Play tab to gain the AC bonus." compset="ClSpecial">
    <comment>abValue = Minimum manuevers recovered
abValue2 = AC insight bonus</comment>
    <fieldval field="abValue" value="2"/>
    <fieldval field="abValue2" value="4"/>
    <fieldval field="actName" value="Full-round recovery"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="abAction" tag="FullRd"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If initiating modifer is higher than 2, replace number of maneuvers recovered
      perform hero.childfound[mHelpPW2].pulltags[UseAttr.?]
      var initMod as number
      foreach pick in hero from BaseAttr where tagids[UseAttr.?]
        initMod = eachpick.field[aModBonus].value
      nexteach
      field[abValue].value = maximum(field[abValue].value, initMod)

      ~ Stop now if we're not activated
      doneif (field[abilActive].value = 0)

      ~ Add insight bonus to AC
      #applybonus[BonInsight, hero.child[ArmorClass], field[abValue2].value]]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[      this.field[actName].text &= " (" & field[abValue].value & " maneuvers)"]]></eval>
    </thing>
  </document>
