<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_BasicPack_ShadowChemosh - Adjustments Spells"/>
  <fileinfo>
    <info_author>Author:  Tim Shadow
      Email: shadowchemosh@yahoo.com</info_author>
    <info_history/>
    </fileinfo>
  <thing id="pS2CustSpe" name="- Custom Spell Text -" description="Add this adjustment to be able to track an active spell that is not currently availble to be added. Once added type into the (Source) section with the name of the spell and the name will change to match.\n\nThis is most useful when you want to track an active spell or affect that is NOT available in Hero Lab (ie a 3PP spell or effect that is unqiue to a Campaign/Adventure)." compset="InPlay">
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="AdjSpell"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Render" priority="99999999"><![CDATA[
      ~ If the default "Source" id is changed then attempt to use it.
      If (compare(field[pSource].text,"(source)") <> 0) Then
        ~ Make sure that we are not blank either.
        If (compare(field[pSource].text,"") <> 0) Then
           field[livename].text = field[pSource].text
        Endif
      Endif]]></eval>
    </thing>
  <thing id="pS2CustSp2" name="- Custom Spell Selection -" description="Add this adjustment to be able to track an active spell that is not currently availble to be added. Once added select the spell from the drop down list and this adjustment&apos;s name of name will change to match. Plus the spell information will be added to the adjustment.\n\nThis is most useful when you want to track an active spell that is available in Hero Lab." compset="InPlay" summary="Add Spell Text to Spell Adjustments section">
    <usesource source="srcS2Adjus"/>
    <tag group="Adjustment" tag="S2Custom"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Helper" tag="AdjSpell" name="Spell Adjustment" abbrev="Spell Adjustment"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreLevel" priority="11000"><![CDATA[
      ~ Things on Hero
      field[pUsePicks].value = 0
      ~ Set search to daze or prone
      field[pCandExpr].text = "component.BaseSpell"]]></eval>
    <eval phase="PreLevel" priority="5000" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ If nothing chosen, get out now
      doneif (field[pChosen].ischosen <> 1)

      ~Pull the tags and assign to the adjustment
      perform field[pChosen].chosen.pulltags[SpInfo.?]
      ~ Set our live name to the name of the spell
      field[livename].text = field[pChosen].chosen.field[name].text
      ~ Set our text to the name of the desc on the spell
      field[abText].text = field[pChosen].chosen.field[CustDesc].text]]></eval>
    </thing>
  <thing id="pS2SpelWep" name="- Custom Spell Weapon -" description="This adjustment allows you to add a customizable Spell Weapon to your character. This allows you to set the spell name and spell dice to roll so that if you are using the iPad you can have it roll the damage for you.\n\n{B}Note:{/b} Add this spell adjustment and then select type of spell as a Area of Effect (AoE), Ranged Touch Attack, or Touch Attack.  Finally set the spells damage dice, defualts to 1d4+1, and then change &quot;Spell Weapon&quot; text to be the name of the spell (ie Fireball or Scorching Ray)." compset="InPlay">
    <fieldval field="pSource" value="1d4+1"/>
    <fieldval field="pDuration" value="Spell Weapon"/>
    <fieldval field="pUsePicks" value="1"/>
    <fieldval field="pCandExpr2" value="component.BaseWep &amp; PackHelper.Touch"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="NoIncr"/>
    <tag group="Helper" tag="CoreCampOK"/>
    <tag group="Helper" tag="AdjSpell"/>
    <tag group="Helper" tag="AdjPerm"/>
    <tag group="Helper" tag="AdjInfo"/>
    <tag group="Adjust2nd" tag="S2Custom"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="wS2SpelWep">
      <containerreq phase="First" priority="457"><![CDATA[fieldval:pIsOn <> 0]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="10000"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)
      ~ If nothing chosen, get out now
      doneif (field[pChosen2].ischosen <> 1)
      ~ If AoE weapon selected get out now!
      doneif (field[pChosen2].chosen.tagis[thingid.wS2AoE] = 1)

      ~ Pull all weapon tags
      perform field[pChosen2].chosen.pulltags[wClass.?]
      perform field[pChosen2].chosen.pulltags[wCritMin.?]
      perform field[pChosen2].chosen.pulltags[wCritMult.?]
      perform field[pChosen2].chosen.pulltags[wMain.?]
      perform field[pChosen2].chosen.pulltags[wProfReq.?]
      perform field[pChosen2].chosen.pulltags[wCategory.?]
      perform field[pChosen2].chosen.pulltags[IsWeapon.?]
      ]]></eval>
    </thing>
  <thing id="pS2AwakVer" name="Awaken (Vermin)" description="You awaken a tree or animal to human-like sentience. To succeed, you must make a Will save (DC 10 + the animal&apos;s current HD, or the HD the tree will have once awakened). The awakened animal or tree is friendly toward you. You have no special empathy or connection with a creature you awaken, although it serves you in specific tasks or endeavors if you communicate your desires to it. If you cast {i}awaken{/i} again, any previously awakened creatures remain friendly to you, but they no longer undertake tasks for you unless it is in their best interests.\n\nAn awakened tree has characteristics as if it were an animated object (see the {i}Pathfinder RPG Bestiary{/i}), except that it gains the plant type and its Intelligence, Wisdom, and Charisma scores are each 3d6.\n\nAn awakened plant gains the ability to move its limbs, roots, vines, creepers, and so forth, and it has senses similar to a human&apos;s.\n\nAn awakened animal gets 3d6 Intelligence, +1d3 Charisma, and +2 HD. Its type becomes magical beast (augmented animal). An awakened animal can&apos;t serve as an animal companion, familiar, or special mount.\n\nAn awakened tree or animal can speak one language that you know, plus one additional language that you know per point of Intelligence bonus (if any). This spell does not function on an animal or plant with an Intelligence greater than 2.\n\n{b}Note{/b}: The selector is used to select the amount of Intelligence ADDED by the spell (3d6).\n\n{b}Note{/b}: An additional language slot will be added so that the user can choose which language was gained for free.\n\n{b}Note:{/b} To get the additional Hit Dice to display you have two options. 1) Turn the character into a NPC.  2) Press CTRL-K and turn on &quot;House Rules-&gt;Allow PCs to add Bonus HD&quot;." compset="InPlay" uniqueness="unique">
    <fieldval field="pMinimum" value="3"/>
    <fieldval field="pMaximum" value="18"/>
    <usesource source="srcS2Adjus"/>
    <tag group="Helper" tag="AdjSpell"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="NoPathSoc"/>
    <bootstrap thing="pAwaAniCHA"></bootstrap>
    <bootstrap thing="tpMagBeast"></bootstrap>
    <bootstrap thing="cBonusHD">
      <autotag group="Helper" tag="CLErrHP"/>
      </bootstrap>
    <bootstrap thing="cBonusHD">
      <autotag group="Helper" tag="CLErrHP"/>
      </bootstrap>
    <eval phase="PreAttr" priority="10000" index="2"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ Vermin now have a INT. Or at least most gamers think so
      ~ Remove the No Score tag from INT ability pick
      perform hero.child[aINT].delete[Helper.NoScore]

      ~ add the selected amount to our INT
      hero.child[aINT].field[aStartMod].value += field[pAdjust].value]]></eval>
    <eval phase="First" priority="510"><![CDATA[
      ~ If we're not enabled, get out now
      doneif (field[pIsOn].value = 0)

      ~ we become a magical beast
      perform hero.assign[TypeAndAug.tpMagBeast]

      ~ since vermin won't have any bonus languages,
      ~ but we now get 1 free
      ~ language, add a language slot
      herofield[tLangsSta].value += 1

      ~ since the language list for an awakened animal is rather
      ~ uncertain, we'll
      ~ just go ahead and grant them access to all languages
      perform hero.assign[Language.Any]

      hero.findchild[BaseRace].field[rINT].value = -9]]></eval>
    <exprreq message="Cannot be cast on a familiar, animal companion, or special mount.">tagis[CompIs.?] = 0</exprreq>
    <prereq message="Can only be applied to an vermin." iserror="no">
      <validate><![CDATA[
        ~ once we've been selected, we're fine
        validif (@ispick <> 0)

        ~ we're valid if the hero is an vermin
        validif (hero.tagis[Race.tpVermin] <> 0)]]></validate>
      </prereq>
    </thing>
  </document>
